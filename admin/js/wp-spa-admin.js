/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../node_modules/exports-loader/index.js?CSSParser!./vendors/cssParser.js":
/*!************************************************************************************************!*\
  !*** /Users/kah8br/nodejs/wp-spa/node_modules/exports-loader?CSSParser!./vendors/cssParser.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* ***** BEGIN LICENSE BLOCK *****\n * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n *\n * The contents of this file are subject to the Mozilla Public License Version\n * 1.1 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n *\n * The Original Code is mozilla.org code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 1998\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   emk <VYV03354@nifty.ne.jp>\n *   Daniel Glazman <glazman@netscape.com>\n *   L. David Baron <dbaron@dbaron.org>\n *   Boris Zbarsky <bzbarsky@mit.edu>\n *   Mats Palmgren <mats.palmgren@bredband.net>\n *   Christian Biesinger <cbiesinger@web.de>\n *   Jeff Walden <jwalden+code@mit.edu>\n *   Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>, Collabora Ltd.\n *   Siraj Razick <siraj.razick@collabora.co.uk>, Collabora Ltd.\n *   Daniel Glazman <daniel.glazman@disruptive-innovations.com>\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either of the GNU General Public License Version 2 or later (the \"GPL\"),\n * or the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the MPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the MPL, the GPL or the LGPL.\n *\n * ***** END LICENSE BLOCK ***** */\n\nvar kCHARSET_RULE_MISSING_SEMICOLON = \"Missing semicolon at the end of @charset rule\";\nvar kCHARSET_RULE_CHARSET_IS_STRING = \"The charset in the @charset rule should be a string\";\nvar kCHARSET_RULE_MISSING_WS = \"Missing mandatory whitespace after @charset\";\nvar kIMPORT_RULE_MISSING_URL = \"Missing URL in @import rule\";\nvar kURL_EOF = \"Unexpected end of stylesheet\";\nvar kURL_WS_INSIDE = \"Multiple tokens inside a url() notation\";\nvar kVARIABLES_RULE_POSITION = \"@variables rule invalid at this position in the stylesheet\";\nvar kIMPORT_RULE_POSITION = \"@import rule invalid at this position in the stylesheet\";\nvar kNAMESPACE_RULE_POSITION = \"@namespace rule invalid at this position in the stylesheet\";\nvar kCHARSET_RULE_CHARSET_SOF = \"@charset rule invalid at this position in the stylesheet\";\nvar kUNKNOWN_AT_RULE = \"Unknow @-rule\";\n\n/* FROM http://peter.sh/data/vendor-prefixed-css.php?js=1 */\n\nvar kCSS_VENDOR_VALUES = {\n  \"-moz-box\":             {\"webkit\": \"-webkit-box\",        \"presto\": \"\", \"trident\": \"\", \"generic\": \"box\" },\n  \"-moz-inline-box\":      {\"webkit\": \"-webkit-inline-box\", \"presto\": \"\", \"trident\": \"\", \"generic\": \"inline-box\" },\n  \"-moz-initial\":         {\"webkit\": \"\",                   \"presto\": \"\", \"trident\": \"\", \"generic\": \"initial\" },\n  \"flex\":                 {\"webkit\": \"-webkit-flex\",       \"presto\": \"\", \"trident\": \"\", \"generic\": \"\" },\n  \"inline-flex\":          {\"webkit\": \"-webkit-inline-flex\", \"presto\": \"\", \"trident\": \"\", \"generic\": \"\" },\n\n  \"linear-gradient\": {\"webkit20110101\":FilterLinearGradient,\n                           \"webkit\": FilterLinearGradient,\n                           \"presto\": FilterLinearGradient,\n                           \"trident\": FilterLinearGradient,\n                           \"gecko1.9.2\": FilterLinearGradient },\n  \"repeating-linear-gradient\": {\"webkit20110101\":FilterLinearGradient,\n                           \"webkit\": FilterLinearGradient,\n                           \"presto\": FilterLinearGradient,\n                           \"trident\": FilterLinearGradient,\n                           \"gecko1.9.2\": FilterLinearGradient },\n\n  \"radial-gradient\": {\"webkit20110101\":FilterRadialGradient,\n                           \"webkit\": FilterRadialGradient,\n                           \"presto\": FilterRadialGradient,\n                           \"trident\": FilterRadialGradient,\n                           \"gecko1.9.2\": FilterRadialGradient },\n  \"repeating-radial-gradient\": {\"webkit20110101\":FilterRadialGradient,\n                           \"webkit\": FilterRadialGradient,\n                           \"presto\": FilterRadialGradient,\n                           \"trident\": FilterRadialGradient,\n                           \"gecko1.9.2\": FilterRadialGradient }\n};\n\nvar kCSS_PREFIXED_VALUE = [\n  {\"gecko\": \"-moz-box\", \"webkit\": \"-moz-box\", \"presto\": \"\", \"trident\": \"\", \"generic\": \"box\"}\n];\n\nvar kCSS_VENDOR_PREFIXES = \n{\"lastUpdate\":1374677405,\"properties\":[\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-accelerator\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-wap-accesskey\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-align-content\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"align-items\",\"webkit\":\"-webkit-align-items\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"align-self\",\"webkit\":\"-webkit-align-self\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"animation\",\"webkit\":\"-webkit-animation\",\"presto\":\"\",\"trident\":\"animation\",\"status\":\"WD\"},\n{\"gecko\":\"animation-delay\",\"webkit\":\"-webkit-animation-delay\",\"presto\":\"\",\"trident\":\"animation-delay\",\"status\":\"WD\"},\n{\"gecko\":\"animation-direction\",\"webkit\":\"-webkit-animation-direction\",\"presto\":\"\",\"trident\":\"animation-direction\",\"status\":\"WD\"},\n{\"gecko\":\"animation-duration\",\"webkit\":\"-webkit-animation-duration\",\"presto\":\"\",\"trident\":\"animation-duration\",\"status\":\"WD\"},\n{\"gecko\":\"animation-fill-mode\",\"webkit\":\"-webkit-animation-fill-mode\",\"presto\":\"\",\"trident\":\"animation-fill-mode\",\"status\":\"ED\"},\n{\"gecko\":\"animation-iteration-count\",\"webkit\":\"-webkit-animation-iteration-count\",\"presto\":\"\",\"trident\":\"animation-iteration-count\",\"status\":\"WD\"},\n{\"gecko\":\"animation-name\",\"webkit\":\"-webkit-animation-name\",\"presto\":\"\",\"trident\":\"animation-name\",\"status\":\"WD\"},\n{\"gecko\":\"animation-play-state\",\"webkit\":\"-webkit-animation-play-state\",\"presto\":\"\",\"trident\":\"animation-play-state\",\"status\":\"WD\"},\n{\"gecko\":\"animation-timing-function\",\"webkit\":\"-webkit-animation-timing-function\",\"presto\":\"\",\"trident\":\"animation-timing-function\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-app-region\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-appearance\",\"webkit\":\"-webkit-appearance\",\"presto\":\"\",\"trident\":\"\",\"status\":\"CR\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-aspect-ratio\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"backface-visibility\",\"webkit\":\"-webkit-backface-visibility\",\"presto\":\"\",\"trident\":\"backface-visibility\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-background-blend-mode\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"background-clip\",\"webkit\":\"-webkit-background-clip\",\"presto\":\"background-clip\",\"trident\":\"background-clip\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-background-composite\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-background-inline-policy\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"background-origin\",\"webkit\":\"-webkit-background-origin\",\"presto\":\"background-origin\",\"trident\":\"background-origin\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"background-position-x\",\"presto\":\"\",\"trident\":\"-ms-background-position-x\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"background-position-y\",\"presto\":\"\",\"trident\":\"-ms-background-position-y\",\"status\":\"\"},\n{\"gecko\":\"background-size\",\"webkit\":\"-webkit-background-size\",\"presto\":\"background-size\",\"trident\":\"background-size\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-behavior\",\"status\":\"\"},\n{\"gecko\":\"-moz-binding\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-blend-mode\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-block-progression\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-after-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-after-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-after-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-before-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-before-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-before-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-bottom-colors\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"border-bottom-left-radius\",\"webkit\":\"-webkit-border-bottom-left-radius\",\"presto\":\"border-bottom-left-radius\",\"trident\":\"border-bottom-left-radius\",\"status\":\"WD\"},\n{\"gecko\":\"border-bottom-right-radius\",\"webkit\":\"-webkit-border-bottom-right-radius\",\"presto\":\"border-bottom-right-radius\",\"trident\":\"border-bottom-right-radius\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-border-end\",\"webkit\":\"-webkit-border-end\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-end-color\",\"webkit\":\"-webkit-border-end-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-end-style\",\"webkit\":\"-webkit-border-end-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-end-width\",\"webkit\":\"-webkit-border-end-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-fit\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-horizontal-spacing\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"border-image\",\"webkit\":\"-webkit-border-image\",\"presto\":\"-o-border-image\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-border-left-colors\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"border-radius\",\"webkit\":\"-webkit-border-radius\",\"presto\":\"border-radius\",\"trident\":\"border-radius\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-border-right-colors\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-border-start\",\"webkit\":\"-webkit-border-start\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-start-color\",\"webkit\":\"-webkit-border-start-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-start-style\",\"webkit\":\"-webkit-border-start-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-start-width\",\"webkit\":\"-webkit-border-start-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-border-top-colors\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"border-top-left-radius\",\"webkit\":\"-webkit-border-top-left-radius\",\"presto\":\"border-top-left-radius\",\"trident\":\"border-top-left-radius\",\"status\":\"WD\"},\n{\"gecko\":\"border-top-right-radius\",\"webkit\":\"-webkit-border-top-right-radius\",\"presto\":\"border-top-right-radius\",\"trident\":\"border-top-right-radius\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-border-vertical-spacing\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-box-align\",\"webkit\":\"-webkit-box-align\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-box-decoration-break\",\"presto\":\"box-decoration-break\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-direction\",\"webkit\":\"-webkit-box-direction\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-flex\",\"webkit\":\"-webkit-box-flex\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-box-flex-group\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-box-lines\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-ordinal-group\",\"webkit\":\"-webkit-box-ordinal-group\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-orient\",\"webkit\":\"-webkit-box-orient\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-pack\",\"webkit\":\"-webkit-box-pack\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-box-reflect\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"box-shadow\",\"webkit\":\"-webkit-box-shadow\",\"presto\":\"box-shadow\",\"trident\":\"box-shadow\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-box-sizing\",\"webkit\":\"-webkit-box-sizing\",\"presto\":\"box-sizing\",\"trident\":\"box-sizing\",\"status\":\"CR\"},\n{\"gecko\":\"caption-side\",\"webkit\":\"-epub-caption-side\",\"presto\":\"caption-side\",\"trident\":\"caption-side\",\"status\":\"\"},\n{\"gecko\":\"clip-path\",\"webkit\":\"-webkit-clip-path\",\"presto\":\"clip-path\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-color-correction\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-axis\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-break-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-break-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-break-inside\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-column-count\",\"webkit\":\"-webkit-column-count\",\"presto\":\"column-count\",\"trident\":\"column-count\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-fill\",\"webkit\":\"\",\"presto\":\"column-fill\",\"trident\":\"column-fill\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-gap\",\"webkit\":\"-webkit-column-gap\",\"presto\":\"column-gap\",\"trident\":\"column-gap\",\"status\":\"CR\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-progression\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-column-rule\",\"webkit\":\"-webkit-column-rule\",\"presto\":\"column-rule\",\"trident\":\"column-rule\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-rule-color\",\"webkit\":\"-webkit-column-rule-color\",\"presto\":\"column-rule-color\",\"trident\":\"column-rule-color\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-rule-style\",\"webkit\":\"-webkit-column-rule-style\",\"presto\":\"column-rule-style\",\"trident\":\"column-rule-style\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-rule-width\",\"webkit\":\"-webkit-column-rule-width\",\"presto\":\"column-rule-width\",\"trident\":\"column-rule-width\",\"status\":\"CR\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-column-span\",\"presto\":\"column-span\",\"trident\":\"column-span\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-column-width\",\"webkit\":\"-webkit-column-width\",\"presto\":\"column-width\",\"trident\":\"column-width\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-columns\",\"webkit\":\"-webkit-columns\",\"presto\":\"columns\",\"trident\":\"columns\",\"status\":\"CR\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-chaining\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-limit\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-limit-max\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-limit-min\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-snap\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-snap-points\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zoom-snap-type\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-content-zooming\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-cursor-visibility\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-dashboard-region\",\"presto\":\"-apple-dashboard-region\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-device-pixel-ratio\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"filter\",\"webkit\":\"-webkit-filter\",\"presto\":\"filter\",\"trident\":\"-ms-filter\",\"status\":\"\"},\n{\"gecko\":\"flex\",\"webkit\":\"-webkit-flex\",\"presto\":\"\",\"trident\":\"-ms-flex\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-flex-align\",\"status\":\"\"},\n{\"gecko\":\"flex-basis\",\"webkit\":\"-webkit-flex-basis\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"flex-direction\",\"webkit\":\"-webkit-flex-direction\",\"presto\":\"\",\"trident\":\"-ms-flex-direction\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-flex-flow\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"flex-grow\",\"webkit\":\"-webkit-flex-grow\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-flex-order\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-flex-pack\",\"status\":\"\"},\n{\"gecko\":\"flex-shrink\",\"webkit\":\"-webkit-flex-shrink\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-flex-wrap\",\"presto\":\"\",\"trident\":\"-ms-flex-wrap\",\"status\":\"\"},\n{\"gecko\":\"-moz-float-edge\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-flow-from\",\"presto\":\"\",\"trident\":\"-ms-flow-from\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-flow-into\",\"presto\":\"\",\"trident\":\"-ms-flow-into\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-focus-opacity\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-font-feature-settings\",\"webkit\":\"-webkit-font-feature-settings\",\"presto\":\"\",\"trident\":\"font-feature-settings\",\"status\":\"\"},\n{\"gecko\":\"font-kerning\",\"webkit\":\"-webkit-font-kerning\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-font-language-override\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-font-size-delta\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-font-smoothing\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"font-variant-ligatures\",\"webkit\":\"-webkit-font-variant-ligatures\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-force-broken-image-icon\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-auto-columns\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-auto-flow\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-auto-rows\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-column\",\"presto\":\"\",\"trident\":\"-ms-grid-column\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-column-align\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-column-span\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-columns\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-definition-columns\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-definition-rows\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-end\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-row\",\"presto\":\"\",\"trident\":\"-ms-grid-row\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-row-align\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-row-span\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-grid-rows\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-grid-start\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-high-contrast-adjust\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-highlight\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-hyphenate-character\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-hyphenate-limit-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-hyphenate-limit-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-hyphenate-limit-chars\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-hyphenate-limit-lines\",\"presto\":\"\",\"trident\":\"-ms-hyphenate-limit-lines\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-hyphenate-limit-zone\",\"status\":\"\"},\n{\"gecko\":\"-moz-hyphens\",\"webkit\":\"-epub-hyphens\",\"presto\":\"\",\"trident\":\"-ms-hyphens\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-image-region\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"ime-mode\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-ime-mode\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-wap-input-format\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-wap-input-required\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-interpolation-mode\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-interpret-as\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"justify-content\",\"webkit\":\"-webkit-justify-content\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-flow\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-grid\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-grid-char\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-grid-line\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-grid-mode\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-layout-grid-type\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-align\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-box-contain\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-break\",\"presto\":\"\",\"trident\":\"line-break\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-clamp\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-grid\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-line-snap\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-link\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-link-source\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-locale\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-logical-height\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-logical-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-after-collapse\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-before-collapse\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-bottom-collapse\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-collapse\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-margin-end\",\"webkit\":\"-webkit-margin-end\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-margin-start\",\"webkit\":\"-webkit-margin-start\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-margin-top-collapse\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-wap-marquee-dir\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee-direction\",\"presto\":\"\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee-increment\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-wap-marquee-loop\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee-repetition\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee-speed\",\"presto\":\"-wap-marquee-speed\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-marquee-style\",\"presto\":\"-wap-marquee-style\",\"trident\":\"\",\"status\":\"WD\"},\n{\"gecko\":\"mask\",\"webkit\":\"-webkit-mask\",\"presto\":\"mask\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image-outset\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image-repeat\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image-slice\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image-source\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-box-image-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-clip\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-composite\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-image\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-origin\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-position\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-position-x\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-position-y\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-repeat\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-repeat-x\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-repeat-y\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-mask-size\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-max-logical-height\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-max-logical-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-min-logical-height\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-min-logical-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-mini-fold\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-nbsp-mode\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-object-fit\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-object-position\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"opacity\",\"webkit\":\"-webkit-opacity\",\"presto\":\"opacity\",\"trident\":\"opacity\",\"status\":\"WD\"},\n{\"gecko\":\"order\",\"webkit\":\"-webkit-order\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-orient\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-outline-radius\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-outline-radius-bottomleft\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-outline-radius-bottomright\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-outline-radius-topleft\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-outline-radius-topright\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-overflow-scrolling\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-overflow-style\",\"status\":\"CR\"},\n{\"gecko\":\"overflow-x\",\"webkit\":\"overflow-x\",\"presto\":\"overflow-x\",\"trident\":\"-ms-overflow-x\",\"status\":\"WD\"},\n{\"gecko\":\"overflow-y\",\"webkit\":\"overflow-y\",\"presto\":\"overflow-y\",\"trident\":\"-ms-overflow-y\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-padding-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-padding-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-padding-end\",\"webkit\":\"-webkit-padding-end\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"-moz-padding-start\",\"webkit\":\"-webkit-padding-start\",\"presto\":\"\",\"trident\":\"\",\"status\":\"ED\"},\n{\"gecko\":\"perspective\",\"webkit\":\"-webkit-perspective\",\"presto\":\"\",\"trident\":\"perspective\",\"status\":\"WD\"},\n{\"gecko\":\"perspective-origin\",\"webkit\":\"-webkit-perspective-origin\",\"presto\":\"\",\"trident\":\"perspective-origin\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-perspective-origin-x\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-perspective-origin-y\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-phonemes\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-print-color-adjust\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-progress-appearance\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-region-break-after\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-region-break-before\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-region-break-inside\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-region-fragment\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-rtl-ordering\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-ruby-position\",\"presto\":\"\",\"trident\":\"ruby-position\",\"status\":\"CR\"},\n{\"gecko\":\"-moz-script-level\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-script-min-size\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-script-size-multiplier\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-chaining\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-limit\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-limit-x-max\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-limit-x-min\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-limit-y-max\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-limit-y-min\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-rails\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-snap-points-x\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-snap-points-y\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-snap-type\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-snap-x\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-snap-y\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-scroll-translation\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-arrow-color\",\"trident\":\"-ms-scrollbar-arrow-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-base-color\",\"trident\":\"-ms-scrollbar-base-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-darkshadow-color\",\"trident\":\"-ms-scrollbar-darkshadow-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-face-color\",\"trident\":\"-ms-scrollbar-face-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-highlight-color\",\"trident\":\"-ms-scrollbar-highlight-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-shadow-color\",\"trident\":\"-ms-scrollbar-shadow-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"scrollbar-track-color\",\"trident\":\"-ms-scrollbar-track-color\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-shape-inside\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-shape-margin\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-shape-outside\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-shape-padding\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-stack-sizing\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-svg-shadow\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-tab-size\",\"webkit\":\"tab-size\",\"presto\":\"-o-tab-size\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-o-table-baseline\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-tap-highlight-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-text-align-last\",\"webkit\":\"-webkit-text-align-last\",\"presto\":\"\",\"trident\":\"-ms-text-align-last\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-text-autospace\",\"status\":\"WD\"},\n{\"gecko\":\"-moz-text-blink\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-epub-text-combine\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-text-decoration-color\",\"webkit\":\"-webkit-text-decoration-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-text-decoration-line\",\"webkit\":\"-webkit-text-decoration-line\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-text-decoration-style\",\"webkit\":\"-webkit-text-decoration-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-decorations-in-effect\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-epub-text-emphasis\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-epub-text-emphasis-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-emphasis-position\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-epub-text-emphasis-style\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-fill-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-justify\",\"presto\":\"\",\"trident\":\"-ms-text-justify\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-text-kashida-space\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-epub-text-orientation\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"text-overflow\",\"webkit\":\"text-overflow\",\"presto\":\"text-overflow\",\"trident\":\"-ms-text-overflow\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-security\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-text-size-adjust\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-stroke\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-stroke-color\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-stroke-width\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"text-transform\",\"webkit\":\"-epub-text-transform\",\"presto\":\"text-transform\",\"trident\":\"text-transform\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-text-underline-position\",\"presto\":\"\",\"trident\":\"-ms-text-underline-position\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-touch-action\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-touch-callout\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-transform\",\"webkit\":\"-webkit-transform\",\"presto\":\"-o-transform\",\"trident\":\"transform\",\"status\":\"WD\"},\n{\"gecko\":\"transform-origin\",\"webkit\":\"-webkit-transform-origin\",\"presto\":\"-o-transform-origin\",\"trident\":\"transform-origin\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-transform-origin-x\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-transform-origin-y\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-transform-origin-z\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"transform-style\",\"webkit\":\"-webkit-transform-style\",\"presto\":\"\",\"trident\":\"transform-style\",\"status\":\"WD\"},\n{\"gecko\":\"transition\",\"webkit\":\"-webkit-transition\",\"presto\":\"-o-transition\",\"trident\":\"transition\",\"status\":\"WD\"},\n{\"gecko\":\"transition-delay\",\"webkit\":\"-webkit-transition-delay\",\"presto\":\"-o-transition-delay\",\"trident\":\"transition-delay\",\"status\":\"WD\"},\n{\"gecko\":\"transition-duration\",\"webkit\":\"-webkit-transition-duration\",\"presto\":\"-o-transition-duration\",\"trident\":\"transition-duration\",\"status\":\"WD\"},\n{\"gecko\":\"transition-property\",\"webkit\":\"-webkit-transition-property\",\"presto\":\"-o-transition-property\",\"trident\":\"transition-property\",\"status\":\"WD\"},\n{\"gecko\":\"transition-timing-function\",\"webkit\":\"-webkit-transition-timing-function\",\"presto\":\"-o-transition-timing-function\",\"trident\":\"transition-timing-function\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-user-drag\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-user-focus\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-user-input\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-user-modify\",\"webkit\":\"-webkit-user-modify\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"-moz-user-select\",\"webkit\":\"-webkit-user-select\",\"presto\":\"\",\"trident\":\"-ms-user-select\",\"status\":\"P\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-balance\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-duration\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-pitch\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-pitch-range\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-rate\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-stress\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"-xv-voice-volume\",\"trident\":\"\",\"status\":\"\"},\n{\"gecko\":\"-moz-window-shadow\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"\",\"status\":\"P\"},\n{\"gecko\":\"word-break\",\"webkit\":\"-epub-word-break\",\"presto\":\"\",\"trident\":\"-ms-word-break\",\"status\":\"WD\"},\n{\"gecko\":\"word-wrap\",\"webkit\":\"word-wrap\",\"presto\":\"word-wrap\",\"trident\":\"-ms-word-wrap\",\"status\":\"WD\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-wrap-flow\",\"presto\":\"\",\"trident\":\"-ms-wrap-flow\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"\",\"presto\":\"\",\"trident\":\"-ms-wrap-margin\",\"status\":\"\"},\n{\"gecko\":\"\",\"webkit\":\"-webkit-wrap-through\",\"presto\":\"\",\"trident\":\"-ms-wrap-through\",\"status\":\"\"},\n{\"gecko\":\"writing-mode\",\"webkit\":\"-epub-writing-mode\",\"presto\":\"writing-mode\",\"trident\":\"-ms-writing-mode\",\"status\":\"ED\"},\n{\"gecko\":\"\",\"webkit\":\"zoom\",\"presto\":\"\",\"trident\":\"-ms-zoom\",\"status\":\"\"}]};\n\nvar PrefixHelper = {\n\n  mVENDOR_PREFIXES: null,\n\n  kEXPORTS_FOR_GECKO:   true,\n  kEXPORTS_FOR_WEBKIT:  true,\n  kEXPORTS_FOR_PRESTO:  true,\n  kEXPORTS_FOR_TRIDENT: true,\n\n  cleanPrefixes: function()\n  {\n    this.mVENDOR_PREFIXES = null;\n  },\n\n  prefixesForProperty: function(aProperty)\n  {\n    if (!this.mVENDOR_PREFIXES) {\n\n      this.mVENDOR_PREFIXES = {};\n      for (var i = 0; i < kCSS_VENDOR_PREFIXES.properties.length; i++) {\n        var p = kCSS_VENDOR_PREFIXES.properties[i];\n        if (p.gecko && (p.webkit || p.presto || p.trident)) {\n          var o = {};\n          if (this.kEXPORTS_FOR_GECKO) o[p.gecko] = true;\n          if (this.kEXPORTS_FOR_WEBKIT && p.webkit)  o[p.webkit] = true;\n          if (this.kEXPORTS_FOR_PRESTO && p.presto)  o[p.presto] = true;\n          if (this.kEXPORTS_FOR_TRIDENT && p.trident) o[p.trident] = true;\n          this.mVENDOR_PREFIXES[p.gecko] = [];\n          for (var j in o)\n            this.mVENDOR_PREFIXES[p.gecko].push(j)\n        }\n      }\n    }\n    if (aProperty in this.mVENDOR_PREFIXES)\n      return this.mVENDOR_PREFIXES[aProperty].sort();\n    return null;\n  }\n};\n\nfunction ParseURL(buffer) {\n  var result = { };\n  result.protocol = \"\";\n  result.user = \"\";\n  result.password = \"\";\n  result.host = \"\";\n  result.port = \"\";\n  result.path = \"\";\n  result.query = \"\";\n\n  var section = \"PROTOCOL\";\n  var start = 0;\n  var wasSlash = false;\n\n  while(start < buffer.length) {\n    if(section == \"PROTOCOL\") {\n      if(buffer.charAt(start) == ':') {\n        section = \"AFTER_PROTOCOL\";\n        start++;\n      } else if(buffer.charAt(start) == '/' && result.protocol.length() == 0) { \n        section = PATH;\n      } else {\n        result.protocol += buffer.charAt(start++);\n      }\n    } else if(section == \"AFTER_PROTOCOL\") {\n      if(buffer.charAt(start) == '/') {\n    if(!wasSlash) {\n          wasSlash = true;\n    } else {\n          wasSlash = false;\n          section = \"USER\";\n    }\n        start ++;\n      } else {\n        throw new ParseException(\"Protocol shell be separated with 2 slashes\");\n      }       \n    } else if(section == \"USER\") {\n      if(buffer.charAt(start) == '/') {\n        result.host = result.user;\n        result.user = \"\";\n        section = \"PATH\";\n      } else if(buffer.charAt(start) == '?') {\n        result.host = result.user;\n        result.user = \"\";\n        section = \"QUERY\";\n        start++;\n      } else if(buffer.charAt(start) == ':') {\n        section = \"PASSWORD\";\n        start++;\n      } else if(buffer.charAt(start) == '@') {\n        section = \"HOST\";\n        start++;\n      } else {\n        result.user += buffer.charAt(start++);\n      }\n    } else if(section == \"PASSWORD\") {\n      if(buffer.charAt(start) == '/') {\n        result.host = result.user;\n        result.port = result.password;\n        result.user = \"\";\n        result.password = \"\";\n        section = \"PATH\";\n      } else if(buffer.charAt(start) == '?') {\n        result.host = result.user;\n        result.port = result.password;\n        result.user = \"\";\n        result.password = \"\";\n        section = \"QUERY\";\n        start ++;\n      } else if(buffer.charAt(start) == '@') {\n        section = \"HOST\";\n        start++;\n      } else {\n        result.password += buffer.charAt(start++);\n      }\n    } else if(section == \"HOST\") {\n      if(buffer.charAt(start) == '/') {\n        section = \"PATH\";\n      } else if(buffer.charAt(start) == ':') {\n        section = \"PORT\";\n        start++;\n      } else if(buffer.charAt(start) == '?') {\n        section = \"QUERY\";\n        start++;\n      } else {\n        result.host += buffer.charAt(start++);\n      }\n    } else if(section == \"PORT\") {\n      if(buffer.charAt(start) == '/') {\n        section = \"PATH\";\n      } else if(buffer.charAt(start) == '?') {\n        section = \"QUERY\";\n        start++;\n      } else {\n        result.port += buffer.charAt(start++);\n      }\n    } else if(section == \"PATH\") {\n      if(buffer.charAt(start) == '?') {\n    section = \"QUERY\";\n    start ++;\n      } else {\n    result.path += buffer.charAt(start++);\n      }\n    } else if(section == \"QUERY\") {\n      result.query += buffer.charAt(start++);\n    }\n  }\n\n  if(section == \"PROTOCOL\") {\n    result.host = result.protocol;\n    result.protocol = \"http\";\n  } else if(section == \"AFTER_PROTOCOL\") {\n    throw new ParseException(\"Invalid url\");\n  } else if(section == \"USER\") {\n    result.host = result.user;\n    result.user = \"\";\n  } else if(section == \"PASSWORD\") {\n    result.host = result.user;\n    result.port = result.password;\n    result.user = \"\";\n    result.password = \"\";\n  }\n\n  return result;\n}\n\nfunction ParseException(description) {\n    this.description = description;\n}\n\nfunction CountLF(s)\n{\n  var nCR = s.match( /\\n/g );\n  return nCR ? nCR.length + 1 : 1;\n}\n\nfunction DisposablePartialParsing(aStringToParse, aMethodName)\n{\n  var parser = new CSSParser();\n  parser._init();\n  parser.mPreserveWS       = false;\n  parser.mPreserveComments = false;\n  parser.mPreservedTokens = [];\n  parser.mScanner.init(aStringToParse);\n\n  return parser[aMethodName]();    \n}\n\nfunction FilterLinearGradient(aValue, aEngine)\n{\n  var d = DisposablePartialParsing(aValue, \"parseBackgroundImages\");\n  if (!d)\n    return null;\n  var g = d[0];\n  if (!g.value)\n    return null;\n\n  var str = \"\";\n  var position = (\"position\" in g.value) ? g.value.position.toLowerCase() : \"\";\n  var angle    = (\"angle\" in g.value) ? g.value.angle.toLowerCase() : \"\";\n\n  if (\"webkit20110101\" == aEngine) {\n    var cancelled = false;\n    str = \"-webkit-gradient(linear, \";\n    // normalize angle\n    if (angle) {\n      var match = angle.match(/^([0-9\\-\\.\\\\+]+)([a-z]*)/);\n      var angle = parseFloat(match[1]);\n      var unit  = match[2];\n      switch (unit) {\n        case \"grad\": angle = angle * 90 / 100; break;\n        case \"rad\":  angle = angle * 180 / Math.PI; break;\n        default: break;\n      }\n      while (angle < 0)\n        angle += 360;\n      while (angle >= 360)\n        angle -= 360;\n    }\n    // get startpoint w/o keywords\n    var startpoint = [];\n    var endpoint = [];\n    if (position != \"\") {\n      if (position == \"center\")\n        position = \"center center\";\n      startpoint = position.split(\" \");\n      if (angle == \"\" && angle != 0) {\n        // no angle, then we just turn the point 180 degrees around center\n        switch (startpoint[0]) {\n          case \"left\":   endpoint.push(\"right\"); break;\n          case \"center\": endpoint.push(\"center\"); break;\n          case \"right\":  endpoint.push(\"left\"); break;\n          default: {\n              var match = startpoint[0].match(/^([0-9\\-\\.\\\\+]+)([a-z]*)/);\n              var v     = parseFloat(match[0]);\n              var unit  = match[1];\n              if (unit == \"%\") {\n                endpoint.push((100-v) + \"%\");\n              }\n              else\n                cancelled = true;\n            }\n            break;\n        }\n        if (!cancelled)\n          switch (startpoint[1]) {\n            case \"top\":    endpoint.push(\"bottom\"); break;\n            case \"center\": endpoint.push(\"center\"); break;\n            case \"bottom\": endpoint.push(\"top\"); break;\n            default: {\n                var match = startpoint[1].match(/^([0-9\\-\\.\\\\+]+)([a-z]*)/);\n                var v     = parseFloat(match[0]);\n                var unit  = match[1];\n                if (unit == \"%\") {\n                  endpoint.push((100-v) + \"%\");\n                }\n                else\n                  cancelled = true;\n              }\n              break;\n          }\n      }\n      else {\n        switch (angle) {\n          case 0:    endpoint.push(\"right\"); endpoint.push(startpoint[1]); break;\n          case 90:   endpoint.push(startpoint[0]); endpoint.push(\"top\"); break;\n          case 180:  endpoint.push(\"left\"); endpoint.push(startpoint[1]); break;\n          case 270:  endpoint.push(startpoint[0]); endpoint.push(\"bottom\"); break;\n          default:     cancelled = true; break;\n        }\n      }\n    }\n    else {\n      // no position defined, we accept only vertical and horizontal\n      if (angle == \"\")\n        angle = 270;\n      switch (angle) {\n        case 0:    startpoint= [\"left\", \"center\"];   endpoint = [\"right\", \"center\"]; break;\n        case 90:   startpoint= [\"center\", \"bottom\"]; endpoint = [\"center\", \"top\"]; break;\n        case 180:  startpoint= [\"right\", \"center\"];  endpoint = [\"left\", \"center\"]; break;\n        case 270:  startpoint= [\"center\", \"top\"];    endpoint = [\"center\", \"bottom\"]; break;\n        default:     cancelled = true; break;\n      }\n    }\n  \n    if (cancelled)\n      return \"\";\n  \n    str += startpoint.join(\" \") + \", \" + endpoint.join(\" \");\n    if (!g.value.stops[0].position)\n      g.value.stops[0].position = \"0%\";\n    if (!g.value.stops[g.value.stops.length-1].position)\n      g.value.stops[g.value.stops.length-1].position = \"100%\";\n    var current = 0;\n    for (var i = 0; i < g.value.stops.length && !cancelled; i++) {\n      var s = g.value.stops[i];\n      if (s.position) {\n        if (s.position.indexOf(\"%\") == -1) {\n          cancelled = true;\n          break;\n        }\n      }\n      else {\n        var j = i + 1;\n        while (j < g.value.stops.length && !g.value.stops[j].position)\n          j++;\n        var inc = parseFloat(g.value.stops[j].position) - current;\n        for (var k = i; k < j; k++) {\n          g.value.stops[k].position = (current + inc * (k - i + 1) / (j - i + 1)) + \"%\";\n        }\n      }\n      current = parseFloat(s.position);\n      str += \", color-stop(\" + (parseFloat(current) / 100) + \", \" + s.color + \")\";\n    }\n  \n    if (cancelled)\n      return \"\";\n  }\n  else {\n    str = (g.value.isRepeating ? \"repeating-\" : \"\") + \"linear-gradient(\";\n    if (angle || position)\n      str += (angle ? angle : position) + \", \";\n  \n    for (var i = 0; i < g.value.stops.length; i++) {\n      var s = g.value.stops[i];\n      str += s.color\n             + (s.position ? \" \" + s.position : \"\")\n             + ((i != g.value.stops.length -1) ? \", \" : \"\");\n    }\n  }\n  str += \")\";\n\n  switch (aEngine) {\n    case \"webkit\":     str = \"-webkit-\"  + str; break;\n    case \"gecko1.9.2\": str = \"-moz-\"  + str; break;\n    case \"presto\":     str = \"-o-\"  + str; break;\n    case \"trident\":    str = \"-ms-\"  + str; break;\n    default:           break;\n  }\n  return str;\n}\n\nfunction FilterRadialGradient(aValue, aEngine)\n{\n  var d = DisposablePartialParsing(aValue, \"parseBackgroundImages\");\n  if (!d)\n    return null;\n  var g = d[0];\n  if (!g.value)\n    return null;\n\n  // oh come on, this is now so painful to deal with ; no way I'm going to implement this\n  if (\"webkit20110101\" == aEngine)\n    return null;\n  \n  var str = (g.value.isRepeating ? \"repeating-\" : \"\") + \"radial-gradient(\";\n  var shape = (\"shape\" in g.value) ? g.value.shape : \"\";\n  var extent  = (\"extent\"  in g.value) ? g.value.extent : \"\";\n  var lengths = \"\";\n  switch (g.value.positions.length) {\n    case 1:\n      lengths = g.value.positions[0] + \" \" + g.value.positions[0];\n      break;\n    case 2:\n      lengths = g.value.positions[0] + \" \" + g.value.positions[1];\n      break;\n    default:\n      break;\n  }\n  var at = g.value.at;\n\n  str += (at ? at + \", \" : \"\")\n         + ((shape || extent || at)\n            ? (shape ? shape + \" \" : \"\")\n              + (extent ? extent + \" \" : \"\")\n              + (lengths ? lengths + \" \" : \"\")\n              + \", \"\n            : \"\");\n  for (var i = 0; i < g.value.stops.length; i++) {\n    var s = g.value.stops[i];\n    str += s.color\n           + (s.position ? \" \" + s.position : \"\")\n           + ((i != g.value.stops.length -1) ? \", \" : \"\");\n  }\n  str += \")\";\n\n  switch (aEngine) {\n    case \"webkit\":     str = \"-webkit-\"  + str; break;\n    case \"gecko1.9.2\": str = \"-moz-\"  + str; break;\n    case \"presto\":     str = \"-o-\"  + str; break;\n    case \"trident\":    str = \"-ms-\"  + str; break;\n    default:           break;\n  }\n  return str;\n}\n\nvar CSS_ESCAPE  = '\\\\';\n\nvar IS_HEX_DIGIT  = 1;\nvar START_IDENT   = 2;\nvar IS_IDENT      = 4;\nvar IS_WHITESPACE = 8;\n\nvar W   = IS_WHITESPACE;\nvar I   = IS_IDENT;\nvar S   =          START_IDENT;\nvar SI  = IS_IDENT|START_IDENT;\nvar XI  = IS_IDENT            |IS_HEX_DIGIT;\nvar XSI = IS_IDENT|START_IDENT|IS_HEX_DIGIT;\n\nfunction CSSScanner(aString)\n{\n  this.init(aString);\n}\n\nCSSScanner.prototype = {\n\n  kLexTable: [\n  //                                     TAB LF      FF  CR\n     0,  0,  0,  0,  0,  0,  0,  0,  0,  W,  W,  0,  W,  W,  0,  0,\n  //\n     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  // SPC !   \"   #   $   %   &   '   (   )   *   +   ,   -   .   /\n     W,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  I,  0,  0,\n  // 0   1   2   3   4   5   6   7   8   9   :   ;   <   =   >   ?\n     XI, XI, XI, XI, XI, XI, XI, XI, XI, XI, 0,  0,  0,  0,  0,  0,\n  // @   A   B   C   D   E   F   G   H   I   J   K   L   M   N   O\n     0,  XSI,XSI,XSI,XSI,XSI,XSI,SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // P   Q   R   S   T   U   V   W   X   Y   Z   [   \\   ]   ^   _\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, 0,  S,  0,  0,  SI,\n  // `   a   b   c   d   e   f   g   h   i   j   k   l   m   n   o\n     0,  XSI,XSI,XSI,XSI,XSI,XSI,SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // p   q   r   s   t   u   v   w   x   y   z   {   |   }   ~\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, 0,  0,  0,  0,  0,\n  //\n     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //\n     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n  //     ¡   ¢   £   ¤   ¥   ¦   §   ¨   ©   ª   «   ¬   ­   ®   ¯\n     0,  SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // °   ±   ²   ³   ´   µ   ¶   ·   ¸   ¹   º   »   ¼   ½   ¾   ¿\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // À   Á   Â   Ã   Ä   Å   Æ   Ç   È   É   Ê   Ë   Ì   Í   Î   Ï\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // Ð   Ñ   Ò   Ó   Ô   Õ   Ö   ×   Ø   Ù   Ú   Û   Ü   Ý   Þ   ß\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // à   á   â   ã   ä   å   æ   ç   è   é   ê   ë   ì   í   î   ï\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI,\n  // ð   ñ   ò   ó   ô   õ   ö   ÷   ø   ù   ú   û   ü   ý   þ   ÿ\n     SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI, SI\n  ],\n\n  kHexValues: {\n    \"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8, \"9\": 9,\n    \"a\": 10, \"b\": 11, \"c\": 12, \"d\": 13, \"e\": 14, \"f\": 15\n  },\n\n  mString : \"\",\n  mPos : 0,\n  mPreservedPos : [],\n\n  init: function(aString) {\n    this.mString = aString;\n    this.mPos = 0;\n    this.mPreservedPos = [];\n  },\n\n  getCurrentPos: function() {\n    return this.mPos;\n  },\n\n  getAlreadyScanned: function()\n  {\n    return this.mString.substr(0, this.mPos);\n  },\n\n  preserveState: function() {\n    this.mPreservedPos.push(this.mPos);\n  },\n\n  restoreState: function() {\n    if (this.mPreservedPos.length) {\n      this.mPos = this.mPreservedPos.pop();\n    }\n  },\n\n  forgetState: function() {\n    if (this.mPreservedPos.length) {\n      this.mPreservedPos.pop();\n    }\n  },\n\n  read: function() {\n    if (this.mPos < this.mString.length)\n      return this.mString.charAt(this.mPos++);\n    return -1;\n  },\n\n  peek: function() {\n    if (this.mPos < this.mString.length)\n      return this.mString.charAt(this.mPos);\n    return -1;\n  },\n\n  isHexDigit: function(c) {\n    var code = c.charCodeAt(0);\n    return (code < 256 && (this.kLexTable[code] & IS_HEX_DIGIT) != 0);\n  },\n\n  isIdentStart: function(c) {\n    var code = c.charCodeAt(0);\n    return (code >= 256 || (this.kLexTable[code] & START_IDENT) != 0);\n  },\n\n  startsWithIdent: function(aFirstChar, aSecondChar) {\n    var code = aFirstChar.charCodeAt(0);\n    return this.isIdentStart(aFirstChar) ||\n           (aFirstChar == \"-\" && this.isIdentStart(aSecondChar));\n  },\n\n  isIdent: function(c) {\n    var code = c.charCodeAt(0);\n    return (code >= 256 || (this.kLexTable[code] & IS_IDENT) != 0);\n  },\n\n  pushback: function() {\n    this.mPos--;\n  },\n\n  nextHexValue: function() {\n    var c = this.read();\n    if (c == -1 || !this.isHexDigit(c))\n      return new jscsspToken(jscsspToken.NULL_TYPE, null);\n    var s = c;\n    c = this.read();\n    while (c != -1 && this.isHexDigit(c)) {\n      s += c;\n      c = this.read();\n    }\n    if (c != -1)\n      this.pushback();\n    return new jscsspToken(jscsspToken.HEX_TYPE, s);\n  },\n\n  gatherEscape: function() {\n    var c = this.peek();\n    if (c == -1)\n      return \"\";\n    if (this.isHexDigit(c)) {\n      var code = 0;\n      for (var i = 0; i < 6; i++) {\n        c = this.read();\n        if (this.isHexDigit(c))\n          code = code * 16 + this.kHexValues[c.toLowerCase()];\n        else if (!this.isHexDigit(c) && !this.isWhiteSpace(c)) {\n          this.pushback();\n          break;\n        }\n        else\n          break;\n      }\n      if (i == 6) {\n        c = this.peek();\n        if (this.isWhiteSpace(c))\n          this.read();\n      }\n      return String.fromCharCode(code);\n    }\n    c = this.read();\n    if (c != \"\\n\")\n      return c;\n    return \"\";\n  },\n\n  gatherIdent: function(c) {\n    var s = \"\";\n    if (c == CSS_ESCAPE)\n      s += this.gatherEscape();\n    else\n      s += c;\n    c = this.read();\n    while (c != -1\n           && (this.isIdent(c) || c == CSS_ESCAPE)) {\n      if (c == CSS_ESCAPE)\n        s += this.gatherEscape();\n      else\n        s += c;\n      c = this.read();\n    }\n    if (c != -1)\n      this.pushback();\n    return s;\n  },\n\n  parseIdent: function(c) {\n    var value = this.gatherIdent(c);\n    var nextChar = this.peek();\n    if (nextChar == \"(\") {\n      value += this.read();\n      return new jscsspToken(jscsspToken.FUNCTION_TYPE, value);\n    }\n    return new jscsspToken(jscsspToken.IDENT_TYPE, value);\n  },\n\n  isDigit: function(c) {\n    return (c >= '0') && (c <= '9');\n  },\n\n  parseComment: function(c) {\n    var s = c;\n    while ((c = this.read()) != -1) {\n      s += c;\n      if (c == \"*\") {\n        c = this.read();\n        if (c == -1)\n          break;\n        if (c == \"/\") {\n          s += c;\n          break;\n        }\n        this.pushback();\n      }\n    }\n    return new jscsspToken(jscsspToken.COMMENT_TYPE, s);\n  },\n\n  parseNumber: function(c) {\n    var s = c;\n    var foundDot = false;\n    while ((c = this.read()) != -1) {\n      if (c == \".\") {\n        if (foundDot)\n          break;\n        else {\n          s += c;\n          foundDot = true;\n        }\n      } else if (this.isDigit(c))\n        s += c;\n      else\n        break;\n    }\n\n    if (c != -1 && this.startsWithIdent(c, this.peek())) { // DIMENSION\n      var unit = this.gatherIdent(c);\n      s += unit;\n      return new jscsspToken(jscsspToken.DIMENSION_TYPE, s, unit);\n    }\n    else if (c == \"%\") {\n      s += \"%\";\n      return new jscsspToken(jscsspToken.PERCENTAGE_TYPE, s);\n    }\n    else if (c != -1)\n      this.pushback();\n    return new jscsspToken(jscsspToken.NUMBER_TYPE, s);\n  },\n\n  parseString: function(aStop) {\n    var s = aStop;\n    var previousChar = aStop;\n    var c;\n    while ((c = this.read()) != -1) {\n      if (c == aStop && previousChar != CSS_ESCAPE) {\n        s += c;\n        break;\n      }\n      else if (c == CSS_ESCAPE) {\n        c = this.peek();\n        if (c == -1)\n          break;\n        else if (c == \"\\n\" || c == \"\\r\" || c == \"\\f\") {\n          d = c;\n          c = this.read();\n          // special for Opera that preserves \\r\\n...\n          if (d == \"\\r\") {\n            c = this.peek();\n            if (c == \"\\n\")\n              c = this.read();\n          }\n        }\n        else {\n          s += this.gatherEscape();\n          c = this.peek();\n        }\n      }\n      else if (c == \"\\n\" || c == \"\\r\" || c == \"\\f\") {\n        break;\n      }\n      else\n        s += c;\n\n      previousChar = c;\n    }\n    return new jscsspToken(jscsspToken.STRING_TYPE, s);\n  },\n\n  isWhiteSpace: function(c) {\n    var code = c.charCodeAt(0);\n    return code < 256 && (this.kLexTable[code] & IS_WHITESPACE) != 0;\n  },\n\n  eatWhiteSpace: function(c) {\n    var s = c;\n    while ((c = this.read()) != -1) {\n      if (!this.isWhiteSpace(c))\n        break;\n      s += c;\n    }\n    if (c != -1)\n      this.pushback();\n    return s;\n  },\n\n  parseAtKeyword: function(c) {\n    return new jscsspToken(jscsspToken.ATRULE_TYPE, this.gatherIdent(c));\n  },\n\n  nextToken: function() {\n    var c = this.read();\n    if (c == -1)\n      return new jscsspToken(jscsspToken.NULL_TYPE, null);\n\n    if (this.startsWithIdent(c, this.peek()))\n      return this.parseIdent(c);\n\n    if (c == '@') {\n      var nextChar = this.read();\n      if (nextChar != -1) {\n        var followingChar = this.peek();\n        this.pushback();\n        if (this.startsWithIdent(nextChar, followingChar))\n          return this.parseAtKeyword(c);\n      }\n    }\n\n    if (c == \".\" || c == \"+\" || c == \"-\") {\n      var nextChar = this.peek();\n      if (this.isDigit(nextChar))\n        return this.parseNumber(c);\n      else if (nextChar == \".\" && c != \".\") {\n        firstChar = this.read();\n        var secondChar = this.peek();\n        this.pushback();\n        if (this.isDigit(secondChar))\n          return this.parseNumber(c);\n      }\n    }\n    if (this.isDigit(c)) {\n      return this.parseNumber(c);\n    }\n\n    if (c == \"'\" || c == '\"')\n      return this.parseString(c);\n\n    if (this.isWhiteSpace(c)) {\n      var s = this.eatWhiteSpace(c);\n      \n      return new jscsspToken(jscsspToken.WHITESPACE_TYPE, s);\n    }\n\n    if (c == \"|\" || c == \"~\" || c == \"^\" || c == \"$\" || c == \"*\") {\n      var nextChar = this.read();\n      if (nextChar == \"=\") {\n        switch (c) {\n          case \"~\" :\n            return new jscsspToken(jscsspToken.INCLUDES_TYPE, \"~=\");\n          case \"|\" :\n            return new jscsspToken(jscsspToken.DASHMATCH_TYPE, \"|=\");\n          case \"^\" :\n            return new jscsspToken(jscsspToken.BEGINSMATCH_TYPE, \"^=\");\n          case \"$\" :\n            return new jscsspToken(jscsspToken.ENDSMATCH_TYPE, \"$=\");\n          case \"*\" :\n            return new jscsspToken(jscsspToken.CONTAINSMATCH_TYPE, \"*=\");\n          default :\n            break;\n        }\n      } else if (nextChar != -1)\n        this.pushback();\n    }\n\n    if (c == \"/\" && this.peek() == \"*\")\n      return this.parseComment(c);\n\n    return new jscsspToken(jscsspToken.SYMBOL_TYPE, c);\n  }\n};\n\nCSSParser.prototype.parseBackgroundImages = function()\n{\n  var backgrounds = [];\n  var token = this.getToken(true, true);\n  while (token.isNotNull()) {\n    if (token.isFunction(\"url(\")) {\n      token = this.getToken(true, true);\n      var urlContent = this.parseURL(token);\n      backgrounds.push( { type: \"image\", value: \"url(\" + urlContent });\n      token = this.getToken(true, true);\n    }\n    else if (token.isFunction(\"linear-gradient(\")\n             || token.isFunction(\"radial-gradient(\")\n             || token.isFunction(\"repeating-linear-gradient(\")\n             || token.isFunction(\"repeating-radial-gradient(\")) {\n      this.ungetToken();\n      var gradient = this.parseGradient();\n      if (gradient) {\n        backgrounds.push({\n                         type: gradient.isRadial ? \"radial-gradient\" : \"linear-gradient\",\n                         value: gradient\n                         });\n        token = this.getToken(true, true);\n      }\n      else\n        return null;\n    }\n    else if (token.isIdent(\"none\")\n             || token.isIdent(\"inherit\")\n             || token.isIdent(\"initial\")) {\n      backgrounds.push( { type: token.value });\n      token = this.getToken(true, true);\n    }\n    else\n      return null;\n    \n    if (token.isSymbol(\",\")) {\n      token = this.getToken(true, true);\n      if (!token.isNotNull())\n        return null;\n    }\n  }\n  return backgrounds;\n};\n\nCSSParser.prototype.parseBackgroundShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var kHPos = {\n    \"left\" : true,\n    \"right\" : true\n  };\n  var kVPos = {\n    \"top\" : true,\n    \"bottom\" : true\n  };\n  var kPos = {\n    \"left\" : true,\n    \"right\" : true,\n    \"top\" : true,\n    \"bottom\" : true,\n    \"center\" : true\n  };\n  \n  var bgColor = null;\n  var bgRepeat = null;\n  var bgAttachment = null;\n  var bgImage = null;\n  var bgPosition = null;\n  \n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!bgColor\n             && !bgRepeat\n             && !bgAttachment\n             && !bgImage\n             && !bgPosition\n             && token.isIdent(this.kINHERIT)) {\n      bgColor = this.kINHERIT;\n      bgRepeat = this.kINHERIT;\n      bgAttachment = this.kINHERIT;\n      bgImage = this.kINHERIT;\n      bgPosition = this.kINHERIT;\n    }\n    \n    else {\n      if (!bgAttachment\n          && (token.isIdent(\"scroll\") || token.isIdent(\"fixed\"))) {\n        bgAttachment = token.value;\n      }\n      \n      else if (!bgPosition\n               && ((token.isIdent() && token.value in kPos)\n                   || token.isDimension()\n                   || token.isNumber(\"0\")\n                   || token.isPercentage())) {\n                 bgPosition = token.value;\n                 token = this.getToken(true, true);\n                 if (token.isDimension()\n                     || token.isNumber(\"0\")\n                     || token.isPercentage()) {\n                   bgPosition += \" \" + token.value;\n                 } else if (token.isIdent() && token.value in kPos) {\n                   if ((bgPosition in kHPos && token.value in kHPos)\n                       || (bgPosition in kVPos && token.value in kVPos))\n                     return \"\";\n                   bgPosition += \" \" + token.value;\n                 } else {\n                   this.ungetToken();\n                   bgPosition += \" center\";\n                 }\n               }\n      \n      else if (!bgRepeat\n               && (token.isIdent(\"repeat\")\n                   || token.isIdent(\"repeat-x\")\n                   || token.isIdent(\"repeat-y\")\n                   || token.isIdent(\"no-repeat\"))) {\n                 bgRepeat = token.value;\n               }\n      \n      else if (!bgImage\n               && (token.isFunction(\"url(\") || token.isIdent(\"none\"))) {\n        bgImage = token.value;\n        if (token.isFunction(\"url(\")) {\n          token = this.getToken(true, true);\n          var url = this.parseURL(token); // TODO\n          if (url)\n            bgImage += url;\n          else\n            return \"\";\n        }\n      }\n      \n      else if (!bgImage\n               && (token.isFunction(\"linear-gradient(\")\n                   || token.isFunction(\"radial-gradient(\")\n                   || token.isFunction(\"repeating-linear-gradient(\") || token.isFunction(\"repeating-radial-gradient(\"))) {\n                 this.ungetToken();\n                 var gradient = this.parseGradient();\n                 if (gradient)\n                   bgImage = this.serializeGradient(gradient);\n                 else\n                   return \"\";\n               }\n      \n      else {\n        var color = this.parseColor(token);\n        if (!bgColor && color)\n          bgColor = color;\n        else\n          return \"\";\n      }\n      \n    }\n    \n    token = this.getToken(true, true);\n  }\n  \n  // create the declarations\n  this.forgetState();\n  bgColor = bgColor ? bgColor : \"transparent\";\n  bgImage = bgImage ? bgImage : \"none\";\n  bgRepeat = bgRepeat ? bgRepeat : \"repeat\";\n  bgAttachment = bgAttachment ? bgAttachment : \"scroll\";\n  bgPosition = bgPosition ? bgPosition : \"top left\";\n  \n  aDecl.push(this._createJscsspDeclarationFromValue(\"background-color\", bgColor));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"background-image\", bgImage));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"background-repeat\", bgRepeat));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"background-attachment\", bgAttachment));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"background-position\", bgPosition));\n  \n  return bgColor + \" \" + bgImage + \" \" + bgRepeat + \" \" + bgAttachment + \" \" + bgPosition;\n};\nCSSParser.prototype.parseBorderColorShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var top = null;\n  var bottom = null;\n  var left = null;\n  var right = null;\n  \n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n      token = this.getToken(true, true);\n      break;\n    }\n    \n    else {\n      var color = this.parseColor(token);\n      if (color)\n        values.push(color);\n      else\n        return \"\";\n    }\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      top = values[0];\n      bottom = top;\n      left = top;\n      right = top;\n      break;\n    case 2:\n      top = values[0];\n      bottom = top;\n      left = values[1];\n      right = left;\n      break;\n    case 3:\n      top = values[0];\n      left = values[1];\n      right = left;\n      bottom = values[2];\n      break;\n    case 4:\n      top = values[0];\n      right = values[1];\n      bottom = values[2];\n      left = values[3];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-top-color\", top));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-right-color\", right));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-bottom-color\", bottom));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-left-color\", left));\n  return top + \" \" + right + \" \" + bottom + \" \" + left;\n};\n\nCSSParser.prototype.parseBorderEdgeOrOutlineShorthand = function(token, aDecl, aAcceptPriority, aProperty)\n{\n  var bWidth = null;\n  var bStyle = null;\n  var bColor = null;\n  \n  while (true) {\n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!bWidth\n             && !bStyle\n             && !bColor\n             && token.isIdent(this.kINHERIT)) {\n      bWidth = this.kINHERIT;\n      bStyle = this.kINHERIT;\n      bColor = this.kINHERIT;\n    }\n    \n    else if (!bWidth &&\n             (token.isDimension()\n              || (token.isIdent() && token.value in this.kBORDER_WIDTH_NAMES)\n              || token.isNumber(\"0\"))) {\n               bWidth = token.value;\n             }\n    \n    else if (!bStyle &&\n             (token.isIdent() && token.value in this.kBORDER_STYLE_NAMES)) {\n      bStyle = token.value;\n    }\n    \n    else {\n      var color = (aProperty == \"outline\" && token.isIdent(\"invert\"))\n      ? \"invert\" : this.parseColor(token);\n      if (!bColor && color)\n        bColor = color;\n      else\n        return \"\";\n    }\n    token = this.getToken(true, true);\n  }\n  \n  // create the declarations\n  this.forgetState();\n  bWidth = bWidth ? bWidth : \"medium\";\n  bStyle = bStyle ? bStyle : \"none\";\n  bColor = bColor ? bColor : \"-moz-initial\";\n  \n  function addPropertyToDecl(aSelf, aDecl, property, w, s, c) {\n    aDecl.push(aSelf._createJscsspDeclarationFromValue(property + \"-width\", w));\n    aDecl.push(aSelf._createJscsspDeclarationFromValue(property + \"-style\", s));\n    aDecl.push(aSelf._createJscsspDeclarationFromValue(property + \"-color\", c));\n  }\n  \n  if (aProperty == \"border\") {\n    addPropertyToDecl(this, aDecl, \"border-top\", bWidth, bStyle, bColor);\n    addPropertyToDecl(this, aDecl, \"border-right\", bWidth, bStyle, bColor);\n    addPropertyToDecl(this, aDecl, \"border-bottom\", bWidth, bStyle, bColor);\n    addPropertyToDecl(this, aDecl, \"border-left\", bWidth, bStyle, bColor);\n  }\n  else\n    addPropertyToDecl(this, aDecl, aProperty, bWidth, bStyle, bColor);\n  return bWidth + \" \" + bStyle + \" \" + bColor;\n};\n\nCSSParser.prototype.parseBorderImage = function()\n{\n  var borderImage = {url: \"\", offsets: [], widths: [], sizes: []};\n  var token = this.getToken(true, true);\n  if (token.isFunction(\"url(\")) {\n    token = this.getToken(true, true);\n    var urlContent = this.parseURL(token);\n    if (urlContent) {\n      borderImage.url = urlContent.substr(0, urlContent.length - 1).trim();\n      if ((borderImage.url[0] == '\"' && borderImage.url[borderImage.url.length - 1] == '\"')\n          || (borderImage.url[0] == \"'\" && borderImage.url[borderImage.url.length - 1] == \"'\"))\n        borderImage.url = borderImage.url.substr(1, borderImage.url.length - 2);\n    }\n    else\n      return null;\n  }\n  else\n    return null; \n  \n  token = this.getToken(true, true);\n  if (token.isNumber()\n      || token.isPercentage())\n    borderImage.offsets.push(token.value);\n  else\n    return null;\n  var i;\n  for (i= 0; i < 3; i++) {\n    token = this.getToken(true, true);\n    if (token.isNumber()\n        || token.isPercentage())\n      borderImage.offsets.push(token.value);\n    else\n      break;\n  }\n  if (i == 3)\n    token = this.getToken(true, true);\n  \n  if (token.isSymbol(\"/\")) {\n    token = this.getToken(true, true);\n    if (token.isDimension()\n        || token.isNumber(\"0\")\n        || (token.isIdent() && token.value in this.kBORDER_WIDTH_NAMES))\n      borderImage.widths.push(token.value);\n    else\n      return null;\n    \n    for (var i = 0; i < 3; i++) {\n      token = this.getToken(true, true);\n      if (token.isDimension()\n          || token.isNumber(\"0\")\n          || (token.isIdent() && token.value in this.kBORDER_WIDTH_NAMES))\n        borderImage.widths.push(token.value);\n      else\n        break;\n    }\n    if (i == 3)\n      token = this.getToken(true, true);\n  }\n  \n  for (var i = 0; i < 2; i++) {\n    if (token.isIdent(\"stretch\")\n        || token.isIdent(\"repeat\")\n        || token.isIdent(\"round\"))\n      borderImage.sizes.push(token.value);\n    else if (!token.isNotNull())\n      return borderImage;\n    else\n      return null;\n    token = this.getToken(true, true);\n  }\n  if (!token.isNotNull())\n    return borderImage;\n  \n  return null;\n};\n\nCSSParser.prototype.parseBorderStyleShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var top = null;\n  var bottom = null;\n  var left = null;\n  var right = null;\n  \n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n    }\n    \n    else if (token.isIdent() && token.value in this.kBORDER_STYLE_NAMES) {\n      values.push(token.value);\n    }\n    else\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      top = values[0];\n      bottom = top;\n      left = top;\n      right = top;\n      break;\n    case 2:\n      top = values[0];\n      bottom = top;\n      left = values[1];\n      right = left;\n      break;\n    case 3:\n      top = values[0];\n      left = values[1];\n      right = left;\n      bottom = values[2];\n      break;\n    case 4:\n      top = values[0];\n      right = values[1];\n      bottom = values[2];\n      left = values[3];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-top-style\", top));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-right-style\", right));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-bottom-style\", bottom));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-left-style\", left));\n  return top + \" \" + right + \" \" + bottom + \" \" + left;\n};\n\nCSSParser.prototype.parseBorderWidthShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var top = null;\n  var bottom = null;\n  var left = null;\n  var right = null;\n  \n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n    }\n    \n    else if (token.isDimension()\n             || token.isNumber(\"0\")\n             || (token.isIdent() && token.value in this.kBORDER_WIDTH_NAMES)) {\n      values.push(token.value);\n    }\n    else\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      top = values[0];\n      bottom = top;\n      left = top;\n      right = top;\n      break;\n    case 2:\n      top = values[0];\n      bottom = top;\n      left = values[1];\n      right = left;\n      break;\n    case 3:\n      top = values[0];\n      left = values[1];\n      right = left;\n      bottom = values[2];\n      break;\n    case 4:\n      top = values[0];\n      right = values[1];\n      bottom = values[2];\n      left = values[3];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-top-width\", top));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-right-width\", right));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-bottom-width\", bottom));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"border-left-width\", left));\n  return top + \" \" + right + \" \" + bottom + \" \" + left;\n};\n\nCSSParser.prototype.parseBoxShadows = function()\n{\n  var shadows = [];\n  var token = this.getToken(true, true);\n  var color = \"\", blurRadius = \"0px\", offsetX = \"0px\", offsetY = \"0px\", spreadRadius = \"0px\";\n  var inset = false;\n  while (token.isNotNull()) {\n    if (token.isIdent(\"none\")) {\n      shadows.push( { none: true } );\n      token = this.getToken(true, true);\n    }\n    else {\n      if (token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var offsetX = token.value;\n        token = this.getToken(true, true);\n      }\n      else\n        return [];\n      \n      if (!inset && token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var offsetY = token.value;\n        token = this.getToken(true, true);\n      }\n      else\n        return [];\n      \n      if (!inset && token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var blurRadius = token.value;\n        token = this.getToken(true, true);\n      }\n      \n      if (!inset && token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var spreadRadius = token.value;\n        token = this.getToken(true, true);\n      }\n      \n      if (!inset && token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      if (token.isFunction(\"rgb(\") ||\n          token.isFunction(\"rgba(\") ||\n          token.isFunction(\"hsl(\") ||\n          token.isFunction(\"hsla(\") ||\n          token.isSymbol(\"#\") ||\n          token.isIdent()) {\n        var color = this.parseColor(token);\n        token = this.getToken(true, true);\n      }\n      \n      if (!inset && token.isIdent('inset')) {\n        inset = true;\n        token = this.getToken(true, true);\n      }\n      \n      shadows.push( { none: false,\n                   color: color,\n                   offsetX: offsetX, offsetY: offsetY,\n                   blurRadius: blurRadius,\n                   spreadRadius: spreadRadius,\n                   inset: inset\n                   } );\n      \n      if (token.isSymbol(\",\")) {\n        inset = false;\n        color = \"\";\n        blurRadius = \"0px\";\n        spreadRadius = \"0px\"\n        offsetX = \"0px\";\n        offsetY = \"0px\"; \n        token = this.getToken(true, true);\n      }\n      else if (!token.isNotNull())\n        return shadows;\n      else\n        return [];\n    }\n  }\n  return shadows;\n};\n\nCSSParser.prototype.parseCharsetRule = function(aSheet) {\n  var token = this.getToken(false, false);\n  if (token.isAtRule(\"@charset\") && token.value == \"@charset\") { // lowercase check\n    var s = token.value;\n    token = this.getToken(false, false);\n    s += token.value;\n    if (token.isWhiteSpace(\" \")) {\n      token = this.getToken(false, false);\n      s += token.value;\n      if (token.isString()) {\n        var encoding = token.value;\n        token = this.getToken(false, false);\n        s += token.value;\n        if (token.isSymbol(\";\")) {\n          var rule = new jscsspCharsetRule();\n          rule.encoding = encoding;\n          rule.parsedCssText = s;\n          rule.parentStyleSheet = aSheet;\n          aSheet.cssRules.push(rule);\n          return true;\n        }\n        else\n          this.reportError(kCHARSET_RULE_MISSING_SEMICOLON);\n      }\n      else\n        this.reportError(kCHARSET_RULE_CHARSET_IS_STRING);\n    }\n    else\n      this.reportError(kCHARSET_RULE_MISSING_WS);\n  }\n  \n  this.addUnknownAtRule(aSheet, s);\n  return false;\n};\n\nCSSParser.prototype.parseColor = function(token)\n{\n  var color = \"\";\n  if (token.isFunction(\"rgb(\")\n      || token.isFunction(\"rgba(\")) {\n    color = token.value;\n    var isRgba = token.isFunction(\"rgba(\")\n    token = this.getToken(true, true);\n    if (!token.isNumber() && !token.isPercentage())\n      return \"\";\n    color += token.value;\n    token = this.getToken(true, true);\n    if (!token.isSymbol(\",\"))\n      return \"\";\n    color += \", \";\n    \n    token = this.getToken(true, true);\n    if (!token.isNumber() && !token.isPercentage())\n      return \"\";\n    color += token.value;\n    token = this.getToken(true, true);\n    if (!token.isSymbol(\",\"))\n      return \"\";\n    color += \", \";\n    \n    token = this.getToken(true, true);\n    if (!token.isNumber() && !token.isPercentage())\n      return \"\";\n    color += token.value;\n    \n    if (isRgba) {\n      token = this.getToken(true, true);\n      if (!token.isSymbol(\",\"))\n        return \"\";\n      color += \", \";\n      \n      token = this.getToken(true, true);\n      if (!token.isNumber())\n        return \"\";\n      color += token.value;\n    }\n    \n    token = this.getToken(true, true);\n    if (!token.isSymbol(\")\"))\n      return \"\";\n    color += token.value;\n  }\n  \n  else if (token.isFunction(\"hsl(\")\n           || token.isFunction(\"hsla(\")) {\n    color = token.value;\n    var isHsla = token.isFunction(\"hsla(\")\n    token = this.getToken(true, true);\n    if (!token.isNumber())\n      return \"\";\n    color += token.value;\n    token = this.getToken(true, true);\n    if (!token.isSymbol(\",\"))\n      return \"\";\n    color += \", \";\n    \n    token = this.getToken(true, true);\n    if (!token.isPercentage())\n      return \"\";\n    color += token.value;\n    token = this.getToken(true, true);\n    if (!token.isSymbol(\",\"))\n      return \"\";\n    color += \", \";\n    \n    token = this.getToken(true, true);\n    if (!token.isPercentage())\n      return \"\";\n    color += token.value;\n    \n    if (isHsla) {\n      token = this.getToken(true, true);\n      if (!token.isSymbol(\",\"))\n        return \"\";\n      color += \", \";\n      \n      token = this.getToken(true, true);\n      if (!token.isNumber())\n        return \"\";\n      color += token.value;\n    }\n    \n    token = this.getToken(true, true);\n    if (!token.isSymbol(\")\"))\n      return \"\";\n    color += token.value;\n  }\n  \n  else if (token.isIdent()\n           && (token.value in this.kCOLOR_NAMES))\n    color = token.value;\n  \n  else if (token.isSymbol(\"#\")) {\n    token = this.getHexValue();\n    if (!token.isHex())\n      return \"\";\n    var length = token.value.length;\n    if (length != 3 && length != 6)\n      return \"\";\n    if (token.value.match( /[a-fA-F0-9]/g ).length != length)\n      return \"\";\n    color = \"#\" + token.value;\n  }\n  return color;\n};\n\nCSSParser.prototype.parseCueShorthand = function(token, declarations, aAcceptPriority)\n{\n  var before = \"\";\n  var after = \"\";\n  \n  var values = [];\n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n    }\n    \n    else if (token.isIdent(\"none\"))\n      values.push(token.value);\n    \n    else if (token.isFunction(\"url(\")) {\n      token = this.getToken(true, true);\n      var urlContent = this.parseURL(token);\n      if (urlContent)\n        values.push(\"url(\" + urlContent);\n      else\n        return \"\";\n    }\n    else\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      before = values[0];\n      after = before;\n      break;\n    case 2:\n      before = values[0];\n      after = values[1];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(\"cue-before\", before));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"cue-after\", after));\n  return before + \" \" + after;\n};\n\nCSSParser.prototype.parseDeclaration = function(aToken, aDecl, aAcceptPriority, aExpandShorthands, aSheet) {\n  this.preserveState();\n  var blocks = [];\n  if (aToken.isIdent()) {\n    var descriptor = aToken.value.toLowerCase();\n    var token = this.getToken(true, true);\n    if (token.isSymbol(\":\")) {\n      var token = this.getToken(true, true);\n      \n      var value = \"\";\n      var declarations = [];\n      if (aExpandShorthands)\n        switch (descriptor) {\n          case \"background\":\n            value = this.parseBackgroundShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"margin\":\n          case \"padding\":\n            value = this.parseMarginOrPaddingShorthand(token, declarations, aAcceptPriority, descriptor);\n            break;\n          case \"border-color\":\n            value = this.parseBorderColorShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"border-style\":\n            value = this.parseBorderStyleShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"border-width\":\n            value = this.parseBorderWidthShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"border-top\":\n          case \"border-right\":\n          case \"border-bottom\":\n          case \"border-left\":\n          case \"border\":\n          case \"outline\":\n            value = this.parseBorderEdgeOrOutlineShorthand(token, declarations, aAcceptPriority, descriptor);\n            break;\n          case \"cue\":\n            value = this.parseCueShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"pause\":\n            value = this.parsePauseShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"font\":\n            value = this.parseFontShorthand(token, declarations, aAcceptPriority);\n            break;\n          case \"list-style\":\n            value = this.parseListStyleShorthand(token, declarations, aAcceptPriority);\n            break;\n          default:\n            value = this.parseDefaultPropertyValue(token, declarations, aAcceptPriority, descriptor, aSheet);\n            break;\n        }\n      else\n        value = this.parseDefaultPropertyValue(token, declarations, aAcceptPriority, descriptor, aSheet);\n      token = this.currentToken();\n      if (value) // no error above\n      {\n        var priority = false;\n        if (token.isSymbol(\"!\")) {\n          token = this.getToken(true, true);\n          if (token.isIdent(\"important\")) {\n            priority = true;\n            token = this.getToken(true, true);\n            if (token.isSymbol(\";\") || token.isSymbol(\"}\")) {\n              if (token.isSymbol(\"}\"))\n                this.ungetToken();\n            }\n            else return \"\";\n          }\n          else return \"\";\n        }\n        else if  (token.isNotNull() && !token.isSymbol(\";\") && !token.isSymbol(\"}\"))\n          return \"\";\n        for (var i = 0; i < declarations.length; i++) {\n          declarations[i].priority = priority;\n          aDecl.push(declarations[i]);\n        }\n        return descriptor + \": \" + value + \";\";\n      }\n    }\n  }\n  else if (aToken.isComment()) {\n    if (this.mPreserveComments) {\n      this.forgetState();\n      var comment = new jscsspComment();\n      comment.parsedCssText = aToken.value;\n      aDecl.push(comment);\n    }\n    return aToken.value;\n  }\n  \n  // we have an error here, let's skip it\n  this.restoreState();\n  var s = aToken.value;\n  blocks = [];\n  var token = this.getToken(false, false);\n  while (token.isNotNull()) {\n    s += token.value;\n    if ((token.isSymbol(\";\") || token.isSymbol(\"}\")) && !blocks.length) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    } else if (token.isSymbol(\"{\")\n               || token.isSymbol(\"(\")\n               || token.isSymbol(\"[\")\n               || token.isFunction()) {\n      blocks.push(token.isFunction() ? \"(\" : token.value);\n    } else if (token.isSymbol(\"}\")\n               || token.isSymbol(\")\")\n               || token.isSymbol(\"]\")) {\n      if (blocks.length) {\n        var ontop = blocks[blocks.length - 1];\n        if ((token.isSymbol(\"}\") && ontop == \"{\")\n            || (token.isSymbol(\")\") && ontop == \"(\")\n            || (token.isSymbol(\"]\") && ontop == \"[\")) {\n          blocks.pop();\n        }\n      }\n    }\n    token = this.getToken(false, false);\n  }\n  return \"\";\n};\n\nCSSParser.prototype.reportError = function(aMsg) {\n  this.mError = aMsg;\n};\n\nCSSParser.prototype.consumeError = function() {\n  var e = this.mError;\n  this.mError = null;\n  return e;\n};\n\nfunction CSSParser(aString)\n{\n  this.mToken = null;\n  this.mLookAhead = null;\n  this.mScanner = new CSSScanner(aString);\n  \n  this.mPreserveWS = true;\n  this.mPreserveComments = true;\n  \n  this.mPreservedTokens = [];\n  \n  this.mError = null;\n}\n\nCSSParser.prototype._init = function() {\n  this.mToken = null;\n  this.mLookAhead = null;\n};\n\nCSSParser.prototype.kINHERIT = \"inherit\",\n\nCSSParser.prototype.kBORDER_WIDTH_NAMES = {\n  \"thin\": true,\n  \"medium\": true,\n  \"thick\": true\n};\n\nCSSParser.prototype.kBORDER_STYLE_NAMES = {\n  \"none\": true,\n  \"hidden\": true,\n  \"dotted\": true,\n  \"dashed\": true,\n  \"solid\": true,\n  \"double\": true,\n  \"groove\": true,\n  \"ridge\": true,\n  \"inset\": true,\n  \"outset\": true\n};\n\nCSSParser.prototype.kCOLOR_NAMES = {\n  \"transparent\": true,\n  \n  \"black\": true,\n  \"silver\": true,\n  \"gray\": true,\n  \"white\": true,\n  \"maroon\": true,\n  \"red\": true,\n  \"purple\": true,\n  \"fuchsia\": true,\n  \"green\": true,\n  \"lime\": true,\n  \"olive\": true,\n  \"yellow\": true,\n  \"navy\": true,\n  \"blue\": true,\n  \"teal\": true,\n  \"aqua\": true,\n  \n  \"aliceblue\": true,\n  \"antiquewhite\": true,\n  \"aquamarine\": true,\n  \"azure\": true,\n  \"beige\": true,\n  \"bisque\": true,\n  \"blanchedalmond\": true,\n  \"blueviolet\": true,\n  \"brown\": true,\n  \"burlywood\": true,\n  \"cadetblue\": true,\n  \"chartreuse\": true,\n  \"chocolate\": true,\n  \"coral\": true,\n  \"cornflowerblue\": true,\n  \"cornsilk\": true,\n  \"crimson\": true,\n  \"cyan\": true,\n  \"darkblue\": true,\n  \"darkcyan\": true,\n  \"darkgoldenrod\": true,\n  \"darkgray\": true,\n  \"darkgreen\": true,\n  \"darkgrey\": true,\n  \"darkkhaki\": true,\n  \"darkmagenta\": true,\n  \"darkolivegreen\": true,\n  \"darkorange\": true,\n  \"darkorchid\": true,\n  \"darkred\": true,\n  \"darksalmon\": true,\n  \"darkseagreen\": true,\n  \"darkslateblue\": true,\n  \"darkslategray\": true,\n  \"darkslategrey\": true,\n  \"darkturquoise\": true,\n  \"darkviolet\": true,\n  \"deeppink\": true,\n  \"deepskyblue\": true,\n  \"dimgray\": true,\n  \"dimgrey\": true,\n  \"dodgerblue\": true,\n  \"firebrick\": true,\n  \"floralwhite\": true,\n  \"forestgreen\": true,\n  \"gainsboro\": true,\n  \"ghostwhite\": true,\n  \"gold\": true,\n  \"goldenrod\": true,\n  \"greenyellow\": true,\n  \"grey\": true,\n  \"honeydew\": true,\n  \"hotpink\": true,\n  \"indianred\": true,\n  \"indigo\": true,\n  \"ivory\": true,\n  \"khaki\": true,\n  \"lavender\": true,\n  \"lavenderblush\": true,\n  \"lawngreen\": true,\n  \"lemonchiffon\": true,\n  \"lightblue\": true,\n  \"lightcoral\": true,\n  \"lightcyan\": true,\n  \"lightgoldenrodyellow\": true,\n  \"lightgray\": true,\n  \"lightgreen\": true,\n  \"lightgrey\": true,\n  \"lightpink\": true,\n  \"lightsalmon\": true,\n  \"lightseagreen\": true,\n  \"lightskyblue\": true,\n  \"lightslategray\": true,\n  \"lightslategrey\": true,\n  \"lightsteelblue\": true,\n  \"lightyellow\": true,\n  \"limegreen\": true,\n  \"linen\": true,\n  \"magenta\": true,\n  \"mediumaquamarine\": true,\n  \"mediumblue\": true,\n  \"mediumorchid\": true,\n  \"mediumpurple\": true,\n  \"mediumseagreen\": true,\n  \"mediumslateblue\": true,\n  \"mediumspringgreen\": true,\n  \"mediumturquoise\": true,\n  \"mediumvioletred\": true,\n  \"midnightblue\": true,\n  \"mintcream\": true,\n  \"mistyrose\": true,\n  \"moccasin\": true,\n  \"navajowhite\": true,\n  \"oldlace\": true,\n  \"olivedrab\": true,\n  \"orange\": true,\n  \"orangered\": true,\n  \"orchid\": true,\n  \"palegoldenrod\": true,\n  \"palegreen\": true,\n  \"paleturquoise\": true,\n  \"palevioletred\": true,\n  \"papayawhip\": true,\n  \"peachpuff\": true,\n  \"peru\": true,\n  \"pink\": true,\n  \"plum\": true,\n  \"powderblue\": true,\n  \"rosybrown\": true,\n  \"royalblue\": true,\n  \"saddlebrown\": true,\n  \"salmon\": true,\n  \"sandybrown\": true,\n  \"seagreen\": true,\n  \"seashell\": true,\n  \"sienna\": true,\n  \"skyblue\": true,\n  \"slateblue\": true,\n  \"slategray\": true,\n  \"slategrey\": true,\n  \"snow\": true,\n  \"springgreen\": true,\n  \"steelblue\": true,\n  \"tan\": true,\n  \"thistle\": true,\n  \"tomato\": true,\n  \"turquoise\": true,\n  \"violet\": true,\n  \"wheat\": true,\n  \"whitesmoke\": true,\n  \"yellowgreen\": true,\n  \n  \"activeborder\": true,\n  \"activecaption\": true,\n  \"appworkspace\": true,\n  \"background\": true,\n  \"buttonface\": true,\n  \"buttonhighlight\": true,\n  \"buttonshadow\": true,\n  \"buttontext\": true,\n  \"captiontext\": true,\n  \"graytext\": true,\n  \"highlight\": true,\n  \"highlighttext\": true,\n  \"inactiveborder\": true,\n  \"inactivecaption\": true,\n  \"inactivecaptiontext\": true,\n  \"infobackground\": true,\n  \"infotext\": true,\n  \"menu\": true,\n  \"menutext\": true,\n  \"scrollbar\": true,\n  \"threeddarkshadow\": true,\n  \"threedface\": true,\n  \"threedhighlight\": true,\n  \"threedlightshadow\": true,\n  \"threedshadow\": true,\n  \"window\": true,\n  \"windowframe\": true,\n  \"windowtext\": true\n};\n\nCSSParser.prototype.kLIST_STYLE_TYPE_NAMES = {\n  \"decimal\": true,\n  \"decimal-leading-zero\": true,\n  \"lower-roman\": true,\n  \"upper-roman\": true,\n  \"georgian\": true,\n  \"armenian\": true,\n  \"lower-latin\": true,\n  \"lower-alpha\": true,\n  \"upper-latin\": true,\n  \"upper-alpha\": true,\n  \"lower-greek\": true,\n  \n  \"disc\": true,\n  \"circle\": true,\n  \"square\": true,\n  \"none\": true,\n  \n  /* CSS 3 */\n  \"box\": true,\n  \"check\": true,\n  \"diamond\": true,\n  \"hyphen\": true,\n  \n  \"lower-armenian\": true,\n  \"cjk-ideographic\": true,\n  \"ethiopic-numeric\": true,\n  \"hebrew\": true,\n  \"japanese-formal\": true,\n  \"japanese-informal\": true,\n  \"simp-chinese-formal\": true,\n  \"simp-chinese-informal\": true,\n  \"syriac\": true,\n  \"tamil\": true,\n  \"trad-chinese-formal\": true,\n  \"trad-chinese-informal\": true,\n  \"upper-armenian\": true,\n  \"arabic-indic\": true,\n  \"binary\": true,\n  \"bengali\": true,\n  \"cambodian\": true,\n  \"khmer\": true,\n  \"devanagari\": true,\n  \"gujarati\": true,\n  \"gurmukhi\": true,\n  \"kannada\": true,\n  \"lower-hexadecimal\": true,\n  \"lao\": true,\n  \"malayalam\": true,\n  \"mongolian\": true,\n  \"myanmar\": true,\n  \"octal\": true,\n  \"oriya\": true,\n  \"persian\": true,\n  \"urdu\": true,\n  \"telugu\": true,\n  \"tibetan\": true,\n  \"upper-hexadecimal\": true,\n  \"afar\": true,\n  \"ethiopic-halehame-aa-et\": true,\n  \"ethiopic-halehame-am-et\": true,\n  \"amharic-abegede\": true,\n  \"ehiopic-abegede-am-et\": true,\n  \"cjk-earthly-branch\": true,\n  \"cjk-heavenly-stem\": true,\n  \"ethiopic\": true,\n  \"ethiopic-abegede\": true,\n  \"ethiopic-abegede-gez\": true,\n  \"hangul-consonant\": true,\n  \"hangul\": true,\n  \"hiragana-iroha\": true,\n  \"hiragana\": true,\n  \"katakana-iroha\": true,\n  \"katakana\": true,\n  \"lower-norwegian\": true,\n  \"oromo\": true,\n  \"ethiopic-halehame-om-et\": true,\n  \"sidama\": true,\n  \"ethiopic-halehame-sid-et\": true,\n  \"somali\": true,\n  \"ethiopic-halehame-so-et\": true,\n  \"tigre\": true,\n  \"ethiopic-halehame-tig\": true,\n  \"tigrinya-er-abegede\": true,\n  \"ethiopic-abegede-ti-er\": true,\n  \"tigrinya-et\": true,\n  \"ethiopic-halehame-ti-et\": true,\n  \"upper-greek\": true,\n  \"asterisks\": true,\n  \"footnotes\": true,\n  \"circled-decimal\": true,\n  \"circled-lower-latin\": true,\n  \"circled-upper-latin\": true,\n  \"dotted-decimal\": true,\n  \"double-circled-decimal\": true,\n  \"filled-circled-decimal\": true,\n  \"parenthesised-decimal\": true,\n  \"parenthesised-lower-latin\": true\n};\n\nCSSParser.prototype.parseFontFaceRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  var valid = false;\n  var descriptors = [];\n  this.preserveState();\n  var token = this.getToken(true, true);\n  if (token.isNotNull()) {\n    // expecting block start\n    if (token.isSymbol(\"{\")) {\n      s += \" \" + token.value;\n      var token = this.getToken(true, false);\n      while (true) {\n        if (token.isSymbol(\"}\")) {\n          s += \"}\";\n          valid = true;\n          break;\n        } else {\n          var d = this.parseDeclaration(token, descriptors, false, false, aSheet);\n          s += ((d && descriptors.length) ? \" \" : \"\") + d;\n        }\n        token = this.getToken(true, false);\n      }\n    }\n  }\n  if (valid) {\n    this.forgetState();\n    var rule = new jscsspFontFaceRule();\n    rule.currentLine = currentLine;\n    rule.parsedCssText = s;\n    rule.descriptors = descriptors;\n    rule.parentStyleSheet = aSheet;\n    aSheet.cssRules.push(rule)\n    return true;\n  }\n  this.restoreState();\n  return false;\n};\n\nCSSParser.prototype.parseFontShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var kStyle = {\"italic\": true, \"oblique\": true };\n  var kVariant = {\"small-caps\": true };\n  var kWeight = { \"bold\": true, \"bolder\": true, \"lighter\": true,\n    \"100\": true, \"200\": true, \"300\": true, \"400\": true,\n    \"500\": true, \"600\": true, \"700\": true, \"800\": true,\n    \"900\": true };\n  var kSize = { \"xx-small\": true, \"x-small\": true, \"small\": true, \"medium\": true,\n    \"large\": true, \"x-large\": true, \"xx-large\": true,\n    \"larger\": true, \"smaller\": true };\n  var kValues = { \"caption\": true, \"icon\": true, \"menu\": true, \"message-box\": true, \"small-caption\": true, \"status-bar\": true };\n  var kFamily = { \"serif\": true, \"sans-serif\": true, \"cursive\": true, \"fantasy\": true, \"monospace\": true };\n  \n  var fStyle = null;\n  var fVariant = null;\n  var fWeight = null;\n  var fSize = null;\n  var fLineHeight = null;\n  var fFamily = \"\";\n  var fSystem = null;\n  var fFamilyValues = [];\n  \n  var normalCount = 0;\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!fStyle && !fVariant && !fWeight\n             && !fSize && !fLineHeight && !fFamily\n             && !fSystem\n             && token.isIdent(this.kINHERIT)) {\n      fStyle = this.kINHERIT;\n      fVariant = this.kINHERIT;\n      fWeight = this.kINHERIT;\n      fSize = this.kINHERIT;\n      fLineHeight = this.kINHERIT;\n      fFamily = this.kINHERIT;\n      fSystem = this.kINHERIT;\n    }\n    \n    else {\n      if (!fSystem && (token.isIdent() && token.value in kValues)) {\n        fSystem = token.value;\n        break;\n      }\n      \n      else {\n        if (!fStyle\n            && token.isIdent()\n            && (token.value in kStyle)) {\n          fStyle = token.value;\n        }\n        \n        else if (!fVariant\n                 && token.isIdent()\n                 && (token.value in kVariant)) {\n          fVariant = token.value;\n        }\n        \n        else if (!fWeight\n                 && (token.isIdent() || token.isNumber())\n                 && (token.value in kWeight)) {\n          fWeight = token.value;\n        }\n        \n        else if (!fSize\n                 && ((token.isIdent() && (token.value in kSize))\n                     || token.isDimension()\n                     || token.isPercentage())) {\n                   fSize = token.value;\n                   token = this.getToken(false, false);\n                   if (token.isSymbol(\"/\")) {\n                     token = this.getToken(false, false);\n                     if (!fLineHeight &&\n                         (token.isDimension() || token.isNumber() || token.isPercentage())) {\n                       fLineHeight = token.value;\n                     }\n                     else\n                       return \"\";\n                   }\n                   else if (!token.isWhiteSpace())\n                     continue;\n                 }\n        \n        else if (token.isIdent(\"normal\")) {\n          normalCount++;\n          if (normalCount > 3)\n            return \"\";\n        }\n        \n        else if (!fFamily && // *MUST* be last to be tested here\n                 (token.isString()\n                  || token.isIdent())) {\n                   var lastWasComma = false;\n                   while (true) {\n                     if (!token.isNotNull())\n                       break;\n                     else if (token.isSymbol(\";\")\n                              || (aAcceptPriority && token.isSymbol(\"!\"))\n                              || token.isSymbol(\"}\")) {\n                       this.ungetToken();\n                       break;\n                     }\n                     else if (token.isIdent() && token.value in kFamily) {\n                       var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, null);\n                       value.value = token.value;\n                       fFamilyValues.push(value);\n                       fFamily += token.value;\n                       break;\n                     }\n                     else if (token.isString() || token.isIdent()) {\n                       var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, null);\n                       value.value = token.value;\n                       fFamilyValues.push(value);\n                       fFamily += token.value;\n                       lastWasComma = false;\n                     }\n                     else if (!lastWasComma && token.isSymbol(\",\")) {\n                       fFamily += \", \";\n                       lastWasComma = true;\n                     }\n                     else\n                       return \"\";\n                     token = this.getToken(true, true);\n                   }\n                 }\n        \n        else {\n          return \"\";\n        }\n      }\n      \n    }\n    \n    token = this.getToken(true, true);\n  }\n  \n  // create the declarations\n  this.forgetState();\n  if (fSystem) {\n    aDecl.push(this._createJscsspDeclarationFromValue(\"font\", fSystem));\n    return fSystem;\n  }\n  fStyle = fStyle ? fStyle : \"normal\";\n  fVariant = fVariant ? fVariant : \"normal\";\n  fWeight = fWeight ? fWeight : \"normal\";\n  fSize = fSize ? fSize : \"medium\";\n  fLineHeight = fLineHeight ? fLineHeight : \"normal\";\n  fFamily = fFamily ? fFamily : \"-moz-initial\";\n  \n  aDecl.push(this._createJscsspDeclarationFromValue(\"font-style\", fStyle));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"font-variant\", fVariant));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"font-weight\", fWeight));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"font-size\", fSize));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"line-height\", fLineHeight));\n  aDecl.push(this._createJscsspDeclarationFromValuesArray(\"font-family\", fFamilyValues, fFamily));\n  return fStyle + \" \" + fVariant + \" \" + fWeight + \" \" + fSize + \"/\" + fLineHeight + \" \" + fFamily;\n};\n\nCSSParser.prototype.parseFunctionArgument = function(token)\n{\n  var value = \"\";\n  if (token.isString())\n  {\n    value += token.value;\n    token = this.getToken(true, true);\n  }\n  else {\n    var parenthesis = 1;\n    while (true)\n    {\n      if (!token.isNotNull())\n        return \"\";\n      if (token.isFunction() || token.isSymbol(\"(\"))\n        parenthesis++;\n      if (token.isSymbol(\")\")) {\n        parenthesis--;\n        if (!parenthesis)\n          break;\n      }\n      value += token.value;\n      token = this.getToken(false, false);\n    }\n  }\n  \n  if (token.isSymbol(\")\"))\n    return value + \")\";\n  return \"\";\n};\n\nCSSParser.prototype.parseColorStop = function(token)\n{\n  var color = this.parseColor(token);\n  var position = \"\";\n  if (!color)\n    return null;\n  token = this.getToken(true, true);\n  if (token.isLength()) {\n    position = token.value;\n    token = this.getToken(true, true);\n  }\n  return { color: color, position: position }\n};\n\nCSSParser.prototype.parseGradient = function ()\n{\n  var kHPos = {\"left\": true, \"right\": true };\n  var kVPos = {\"top\": true, \"bottom\": true };\n  var kPos = {\"left\": true, \"right\": true, \"top\": true, \"bottom\": true, \"center\": true};\n  \n  var isRadial = false;\n  var gradient = { isRepeating: false };\n  var token = this.getToken(true, true);\n  if (token.isNotNull()) {\n    if (token.isFunction(\"linear-gradient(\") ||\n        token.isFunction(\"radial-gradient(\") ||\n        token.isFunction(\"repeating-linear-gradient(\") ||\n        token.isFunction(\"repeating-radial-gradient(\")) {\n      if (token.isFunction(\"radial-gradient(\") ||\n          token.isFunction(\"repeating-radial-gradient(\")) {\n        gradient.isRadial = true;\n      }\n      if (token.isFunction(\"repeating-linear-gradient(\") ||\n          token.isFunction(\"repeating-radial-gradient(\")) {\n        gradient.isRepeating = true;\n      }\n      \n      \n      token = this.getToken(true, true);\n      var foundPosition = false;\n      var haveAngle = false;\n      \n      /********** LINEAR **********/\n      if (token.isAngle()) {\n        gradient.angle = token.value;\n        haveAngle = true;\n        token = this.getToken(true, true);\n        if (!token.isSymbol(\",\"))\n          return null;\n        token = this.getToken(true, true);\n      }\n      \n      else if (token.isIdent(\"to\")) {\n        foundPosition = true;\n        token = this.getToken(true, true);\n        if (token.isIdent(\"top\")\n            || token.isIdent(\"bottom\")\n            || token.isIdent(\"left\")\n            || token.isIdent(\"right\")) {\n          gradient.position = token.value;\n          token = this.getToken(true, true);\n          if (((gradient.position == \"top\" || gradient.position == \"bottom\") && (token.isIdent(\"left\") || token.isIdent(\"right\")))\n              || ((gradient.position == \"left\" || gradient.position == \"right\") && (token.isIdent(\"top\") || token.isIdent(\"bottom\")))) {\n            gradient.position += \" \" + token.value;\n            token = this.getToken(true, true);\n          }\n        }\n        else\n          return null;\n        \n        if (!token.isSymbol(\",\"))\n          return null;\n        token = this.getToken(true, true);\n      }\n      \n      /********** RADIAL **********/\n      else if (gradient.isRadial) {\n        gradient.shape = \"\";\n        gradient.extent = \"\";\n        gradient.positions = [];\n        gradient.at = \"\";\n        \n        while (!token.isIdent(\"at\") && !token.isSymbol(\",\")) {\n          if (!gradient.shape\n              && (token.isIdent(\"circle\") || token.isIdent(\"ellipse\"))) {\n            gradient.shape = token.value;\n            token = this.getToken(true, true);\n          }\n          else if (!gradient.extent\n                   && (token.isIdent(\"closest-corner\")\n                       || token.isIdent(\"closes-side\")\n                       || token.isIdent(\"farthest-corner\")\n                       || token.isIdent(\"farthest-corner\"))) {\n                     gradient.extent = token.value;\n                     token = this.getToken(true, true);\n                   }\n          else if (gradient.positions.length < 2 && token.isLength()){\n            gradient.positions.push(token.value);\n            token = this.getToken(true, true);\n          }\n          else\n            break;\n        }\n        \n        // verify if the shape is null of well defined\n        if ((gradient.positions.length == 1 && !gradient.extent && (gradient.shape == \"circle\" || !gradient.shape))\n            || (gradient.positions.length == 2 && !gradient.extent && (gradient.shape == \"ellipse\" || !gradient.shape))\n            || (!gradient.positions.length && gradient.extent)\n            || (!gradient.positions.length && !gradient.extent)) {\n          // shape ok\n        }\n        else  {\n          return null;\n        }\n        \n        if (token.isIdent(\"at\")) {\n          token = this.getToken(true, true);\n          if (((token.isIdent() && token.value in kPos)\n               || token.isDimension()\n               || token.isNumber(\"0\")\n               || token.isPercentage())) {\n            gradient.at = token.value;\n            token = this.getToken(true, true);\n            if (token.isDimension() || token.isNumber(\"0\") || token.isPercentage()) {\n              gradient.at += \" \" + token.value;\n            }\n            else if (token.isIdent() && token.value in kPos) {\n              if ((gradient.at in kHPos && token.value in kHPos) ||\n                  (gradient.at in kVPos && token.value in kVPos))\n                return \"\";\n              gradient.at += \" \" + token.value;\n            }\n            else {\n              this.ungetToken();\n              gradient.at += \" center\";\n            }\n          }\n          else\n            return null;\n          \n          token = this.getToken(true, true);\n        }\n        \n        if (gradient.shape || gradient.extent || gradient.positions.length || gradient.at) {\n          if (!token.isSymbol(\",\"))\n            return null;\n          token = this.getToken(true, true);\n        }\n      }\n      \n      // now color stops...\n      var stop1 = this.parseColorStop(token);\n      if (!stop1)\n        return null;\n      token = this.currentToken();\n      if (!token.isSymbol(\",\"))\n        return null;\n      token = this.getToken(true, true);\n      var stop2 = this.parseColorStop(token);\n      if (!stop2)\n        return null;\n      token = this.currentToken();\n      if (token.isSymbol(\",\")) {\n        token = this.getToken(true, true);\n      }\n      // ok we have at least two color stops\n      gradient.stops = [stop1, stop2];\n      while (!token.isSymbol(\")\")) {\n        var colorstop = this.parseColorStop(token);\n        if (!colorstop)\n          return null;\n        token = this.currentToken();\n        if (!token.isSymbol(\")\") && !token.isSymbol(\",\"))\n          return null;\n        if (token.isSymbol(\",\"))\n          token = this.getToken(true, true);\n        gradient.stops.push(colorstop);\n      }\n      return gradient;\n    }\n  }\n  return null;\n};\n\nCSSParser.prototype.serializeGradient = function(gradient)\n{\n  var s = gradient.isRadial\n  ? (gradient.isRepeating ? \"repeating-radial-gradient(\" : \"radial-gradient(\" )\n  : (gradient.isRepeating ? \"repeating-linear-gradient(\" : \"linear-gradient(\" );\n  if (gradient.angle || gradient.position)\n    s += (gradient.angle ? gradient.angle: \"\") +\n    (gradient.position ? \"to \" + gradient.position : \"\") +\n    \", \";\n  \n  if (gradient.isRadial)\n    s += (gradient.shape ? gradient.shape + \" \" : \"\") +\n    (gradient.extent ? gradient.extent + \" \" : \"\") +\n    (gradient.positions.length ? gradient.positions.join(\" \") + \" \" : \"\") +\n    (gradient.at ? \"at \" + gradient.at + \" \" : \"\") +\n    (gradient.shape || gradient.extent || gradient.positions.length || gradient.at ? \", \" : \"\");\n  \n  for (var i = 0; i < gradient.stops.length; i++) {\n    var colorstop = gradient.stops[i];\n    s += colorstop.color + (colorstop.position ? \" \" + colorstop.position : \"\");\n    if (i != gradient.stops.length -1)\n      s += \", \";\n  }\n  s += \")\";\n  return s;\n};\n\n\nCSSParser.prototype.parseImportRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  this.preserveState();\n  var token = this.getToken(true, true);\n  var media = [];\n  var href = \"\";\n  if (token.isString()) {\n    href = token.value;\n    s += \" \" + href;\n  }\n  else if (token.isFunction(\"url(\")) {\n    token = this.getToken(true, true);\n    var urlContent = this.parseURL(token);\n    if (urlContent) {\n      href = \"url(\" + urlContent;\n      s += \" \" + href;\n    }\n  }\n  else\n    this.reportError(kIMPORT_RULE_MISSING_URL);\n  \n  if (href) {\n    token = this.getToken(true, true);\n    while (token.isIdent()) {\n      s += \" \" + token.value;\n      media.push(token.value);\n      token = this.getToken(true, true);\n      if (!token)\n        break;\n      if (token.isSymbol(\",\")) {\n        s += \",\";\n      } else if (token.isSymbol(\";\")) {\n        break;\n      } else\n        break;\n      token = this.getToken(true, true);\n    }\n    \n    if (!media.length) {\n      media.push(\"all\");\n    }\n    \n    if (token.isSymbol(\";\")) {\n      s += \";\"\n      this.forgetState();\n      var rule = new jscsspImportRule();\n      rule.currentLine = currentLine;\n      rule.parsedCssText = s;\n      rule.href = href;\n      rule.media = media;\n      rule.parentStyleSheet = aSheet;\n      aSheet.cssRules.push(rule);\n      return true;\n    }\n  }\n  \n  this.restoreState();\n  this.addUnknownAtRule(aSheet, \"@import\");\n  return false;\n};\n\nCSSParser.prototype.parseKeyframesRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  var valid = false;\n  var keyframesRule = new jscsspKeyframesRule();\n  keyframesRule.currentLine = currentLine;\n  this.preserveState();\n  var token = this.getToken(true, true);\n  var foundName = false;\n  while (token.isNotNull()) {\n    if (token.isIdent()) {\n      // should be the keyframes' name\n      foundName = true;\n      s += \" \" + token.value;\n      keyframesRule.name = token.value;\n      token = this.getToken(true, true);\n      if (token.isSymbol(\"{\"))\n        this.ungetToken();\n      else {\n        // error...\n        token.type = jscsspToken.NULL_TYPE;\n        break;\n      }\n    }\n    else if (token.isSymbol(\"{\")) {\n      if (!foundName) {\n        token.type = jscsspToken.NULL_TYPE;\n        // not a valid keyframes at-rule\n      }\n      break;\n    }\n    else {\n      token.type = jscsspToken.NULL_TYPE;\n      // not a valid keyframes at-rule\n      break;\n    }\n    token = this.getToken(true, true);\n  }\n  \n  if (token.isSymbol(\"{\") && keyframesRule.name) {\n    // ok let's parse keyframe rules now...\n    s += \" { \";\n    token = this.getToken(true, false);\n    while (token.isNotNull()) {\n      if (token.isComment() && this.mPreserveComments) {\n        s += \" \" + token.value;\n        var comment = new jscsspComment();\n        comment.parsedCssText = token.value;\n        keyframesRule.cssRules.push(comment);\n      } else if (token.isSymbol(\"}\")) {\n        valid = true;\n        break;\n      } else {\n        var r = this.parseKeyframeRule(token, keyframesRule, true);\n        if (r)\n          s += r;\n      }\n      token = this.getToken(true, false);\n    }\n  }\n  if (valid) {\n    this.forgetState();\n    keyframesRule.currentLine = currentLine;\n    keyframesRule.parsedCssText = s;\n    aSheet.cssRules.push(keyframesRule);\n    return true;\n  }\n  this.restoreState();\n  return false;\n};\n\nCSSParser.prototype.parseKeyframeRule = function(aToken, aOwner) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  this.preserveState();\n  var token = aToken;\n  \n  // find the keyframe keys\n  var key = \"\";\n  while (token.isNotNull()) {\n    if (token.isIdent() || token.isPercentage()) {\n      if (token.isIdent()\n          && !token.isIdent(\"from\")\n          && !token.isIdent(\"to\")) {\n        key = \"\";\n        break;\n      }\n      key += token.value;\n      token = this.getToken(true, true);\n      if (token.isSymbol(\"{\")) {\n        this.ungetToken();\n        break;\n      }\n      else \n        if (token.isSymbol(\",\")) {\n          key += \", \";\n        }\n        else {\n          key = \"\";\n          break;\n        }\n    }\n    else {\n      key = \"\";\n      break;\n    }\n    token = this.getToken(true, true);\n  }\n  \n  var valid = false;\n  var declarations = [];\n  if (key) {\n    var s = key;\n    token = this.getToken(true, true);\n    if (token.isSymbol(\"{\")) {\n      s += \" { \";\n      token = this.getToken(true, false);\n      while (true) {\n        if (!token.isNotNull()) {\n          valid = true;\n          break;\n        }\n        if (token.isSymbol(\"}\")) {\n          s += \"}\";\n          valid = true;\n          break;\n        } else {\n          var d = this.parseDeclaration(token, declarations, true, true, aOwner);\n          s += ((d && declarations.length) ? \" \" : \"\") + d;\n        }\n        token = this.getToken(true, false);\n      }\n    }\n  }\n  else {\n    // key is invalid so the whole rule is invalid with it\n  }\n  \n  if (valid) {\n    var rule = new jscsspKeyframeRule();\n    rule.currentLine = currentLine;\n    rule.parsedCssText = s;\n    rule.declarations = declarations;\n    rule.keyText = key;\n    rule.parentRule = aOwner;\n    aOwner.cssRules.push(rule);\n    return s;\n  }\n  this.restoreState();\n  s = this.currentToken().value;\n  this.addUnknownAtRule(aOwner, s);\n  return \"\";\n};\n\nCSSParser.prototype.parseListStyleShorthand = function(token, aDecl, aAcceptPriority)\n{\n  var kPosition = { \"inside\": true, \"outside\": true };\n  \n  var lType = null;\n  var lPosition = null;\n  var lImage = null;\n  \n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!lType && !lPosition && ! lImage\n             && token.isIdent(this.kINHERIT)) {\n      lType = this.kINHERIT;\n      lPosition = this.kINHERIT;\n      lImage = this.kINHERIT;\n    }\n    \n    else if (!lType &&\n             (token.isIdent() && token.value in this.kLIST_STYLE_TYPE_NAMES)) {\n      lType = token.value;\n    }\n    \n    else if (!lPosition &&\n             (token.isIdent() && token.value in kPosition)) {\n      lPosition = token.value;\n    }\n    \n    else if (!lImage && token.isFunction(\"url\")) {\n      token = this.getToken(true, true);\n      var urlContent = this.parseURL(token);\n      if (urlContent) {\n        lImage = \"url(\" + urlContent;\n      }\n      else\n        return \"\";\n    }\n    else if (!token.isIdent(\"none\"))\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  // create the declarations\n  this.forgetState();\n  lType = lType ? lType : \"none\";\n  lImage = lImage ? lImage : \"none\";\n  lPosition = lPosition ? lPosition : \"outside\";\n  \n  aDecl.push(this._createJscsspDeclarationFromValue(\"list-style-type\", lType));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"list-style-position\", lPosition));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"list-style-image\", lImage));\n  return lType + \" \" + lPosition + \" \" + lImage;\n};\n\nCSSParser.prototype.parse = function(aString, aTryToPreserveWhitespaces, aTryToPreserveComments) {\n  if (!aString)\n    return null; // early way out if we can\n  \n  this.mPreserveWS       = aTryToPreserveWhitespaces;\n  this.mPreserveComments = aTryToPreserveComments;\n  this.mPreservedTokens = [];\n  this.mScanner.init(aString);\n  var sheet = new jscsspStylesheet();\n  \n  // @charset can only appear at first char of the stylesheet\n  var token = this.getToken(false, false);\n  if (!token.isNotNull())\n    return sheet;\n  if (token.isAtRule(\"@charset\")) {\n    this.ungetToken();\n    this.parseCharsetRule(sheet);\n    token = this.getToken(false, false);\n  }\n  \n  var foundStyleRules = false;\n  var foundImportRules = false;\n  var foundNameSpaceRules = false;\n  while (true) {\n    if (!token.isNotNull())\n      break;\n    if (token.isWhiteSpace())\n    {\n      if (aTryToPreserveWhitespaces)\n        this.addWhitespace(sheet, token.value);\n    }\n    \n    else if (token.isComment())\n    {\n      if (this.mPreserveComments)\n        this.addComment(sheet, token.value);\n    }\n    \n    else if (token.isAtRule()) {\n      if (token.isAtRule(\"@variables\")) {\n        if (!foundImportRules && !foundStyleRules)\n          this.parseVariablesRule(token, sheet);\n        else {\n          this.reportError(kVARIABLES_RULE_POSITION);\n          this.addUnknownAtRule(sheet, token.value);\n        }\n      }\n      else if (token.isAtRule(\"@import\")) {\n        // @import rules MUST occur before all style and namespace\n        // rules\n        if (!foundStyleRules && !foundNameSpaceRules)\n          foundImportRules = this.parseImportRule(token, sheet);\n        else {\n          this.reportError(kIMPORT_RULE_POSITION);\n          this.addUnknownAtRule(sheet, token.value);\n        }\n      }\n      else if (token.isAtRule(\"@namespace\")) {\n        // @namespace rules MUST occur before all style rule and\n        // after all @import rules\n        if (!foundStyleRules)\n          foundNameSpaceRules = this.parseNamespaceRule(token, sheet);\n        else {\n          this.reportError(kNAMESPACE_RULE_POSITION);\n          this.addUnknownAtRule(sheet, token.value);\n        }\n      }\n      else if (token.isAtRule(\"@font-face\")) {\n        if (this.parseFontFaceRule(token, sheet))\n          foundStyleRules = true;\n        else\n          this.addUnknownAtRule(sheet, token.value);\n      }\n      else if (token.isAtRule(\"@page\")) {\n        if (this.parsePageRule(token, sheet))\n          foundStyleRules = true;\n        else\n          this.addUnknownAtRule(sheet, token.value);\n      }\n      else if (token.isAtRule(\"@media\")) {\n        if (this.parseMediaRule(token, sheet))\n          foundStyleRules = true;\n        else\n          this.addUnknownAtRule(sheet, token.value);\n      }\n      else if (token.isAtRule(\"@keyframes\")) {\n        if (!this.parseKeyframesRule(token, sheet))\n          this.addUnknownAtRule(sheet, token.value);\n      }\n      else if (token.isAtRule(\"@charset\")) {\n        this.reportError(kCHARSET_RULE_CHARSET_SOF);\n        this.addUnknownAtRule(sheet, token.value);\n      }\n      else {\n        this.reportError(kUNKNOWN_AT_RULE);\n        this.addUnknownAtRule(sheet, token.value);\n      }\n    }\n    \n    else // plain style rules\n    {\n      var ruleText = this.parseStyleRule(token, sheet, false);\n      if (ruleText)\n        foundStyleRules = true;\n    }\n    token = this.getToken(false);\n  }\n  \n  return sheet;\n};\nCSSParser.prototype.parseMarginOrPaddingShorthand = function(token, aDecl, aAcceptPriority, aProperty)\n{\n  var top = null;\n  var bottom = null;\n  var left = null;\n  var right = null;\n  \n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n      token = this.getToken(true, true);\n      break;\n    }\n    \n    else if (token.isDimension()\n             || token.isNumber(\"0\")\n             || token.isPercentage()\n             || token.isIdent(\"auto\")) {\n      values.push(token.value);\n    }\n    else\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      top = values[0];\n      bottom = top;\n      left = top;\n      right = top;\n      break;\n    case 2:\n      top = values[0];\n      bottom = top;\n      left = values[1];\n      right = left;\n      break;\n    case 3:\n      top = values[0];\n      left = values[1];\n      right = left;\n      bottom = values[2];\n      break;\n    case 4:\n      top = values[0];\n      right = values[1];\n      bottom = values[2];\n      left = values[3];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(aProperty + \"-top\", top));\n  aDecl.push(this._createJscsspDeclarationFromValue(aProperty + \"-right\", right));\n  aDecl.push(this._createJscsspDeclarationFromValue(aProperty + \"-bottom\", bottom));\n  aDecl.push(this._createJscsspDeclarationFromValue(aProperty + \"-left\", left));\n  return top + \" \" + right + \" \" + bottom + \" \" + left;\n};\n\nCSSParser.prototype.parseMediaQuery = function()\n{\n  var kCONSTRAINTS = {\n    \"width\": true,\n    \"min-width\": true,\n    \"max-width\": true,\n    \"height\": true,\n    \"min-height\": true,\n    \"max-height\": true,\n    \"device-width\": true,\n    \"min-device-width\": true,\n    \"max-device-width\": true,\n    \"device-height\": true,\n    \"min-device-height\": true,\n    \"max-device-height\": true,\n    \"orientation\": true,\n    \"aspect-ratio\": true,\n    \"min-aspect-ratio\": true,\n    \"max-aspect-ratio\": true,\n    \"device-aspect-ratio\": true,\n    \"min-device-aspect-ratio\": true,\n    \"max-device-aspect-ratio\": true,\n    \"color\": true,\n    \"min-color\": true,\n    \"max-color\": true,\n    \"color-index\": true,\n    \"min-color-index\": true,\n    \"max-color-index\": true,\n    \"monochrome\": true,\n    \"min-monochrome\": true,\n    \"max-monochrome\": true,\n    \"resolution\": true,\n    \"min-resolution\": true,\n    \"max-resolution\": true,\n    \"scan\": true,\n    \"grid\": true\n  };\n  \n  var m = {cssText: \"\", amplifier: \"\", medium: \"\", constraints: []};\n  var token = this.getToken(true, true);\n  \n  if (token.isIdent(\"all\") ||\n      token.isIdent(\"aural\") ||\n      token.isIdent(\"braille\") ||\n      token.isIdent(\"handheld\") ||\n      token.isIdent(\"print\") ||\n      token.isIdent(\"projection\") ||\n      token.isIdent(\"screen\") ||\n      token.isIdent(\"tty\") ||\n      token.isIdent(\"tv\")) {\n    m.medium = token.value;\n    m.cssText += token.value;\n    token = this.getToken(true, true);\n  }\n  else if (token.isIdent(\"not\") || token.isIdent(\"only\")) {\n    m.amplifier = token.value.toLowerCase();\n    m.cssText += token.value.toLowerCase();\n    token = this.getToken(true, true);\n    if (token.isIdent(\"all\") ||\n        token.isIdent(\"aural\") ||\n        token.isIdent(\"braille\") ||\n        token.isIdent(\"handheld\") ||\n        token.isIdent(\"print\") ||\n        token.isIdent(\"projection\") ||\n        token.isIdent(\"screen\") ||\n        token.isIdent(\"tty\") ||\n        token.isIdent(\"tv\")) {\n      m.cssText += \" \" + token.value;\n      m.medium = token.value;\n      token = this.getToken(true, true);\n    }\n    else\n      return null;\n  }\n  \n  if (m.medium) {\n    if (!token.isNotNull())\n      return m;\n    if (token.isIdent(\"and\")) {\n      m.cssText += \" and\";\n      token = this.getToken(true, true);\n    }\n    else if (!token.isSymbol(\"{\"))\n      return null;\n  }\n  \n  while (token.isSymbol(\"(\")) {\n    token = this.getToken(true, true);\n    if (token.isIdent() && (token.value in kCONSTRAINTS)) {\n      var constraint = token.value;\n      token = this.getToken(true, true);\n      if (token.isSymbol(\":\")) {\n        token = this.getToken(true, true);\n        var values = [];\n        while (!token.isSymbol(\")\")) {\n          values.push(token.value);\n          token = this.getToken(true, true);\n        }\n        if (token.isSymbol(\")\")) {\n          m.constraints.push({constraint: constraint, value: values});\n          m.cssText += \" (\" + constraint + \": \" + values.join(\" \") + \")\";\n          token = this.getToken(true, true);\n          if (token.isNotNull()) {\n            if (token.isIdent(\"and\")) {\n              m.cssText += \" and\";\n              token = this.getToken(true, true);\n            }\n            else if (!token.isSymbol(\"{\"))\n              return null;\n          }\n          else\n            return m;\n        }\n        else\n          return null;\n      }\n      else if (token.isSymbol(\")\")) {\n        m.constraints.push({constraint: constraint, value: null});\n        m.cssText += \" (\" + constraint + \")\";\n        token = this.getToken(true, true);\n        if (token.isNotNull()) {\n          if (token.isIdent(\"and\")) {\n            m.cssText += \" and\";\n            token = this.getToken(true, true);\n          }\n          else\n            return null;\n        }\n        else\n          return m;\n      }\n      else\n        return null;\n    }\n    else\n      return null;\n  }\n  return m;\n};\n\nCSSParser.prototype.parseMediaRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  var valid = false;\n  var mediaRule = new jscsspMediaRule();\n  mediaRule.currentLine = currentLine;\n  this.preserveState();\n  var token = this.getToken(true, true);\n  var foundMedia = false;\n  while (token.isNotNull()) {\n    this.ungetToken();\n    var mediaQuery = this.parseMediaQuery();\n    token = this.currentToken();\n    if (mediaQuery) {\n      foundMedia = true;\n      s += \" \" + mediaQuery.cssText;\n      mediaRule.media.push(mediaQuery.cssText);\n      if (token.isSymbol(\",\")) {\n        s += \",\";\n      } else {\n        if (token.isSymbol(\"{\"))\n          break;\n        else {\n          // error...\n          token.type = jscsspToken.NULL_TYPE;\n          break;\n        }\n      }\n    }\n    else if (token.isSymbol(\"{\"))\n      break;\n    else if (foundMedia) {\n      token.type = jscsspToken.NULL_TYPE;\n      // not a media list\n      break;\n    }\n    \n    token = this.getToken(true, true);\n  }\n  if (token.isSymbol(\"{\") && mediaRule.media.length) {\n    // ok let's parse style rules now...\n    s += \" { \";\n    token = this.getToken(true, false);\n    while (token.isNotNull()) {\n      if (token.isComment()) {\n        if (this.mPreserveComments) {\n          s += \" \" + token.value;\n          var comment = new jscsspComment();\n          comment.parsedCssText = token.value;\n          mediaRule.cssRules.push(comment);\n        }\n      } else if (token.isSymbol(\"}\")) {\n        valid = true;\n        break;\n      } else {\n        var r = this.parseStyleRule(token, mediaRule, true);\n        if (r)\n          s += r;\n      }\n      token = this.getToken(true, false);\n    }\n  }\n  if (valid) {\n    this.forgetState();\n    mediaRule.parsedCssText = s;\n    aSheet.cssRules.push(mediaRule);\n    return true;\n  }\n  this.restoreState();\n  return false;\n};\n\nCSSParser.prototype.parseNamespaceRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  var valid = false;\n  this.preserveState();\n  var token = this.getToken(true, true);\n  if (token.isNotNull()) {\n    var prefix = \"\";\n    var url = \"\";\n    if (token.isIdent()) {\n      prefix = token.value;\n      s += \" \" + prefix;\n      token = this.getToken(true, true);\n    }\n    if (token) {\n      var foundURL = false;\n      if (token.isString()) {\n        foundURL = true;\n        url = token.value;\n        s += \" \" + url;\n      } else if (token.isFunction(\"url(\")) {\n        // get a url here...\n        token = this.getToken(true, true);\n        var urlContent = this.parseURL(token);\n        if (urlContent) {\n          url += \"url(\" + urlContent;\n          foundURL = true;\n          s += \" \" + urlContent;\n        }\n      }\n    }\n    if (foundURL) {\n      token = this.getToken(true, true);\n      if (token.isSymbol(\";\")) {\n        s += \";\";\n        this.forgetState();\n        var rule = new jscsspNamespaceRule();\n        rule.currentLine = currentLine;\n        rule.parsedCssText = s;\n        rule.prefix = prefix;\n        rule.url = url;\n        rule.parentStyleSheet = aSheet;\n        aSheet.cssRules.push(rule);\n        return true;\n      }\n    }\n    \n  }\n  this.restoreState();\n  this.addUnknownAtRule(aSheet, \"@namespace\");\n  return false;\n};\n\nCSSParser.prototype.parsePageRule = function(aToken, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = aToken.value;\n  var valid = false;\n  var declarations = [];\n  this.preserveState();\n  var token = this.getToken(true, true);\n  var pageSelector = \"\";\n  if (token.isSymbol(\":\") || token.isIdent()) {\n    if (token.isSymbol(\":\")) {\n      pageSelector = \":\";\n      token = this.getToken(false, false);\n    }\n    if (token.isIdent()) {\n      pageSelector += token.value;\n      s += \" \" + pageSelector;\n      token = this.getToken(true, true);\n    }\n  }\n  if (token.isNotNull()) {\n    // expecting block start\n    if (token.isSymbol(\"{\")) {\n      s += \" \" + token.value;\n      var token = this.getToken(true, false);\n      while (true) {\n        if (token.isSymbol(\"}\")) {\n          s += \"}\";\n          valid = true;\n          break;\n        } else {\n          var d = this.parseDeclaration(token, declarations, true, true, aSheet);\n          s += ((d && declarations.length) ? \" \" : \"\") + d;\n        }\n        token = this.getToken(true, false);\n      }\n    }\n  }\n  if (valid) {\n    this.forgetState();\n    var rule = new jscsspPageRule();\n    rule.currentLine = currentLine;\n    rule.parsedCssText = s;\n    rule.pageSelector = pageSelector;\n    rule.declarations = declarations;\n    rule.parentStyleSheet = aSheet;\n    aSheet.cssRules.push(rule)\n    return true;\n  }\n  this.restoreState();\n  return false;\n};\n\nCSSParser.prototype.parsePauseShorthand = function(token, declarations, aAcceptPriority)\n{\n  var before = \"\";\n  var after = \"\";\n  \n  var values = [];\n  var values = [];\n  while (true) {\n    \n    if (!token.isNotNull())\n      break;\n    \n    if (token.isSymbol(\";\")\n        || (aAcceptPriority && token.isSymbol(\"!\"))\n        || token.isSymbol(\"}\")) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    else if (!values.length && token.isIdent(this.kINHERIT)) {\n      values.push(token.value);\n    }\n    \n    else if (token.isDimensionOfUnit(\"ms\")\n             || token.isDimensionOfUnit(\"s\")\n             || token.isPercentage()\n             || token.isNumber(\"0\"))\n      values.push(token.value);\n    else\n      return \"\";\n    \n    token = this.getToken(true, true);\n  }\n  \n  var count = values.length;\n  switch (count) {\n    case 1:\n      before = values[0];\n      after = before;\n      break;\n    case 2:\n      before = values[0];\n      after = values[1];\n      break;\n    default:\n      return \"\";\n  }\n  this.forgetState();\n  aDecl.push(this._createJscsspDeclarationFromValue(\"pause-before\", before));\n  aDecl.push(this._createJscsspDeclarationFromValue(\"pause-after\", after));\n  return before + \" \" + after;\n};\n\nCSSParser.prototype.parseDefaultPropertyValue = function(token, aDecl, aAcceptPriority, descriptor, aSheet) {\n  var valueText = \"\";\n  var blocks = [];\n  var foundPriority = false;\n  var values = [];\n  while (token.isNotNull()) {\n    \n    if ((token.isSymbol(\";\")\n         || token.isSymbol(\"}\")\n         || token.isSymbol(\"!\"))\n        && !blocks.length) {\n      if (token.isSymbol(\"}\"))\n        this.ungetToken();\n      break;\n    }\n    \n    if (token.isIdent(this.kINHERIT)) {\n      if (values.length) {\n        return \"\";\n      }\n      else {\n        valueText = this.kINHERIT;\n        var value = new jscsspVariable(kJscsspINHERIT_VALUE, aSheet);\n        values.push(value);\n        token = this.getToken(true, true);\n        break;\n      }\n    }\n    else if (token.isSymbol(\"{\")\n             || token.isSymbol(\"(\")\n             || token.isSymbol(\"[\")) {\n      blocks.push(token.value);\n    }\n    else if (token.isSymbol(\"}\")\n             || token.isSymbol(\"]\")) {\n      if (blocks.length) {\n        var ontop = blocks[blocks.length - 1];\n        if ((token.isSymbol(\"}\") && ontop == \"{\")\n            || (token.isSymbol(\")\") && ontop == \"(\")\n            || (token.isSymbol(\"]\") && ontop == \"[\")) {\n          blocks.pop();\n        }\n      }\n    }\n    // XXX must find a better way to store individual values\n    // probably a |values: []| field holding dimensions, percentages\n    // functions, idents, numbers and symbols, in that order.\n    if (token.isFunction()) {\n      if (token.isFunction(\"var(\")) {\n        token = this.getToken(true, true);\n        if (token.isIdent()) {\n          var name = token.value;\n          token = this.getToken(true, true);\n          if (token.isSymbol(\")\")) {\n            var value = new jscsspVariable(kJscsspVARIABLE_VALUE, aSheet);\n            valueText += \"var(\" + name + \")\";\n            value.name = name;\n            values.push(value);\n          }\n          else\n            return \"\";\n        }\n        else\n          return \"\";\n      }\n      else {\n        var fn = token.value;\n        token = this.getToken(false, true);\n        var arg = this.parseFunctionArgument(token);\n        if (arg) {\n          valueText += fn + arg;\n          var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, aSheet);\n          value.value = fn + arg;\n          values.push(value);\n        }\n        else\n          return \"\";\n      }\n    }\n    else if (token.isSymbol(\"#\")) {\n      var color = this.parseColor(token);\n      if (color) {\n        valueText += color;\n        var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, aSheet);\n        value.value = color;\n        values.push(value);\n      }\n      else\n        return \"\";\n    }\n    else if (!token.isWhiteSpace() && !token.isSymbol(\",\")) {\n      var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, aSheet);\n      value.value = token.value;\n      values.push(value);\n      valueText += token.value;\n    }\n    else\n      valueText += token.value;\n    token = this.getToken(false, true);\n  }\n  if (values.length && valueText) {\n    this.forgetState();\n    aDecl.push(this._createJscsspDeclarationFromValuesArray(descriptor, values, valueText));\n    return valueText;\n  }\n  return \"\";\n};\n\nCSSParser.prototype.parseSelector = function(aToken, aParseSelectorOnly) {\n  var s = \"\";\n  var specificity = {a: 0, b: 0, c: 0, d: 0}; // CSS 2.1 section 6.4.3\n  var isFirstInChain = true;\n  var token = aToken;\n  var valid = false;\n  var combinatorFound = false;\n  while (true) {\n    if (!token.isNotNull()) {\n      if (aParseSelectorOnly)\n        return {selector: s, specificity: specificity };\n      return \"\";\n    }\n    \n    if (!aParseSelectorOnly && token.isSymbol(\"{\")) {\n      // end of selector\n      valid = !combinatorFound;\n      // don't unget if invalid since addUnknownRule is going to restore state anyway\n      if (valid)\n        this.ungetToken();\n      break;\n    }\n    \n    if (token.isSymbol(\",\")) { // group of selectors\n      s += token.value;\n      isFirstInChain = true;\n      combinatorFound = false;\n      token = this.getToken(false, true);\n      continue;\n    }\n    // now combinators and grouping...\n    else if (!combinatorFound\n             && (token.isWhiteSpace()\n                 || token.isSymbol(\">\")\n                 || token.isSymbol(\"+\")\n                 || token.isSymbol(\"~\"))) {\n               if (token.isWhiteSpace()) {\n                 s += \" \";\n                 var nextToken = this.lookAhead(true, true);\n                 if (!nextToken.isNotNull()) {\n                   if (aParseSelectorOnly)\n                     return {selector: s, specificity: specificity };\n                   return \"\";\n                 }\n                 if (nextToken.isSymbol(\">\")\n                     || nextToken.isSymbol(\"+\")\n                     || nextToken.isSymbol(\"~\")) {\n                   token = this.getToken(true, true);\n                   s += token.value + \" \";\n                   combinatorFound = true;\n                 }\n               }\n               else {\n                 s += token.value;\n                 combinatorFound = true;\n               }\n               isFirstInChain = true;\n               token = this.getToken(true, true);\n               continue;\n             }\n    else {\n      var simpleSelector = this.parseSimpleSelector(token, isFirstInChain, true);\n      if (!simpleSelector)\n        break; // error\n      s += simpleSelector.selector;\n      specificity.b += simpleSelector.specificity.b;\n      specificity.c += simpleSelector.specificity.c;\n      specificity.d += simpleSelector.specificity.d;\n      isFirstInChain = false;\n      combinatorFound = false;\n    }\n    \n    token = this.getToken(false, true);\n  }\n  \n  if (valid) {\n    return {selector: s, specificity: specificity };\n  }\n  return \"\";\n};\n\nCSSParser.prototype.isPseudoElement = function(aIdent)\n{\n  switch (aIdent) {\n    case \"first-letter\":\n    case \"first-line\":\n    case \"before\":\n    case \"after\":\n    case \"marker\":\n      return true;\n      break;\n    default: \n      break;\n  }\n  return false;\n};\n\nCSSParser.prototype.parseSimpleSelector = function(token, isFirstInChain, canNegate)\n{\n  var s = \"\";\n  var specificity = {a: 0, b: 0, c: 0, d: 0}; // CSS 2.1 section 6.4.3\n  \n  if (isFirstInChain\n      && (token.isSymbol(\"*\") || token.isSymbol(\"|\") || token.isIdent())) {\n    // type or universal selector\n    if (token.isSymbol(\"*\") || token.isIdent()) {\n      // we don't know yet if it's a prefix or a universal\n      // selector\n      s += token.value;\n      var isIdent = token.isIdent();\n      token = this.getToken(false, true);\n      if (token.isSymbol(\"|\")) {\n        // it's a prefix\n        s += token.value;\n        token = this.getToken(false, true);\n        if (token.isIdent() || token.isSymbol(\"*\")) {\n          // ok we now have a type element or universal\n          // selector\n          s += token.value;\n          if (token.isIdent())\n            specificity.d++;\n        } else\n          // oops that's an error...\n          return null;\n      } else {\n        this.ungetToken();\n        if (isIdent)\n          specificity.d++;\n      }\n    } else if (token.isSymbol(\"|\")) {\n      s += token.value;\n      token = this.getToken(false, true);\n      if (token.isIdent() || token.isSymbol(\"*\")) {\n        s += token.value;\n        if (token.isIdent())\n          specificity.d++;\n      } else\n        // oops that's an error\n        return null;\n    }\n  }\n  \n  else if (token.isSymbol(\".\") || token.isSymbol(\"#\")) {\n    var isClass = token.isSymbol(\".\");\n    s += token.value;\n    token = this.getToken(false, true);\n    if (token.isIdent()) {\n      s += token.value;\n      if (isClass)\n        specificity.c++;\n      else\n        specificity.b++;\n    }\n    else\n      return null;\n  }\n  \n  else if (token.isSymbol(\":\")) {\n    s += token.value;\n    token = this.getToken(false, true);\n    if (token.isSymbol(\":\")) {\n      s += token.value;\n      token = this.getToken(false, true);\n    }\n    if (token.isIdent()) {\n      s += token.value;\n      if (this.isPseudoElement(token.value))\n        specificity.d++;\n      else\n        specificity.c++;\n    }\n    else if (token.isFunction()) {\n      s += token.value;\n      if (token.isFunction(\":not(\")) {\n        if (!canNegate)\n          return null;\n        token = this.getToken(true, true);\n        var simpleSelector = this.parseSimpleSelector(token, isFirstInChain, false);\n        if (!simpleSelector)\n          return null;\n        else {\n          s += simpleSelector.selector;\n          token = this.getToken(true, true);\n          if (token.isSymbol(\")\"))\n            s += \")\";\n          else\n            return null;\n        }\n        specificity.c++;\n      }\n      else {\n        while (true) {\n          token = this.getToken(false, true);\n          if (token.isSymbol(\")\")) {\n            s += \")\";\n            break;\n          } else\n            s += token.value;\n        }\n        specificity.c++;\n      }\n    } else\n      return null;\n    \n  } else if (token.isSymbol(\"[\")) {\n    s += \"[\";\n    token = this.getToken(true, true);\n    if (token.isIdent() || token.isSymbol(\"*\")) {\n      s += token.value;\n      var nextToken = this.getToken(true, true);\n      if (nextToken.isSymbol(\"|\")) {\n        s += \"|\";\n        token = this.getToken(true, true);\n        if (token.isIdent())\n          s += token.value;\n        else\n          return null;\n      } else\n        this.ungetToken();\n    } else if (token.isSymbol(\"|\")) {\n      s += \"|\";\n      token = this.getToken(true, true);\n      if (token.isIdent())\n        s += token.value;\n      else\n        return null;\n    }\n    else\n      return null;\n    \n    // nothing, =, *=, $=, ^=, |=\n    token = this.getToken(true, true);\n    if (token.isIncludes()\n        || token.isDashmatch()\n        || token.isBeginsmatch()\n        || token.isEndsmatch()\n        || token.isContainsmatch()\n        || token.isSymbol(\"=\")) {\n      s += token.value;\n      token = this.getToken(true, true);\n      if (token.isString() || token.isIdent()) {\n        s += token.value;\n        token = this.getToken(true, true);\n      }\n      else\n        return null;\n      \n      if (token.isSymbol(\"]\")) {\n        s += token.value;\n        specificity.c++;\n      }\n      else\n        return null;\n    }\n    else if (token.isSymbol(\"]\")) {\n      s += token.value;\n      specificity.c++;\n    }\n    else\n      return null;\n    \n  }\n  else if (token.isWhiteSpace()) {\n    var t = this.lookAhead(true, true);\n    if (t.isSymbol('{'))\n      return \"\"\n      }\n  if (s)\n    return {selector: s, specificity: specificity };\n  return null;\n};\n\nCSSParser.prototype.trim11 = function(str) {\n  str = str.replace(/^\\s+/, '');\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (/\\S/.test( str.charAt(i) )) { // XXX charat\n      str = str.substring(0, i + 1);\n      break;\n    }\n  }\n  return str;\n};\n\nCSSParser.prototype.parseStyleRule = function(aToken, aOwner, aIsInsideMediaRule)\n{\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  this.preserveState();\n  // first let's see if we have a selector here...\n  var selector = this.parseSelector(aToken, false);\n  var valid = false;\n  var declarations = [];\n  if (selector) {\n    selector = this.trim11(selector.selector);\n    var s = selector;\n    var token = this.getToken(true, true);\n    if (token.isSymbol(\"{\")) {\n      s += \" { \";\n      var token = this.getToken(true, false);\n      while (true) {\n        if (!token.isNotNull()) {\n          valid = true;\n          break;\n        }\n        if (token.isSymbol(\"}\")) {\n          s += \"}\";\n          valid = true;\n          break;\n        } else {\n          var d = this.parseDeclaration(token, declarations, true, true, aOwner);\n          s += ((d && declarations.length) ? \" \" : \"\") + d;\n        }\n        token = this.getToken(true, false);\n      }\n    }\n  }\n  else {\n    // selector is invalid so the whole rule is invalid with it\n  }\n  \n  if (valid) {\n    var rule = new jscsspStyleRule();\n    rule.currentLine = currentLine;\n    rule.parsedCssText = s;\n    rule.declarations = declarations;\n    rule.mSelectorText = selector;\n    if (aIsInsideMediaRule)\n      rule.parentRule = aOwner;\n    else\n      rule.parentStyleSheet = aOwner;\n    aOwner.cssRules.push(rule);\n    return s;\n  }\n  this.restoreState();\n  s = this.currentToken().value;\n  this.addUnknownAtRule(aOwner, s);\n  return \"\";\n};\n\nCSSParser.prototype.parseTextShadows = function()\n{\n  var shadows = [];\n  var token = this.getToken(true, true);\n  var color = \"\", blurRadius = \"0px\", offsetX = \"0px\", offsetY = \"0px\"; \n  while (token.isNotNull()) {\n    if (token.isIdent(\"none\")) {\n      shadows.push( { none: true } );\n      token = this.getToken(true, true);\n    }\n    else {\n      if (token.isFunction(\"rgb(\") ||\n          token.isFunction(\"rgba(\") ||\n          token.isFunction(\"hsl(\") ||\n          token.isFunction(\"hsla(\") ||\n          token.isSymbol(\"#\") ||\n          token.isIdent()) {\n        var color = this.parseColor(token);\n        token = this.getToken(true, true);\n      }\n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var offsetX = token.value;\n        token = this.getToken(true, true);\n      }\n      else\n        return [];\n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var offsetY = token.value;\n        token = this.getToken(true, true);\n      }\n      else\n        return [];\n      if (token.isPercentage() ||\n          token.isDimensionOfUnit(\"cm\") ||\n          token.isDimensionOfUnit(\"mm\") ||\n          token.isDimensionOfUnit(\"in\") ||\n          token.isDimensionOfUnit(\"pc\") ||\n          token.isDimensionOfUnit(\"px\") ||\n          token.isDimensionOfUnit(\"em\") ||\n          token.isDimensionOfUnit(\"ex\") ||\n          token.isDimensionOfUnit(\"pt\")) {\n        var blurRadius = token.value;\n        token = this.getToken(true, true);\n      }\n      if (!color &&\n          (token.isFunction(\"rgb(\") ||\n           token.isFunction(\"rgba(\") ||\n           token.isFunction(\"hsl(\") ||\n           token.isFunction(\"hsla(\") ||\n           token.isSymbol(\"#\") ||\n           token.isIdent())) {\n            var color = this.parseColor(token);\n            token = this.getToken(true, true);\n          }\n      \n      shadows.push( { none: false,\n                   color: color,\n                   offsetX: offsetX, offsetY: offsetY,\n                   blurRadius: blurRadius } );\n      \n      if (token.isSymbol(\",\")) {\n        color = \"\";\n        blurRadius = \"0px\";\n        offsetX = \"0px\";\n        offsetY = \"0px\"; \n        token = this.getToken(true, true);\n      }\n      else if (!token.isNotNull())\n        return shadows;\n      else\n        return [];\n    }\n  }\n  return shadows;\n};\n\nCSSParser.prototype.currentToken = function() {\n  return this.mToken;\n};\n\nCSSParser.prototype.getHexValue = function() {\n  this.mToken = this.mScanner.nextHexValue();\n  return this.mToken;\n};\n\nCSSParser.prototype.getToken = function(aSkipWS, aSkipComment) {\n  if (this.mLookAhead) {\n    this.mToken = this.mLookAhead;\n    this.mLookAhead = null;\n    return this.mToken;\n  }\n  \n  this.mToken = this.mScanner.nextToken();\n  while (this.mToken &&\n         ((aSkipWS && this.mToken.isWhiteSpace()) ||\n          (aSkipComment && this.mToken.isComment())))\n    this.mToken = this.mScanner.nextToken();\n  return this.mToken;\n};\n\nCSSParser.prototype.lookAhead = function(aSkipWS, aSkipComment) {\n  var preservedToken = this.mToken;\n  this.mScanner.preserveState();\n  var token = this.getToken(aSkipWS, aSkipComment);\n  this.mScanner.restoreState();\n  this.mToken = preservedToken;\n  \n  return token;\n};\n\nCSSParser.prototype.ungetToken = function() {\n  this.mLookAhead = this.mToken;\n};\n\nCSSParser.prototype.addWhitespace = function(aSheet, aString) {\n  var rule = new jscsspWhitespace();\n  rule.parsedCssText = aString;\n  rule.parentStyleSheet = aSheet;\n  aSheet.cssRules.push(rule);\n};\n\nCSSParser.prototype.addComment = function(aSheet, aString) {\n  var rule = new jscsspComment();\n  rule.parsedCssText = aString;\n  rule.parentStyleSheet = aSheet;\n  aSheet.cssRules.push(rule);\n};\n\nCSSParser.prototype._createJscsspDeclaration = function(property, value)\n{\n  var decl = new jscsspDeclaration();\n  decl.property = property;\n  decl.value = this.trim11(value);\n  decl.parsedCssText = property + \": \" + value + \";\";\n  return decl;\n};\n\nCSSParser.prototype._createJscsspDeclarationFromValue = function(property, valueText)\n{\n  var decl = new jscsspDeclaration();\n  decl.property = property;\n  var value = new jscsspVariable(kJscsspPRIMITIVE_VALUE, null);\n  value.value = valueText;\n  decl.values = [value];\n  decl.valueText = valueText;\n  decl.parsedCssText = property + \": \" + valueText + \";\";\n  return decl;\n};\n\nCSSParser.prototype._createJscsspDeclarationFromValuesArray = function(property, values, valueText)\n{\n  var decl = new jscsspDeclaration();\n  decl.property = property;\n  decl.values = values;\n  decl.valueText = valueText;\n  decl.parsedCssText = property + \": \" + valueText + \";\";\n  return decl;\n};\n\nCSSParser.prototype.preserveState = function() {\n  this.mPreservedTokens.push(this.currentToken());\n  this.mScanner.preserveState();\n};\n\nCSSParser.prototype.restoreState = function() {\n  if (this.mPreservedTokens.length) {\n    this.mScanner.restoreState();\n    this.mToken = this.mPreservedTokens.pop();\n  }\n};\n\nCSSParser.prototype.forgetState = function() {\n  if (this.mPreservedTokens.length) {\n    this.mScanner.forgetState();\n    this.mPreservedTokens.pop();\n  }\n};\n\nCSSParser.prototype.addUnknownAtRule = function(aSheet, aString) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var blocks = [];\n  var token = this.getToken(false, false);\n  while (token.isNotNull()) {\n    aString += token.value;\n    if (token.isSymbol(\";\") && !blocks.length)\n      break;\n    else if (token.isSymbol(\"{\")\n             || token.isSymbol(\"(\")\n             || token.isSymbol(\"[\")\n             || token.type == \"function\") {\n      blocks.push(token.isFunction() ? \"(\" : token.value);\n    } else if (token.isSymbol(\"}\")\n               || token.isSymbol(\")\")\n               || token.isSymbol(\"]\")) {\n      if (blocks.length) {\n        var ontop = blocks[blocks.length - 1];\n        if ((token.isSymbol(\"}\") && ontop == \"{\")\n            || (token.isSymbol(\")\") && ontop == \"(\")\n            || (token.isSymbol(\"]\") && ontop == \"[\")) {\n          blocks.pop();\n          if (!blocks.length && token.isSymbol(\"}\"))\n            break;\n        }\n      }\n    }\n    token = this.getToken(false, false);\n  }\n  \n  this.addUnknownRule(aSheet, aString, currentLine);\n};\n\nCSSParser.prototype.addUnknownRule = function(aSheet, aString, aCurrentLine) {\n  var errorMsg = this.consumeError();\n  var rule = new jscsspErrorRule(errorMsg);\n  rule.currentLine = aCurrentLine;\n  rule.parsedCssText = aString;\n  rule.parentStyleSheet = aSheet;\n  aSheet.cssRules.push(rule);\n};\n\nCSSParser.prototype.parseURL = function(token)\n{\n  var value = \"\";\n  if (token.isString())\n  {\n    value += token.value;\n    token = this.getToken(true, true);\n  }\n  else\n    while (true)\n    {\n      if (!token.isNotNull()) {\n        this.reportError(kURL_EOF);\n        return \"\";\n      }\n      if (token.isWhiteSpace()) {\n        nextToken = this.lookAhead(true, true);\n        // if next token is not a closing parenthesis, that's an error\n        if (!nextToken.isSymbol(\")\")) {\n          this.reportError(kURL_WS_INSIDE);\n          token = this.currentToken();\n          break;\n        }\n      }\n      if (token.isSymbol(\")\")) {\n        break;\n      }\n      value += token.value;\n      token = this.getToken(false, false);\n    }\n  \n  if (token.isSymbol(\")\")) {\n    return value + \")\";\n  }\n  return \"\";\n};\n\nCSSParser.prototype.parseVariablesRule = function(token, aSheet) {\n  var currentLine = CountLF(this.mScanner.getAlreadyScanned());\n  var s = token.value;\n  var declarations = [];\n  var valid = false;\n  this.preserveState();\n  token = this.getToken(true, true);\n  var media = [];\n  var foundMedia = false;\n  while (token.isNotNull()) {\n    if (token.isIdent()) {\n      foundMedia = true;\n      s += \" \" + token.value;\n      media.push(token.value);\n      token = this.getToken(true, true);\n      if (token.isSymbol(\",\")) {\n        s += \",\";\n      } else {\n        if (token.isSymbol(\"{\"))\n          this.ungetToken();\n        else {\n          // error...\n          token.type = jscsspToken.NULL_TYPE;\n          break;\n        }\n      }\n    } else if (token.isSymbol(\"{\"))\n      break;\n    else if (foundMedia) {\n      token.type = jscsspToken.NULL_TYPE;\n      // not a media list\n      break;\n    }\n    token = this.getToken(true, true);\n  }\n  \n  if (token.isSymbol(\"{\")) {\n    s += \" {\";\n    token = this.getToken(true, true);\n    while (true) {\n      if (!token.isNotNull()) {\n        valid = true;\n        break;\n      }\n      if (token.isSymbol(\"}\")) {\n        s += \"}\";\n        valid = true;\n        break;\n      } else {\n        var d = this.parseDeclaration(token, declarations, true, false, aSheet);\n        s += ((d && declarations.length) ? \" \" : \"\") + d;\n      }\n      token = this.getToken(true, false);\n    }\n  }\n  if (valid) {\n    this.forgetState();\n    var rule = new jscsspVariablesRule();\n    rule.currentLine = currentLine;\n    rule.parsedCssText = s;\n    rule.declarations = declarations;\n    rule.media = media;\n    rule.parentStyleSheet = aSheet;\n    aSheet.cssRules.push(rule)\n    return true;\n  }\n  this.restoreState();\n  return false;\n};\n\nfunction jscsspToken(aType, aValue, aUnit)\n{\n  this.type = aType;\n  this.value = aValue;\n  this.unit = aUnit;\n}\n\njscsspToken.NULL_TYPE = 0;\n\njscsspToken.WHITESPACE_TYPE = 1;\njscsspToken.STRING_TYPE = 2;\njscsspToken.COMMENT_TYPE = 3;\njscsspToken.NUMBER_TYPE = 4;\njscsspToken.IDENT_TYPE = 5;\njscsspToken.FUNCTION_TYPE = 6;\njscsspToken.ATRULE_TYPE = 7;\njscsspToken.INCLUDES_TYPE = 8;\njscsspToken.DASHMATCH_TYPE = 9;\njscsspToken.BEGINSMATCH_TYPE = 10;\njscsspToken.ENDSMATCH_TYPE = 11;\njscsspToken.CONTAINSMATCH_TYPE = 12;\njscsspToken.SYMBOL_TYPE = 13;\njscsspToken.DIMENSION_TYPE = 14;\njscsspToken.PERCENTAGE_TYPE = 15;\njscsspToken.HEX_TYPE = 16;\n\njscsspToken.prototype = {\n\n  isNotNull: function ()\n  {\n    return this.type;\n  },\n\n  _isOfType: function (aType, aValue)\n  {\n    return (this.type == aType && (!aValue || this.value.toLowerCase() == aValue));\n  },\n\n  isWhiteSpace: function(w)\n  {\n    return this._isOfType(jscsspToken.WHITESPACE_TYPE, w);\n  },\n\n  isString: function()\n  {\n    return this._isOfType(jscsspToken.STRING_TYPE);\n  },\n\n  isComment: function()\n  {\n    return this._isOfType(jscsspToken.COMMENT_TYPE);\n  },\n\n  isNumber: function(n)\n  {\n    return this._isOfType(jscsspToken.NUMBER_TYPE, n);\n  },\n\n  isIdent: function(i)\n  {\n    return this._isOfType(jscsspToken.IDENT_TYPE, i);\n  },\n\n  isFunction: function(f)\n  {\n    return this._isOfType(jscsspToken.FUNCTION_TYPE, f);\n  },\n\n  isAtRule: function(a)\n  {\n    return this._isOfType(jscsspToken.ATRULE_TYPE, a);\n  },\n\n  isIncludes: function()\n  {\n    return this._isOfType(jscsspToken.INCLUDES_TYPE);\n  },\n\n  isDashmatch: function()\n  {\n    return this._isOfType(jscsspToken.DASHMATCH_TYPE);\n  },\n\n  isBeginsmatch: function()\n  {\n    return this._isOfType(jscsspToken.BEGINSMATCH_TYPE);\n  },\n\n  isEndsmatch: function()\n  {\n    return this._isOfType(jscsspToken.ENDSMATCH_TYPE);\n  },\n\n  isContainsmatch: function()\n  {\n    return this._isOfType(jscsspToken.CONTAINSMATCH_TYPE);\n  },\n\n  isSymbol: function(c)\n  {\n    return this._isOfType(jscsspToken.SYMBOL_TYPE, c);\n  },\n\n  isDimension: function()\n  {\n    return this._isOfType(jscsspToken.DIMENSION_TYPE);\n  },\n\n  isPercentage: function()\n  {\n    return this._isOfType(jscsspToken.PERCENTAGE_TYPE);\n  },\n\n  isHex: function()\n  {\n    return this._isOfType(jscsspToken.HEX_TYPE);\n  },\n\n  isDimensionOfUnit: function(aUnit)\n  {\n    return (this.isDimension() && this.unit == aUnit);\n  },\n\n  isLength: function()\n  {\n    return (this.isPercentage() ||\n            this.isDimensionOfUnit(\"cm\") ||\n            this.isDimensionOfUnit(\"mm\") ||\n            this.isDimensionOfUnit(\"in\") ||\n            this.isDimensionOfUnit(\"pc\") ||\n            this.isDimensionOfUnit(\"px\") ||\n            this.isDimensionOfUnit(\"em\") ||\n            this.isDimensionOfUnit(\"ex\") ||\n            this.isDimensionOfUnit(\"pt\"));\n  },\n\n  isAngle: function()\n  {\n    return (this.isDimensionOfUnit(\"deg\") ||\n            this.isDimensionOfUnit(\"rad\") ||\n            this.isDimensionOfUnit(\"grad\"));\n  }\n}\n\n/* kJscsspCHARSET_RULE */\n\nfunction jscsspCharsetRule()\n{\n  this.type = kJscsspCHARSET_RULE;\n  this.encoding = null;\n  this.parsedCssText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspCharsetRule.prototype = {\n\n  cssText: function() {\n    return \"@charset \" + this.encoding + \";\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    if (parser.parseCharsetRule(sheet)) {\n      var newRule = sheet.cssRules[0];\n      this.encoding = newRule.encoding;\n      this.parsedCssText = newRule.parsedCssText;\n      return;\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspCOMMENT */\n\nfunction jscsspComment()\n{\n  this.type = kJscsspCOMMENT;\n  this.parsedCssText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspComment.prototype = {\n  cssText: function() {\n    return this.parsedCssText;\n  },\n\n  setCssText: function(val) {\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, false);\n    if (token.isComment())\n      this.parsedCssText = token.value;\n    else\n      throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspSTYLE_DECLARATION */\n\nfunction jscsspDeclaration()\n{\n  this.type = kJscsspSTYLE_DECLARATION;\n  this.property = null;\n  this.values = [];\n  this.valueText = null;\n  this.priority = null;\n  this.parsedCssText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspDeclaration.prototype = {\n  kCOMMA_SEPARATED: {\n    \"cursor\": true,\n    \"font-family\": true,\n    \"voice-family\": true,\n    \"background-image\": true\n  },\n\n  kUNMODIFIED_COMMA_SEPARATED_PROPERTIES: {\n    \"text-shadow\": true,\n    \"box-shadow\": true,\n    \"-moz-transition\": true,\n    \"-moz-transition-property\": true,\n    \"-moz-transition-duration\": true,\n    \"-moz-transition-timing-function\": true,\n    \"-moz-transition-delay\": true,\n    \"src\": true,\n    \"-moz-font-feature-settings\": true\n  },\n\n  cssText: function() {\n    var prefixes = PrefixHelper.prefixesForProperty(this.property);\n\n    var rv = \"\";\n    if (this.property in this.kUNMODIFIED_COMMA_SEPARATED_PROPERTIES) {\n      if (prefixes) {\n        rv = \"\";\n        for (var propertyIndex = 0; propertyIndex < prefixes.length; propertyIndex++) {\n          var property = prefixes[propertyIndex];\n          rv += (propertyIndex ? gTABS : \"\") + property + \": \";\n          rv += this.valueText + (this.priority ? \" !important\" : \"\") + \";\";\n          rv += ((prefixes.length > 1 && propertyIndex != prefixes.length -1) ? \"\\n\" : \"\");\n        }\n        return rv;\n      }\n      return this.property + \": \" + this.valueText +\n             (this.priority ? \" !important\" : \"\") + \";\"\n    }\n\n    if (prefixes) {\n      rv = \"\";\n      for (var propertyIndex = 0; propertyIndex < prefixes.length; propertyIndex++) {\n        var property = prefixes[propertyIndex];\n        rv += (propertyIndex ? gTABS : \"\") + property + \": \";\n        var separator = (property in this.kCOMMA_SEPARATED) ? \", \" : \" \";\n        for (var i = 0; i < this.values.length; i++)\n          if (this.values[i].cssText() != null)\n            rv += (i ? separator : \"\") + this.values[i].cssText();\n          else\n            return null;\n        rv += (this.priority ? \" !important\" : \"\") + \";\" +\n              ((prefixes.length > 1 && propertyIndex != prefixes.length -1) ? \"\\n\" : \"\");\n      }\n      return rv;\n    }\n\n    var separator = (this.property in this.kCOMMA_SEPARATED) ? \", \" : \" \";\n    var extras = {\"webkit\": false, \"presto\": false, \"trident\": false, \"gecko1.9.2\": false, \"generic\": false }\n    for (var i = 0; i < this.values.length; i++) {\n      var v = this.values[i].cssText();\n      if (v != null) {\n        var paren = v.indexOf(\"(\");\n        var kwd = v;\n        if (paren != -1)\n          kwd = v.substr(0, paren);\n        if (kwd in kCSS_VENDOR_VALUES) {\n          for (var j in kCSS_VENDOR_VALUES[kwd]) {\n            extras[j] = extras[j] || (kCSS_VENDOR_VALUES[kwd][j] != \"\");\n          }\n        }\n      }\n      else\n        return null;\n    }\n\n    for (var j in extras) {\n      if (extras[j]) {\n        var str = \"\\n\" + gTABS +  this.property + \": \";\n        for (var i = 0; i < this.values.length; i++) {\n          var v = this.values[i].cssText();\n          if (v != null) {\n            var paren = v.indexOf(\"(\");\n            var kwd = v;\n            if (paren != -1)\n              kwd = v.substr(0, paren);\n            if (kwd in kCSS_VENDOR_VALUES) {\n              functor = kCSS_VENDOR_VALUES[kwd][j];\n              if (functor) {\n                v = (typeof functor == \"string\") ? functor : functor(v, j);\n                if (!v) {\n                  str = null;\n                  break;\n                }\n              }\n            }\n            str += (i ? separator : \"\") + v;\n          }\n          else\n            return null;\n        }\n        if (str)\n          rv += str + \";\"\n        else\n          rv += \"\\n\" + gTABS + \"/* Impossible to translate property \" + this.property + \" for \" + j + \" */\";\n      }\n    }\n\n    rv += \"\\n\" + gTABS + this.property + \": \";\n    for (var i = 0; i < this.values.length; i++) {\n      var v = this.values[i].cssText();\n      if (v != null) {\n        rv += (i ? separator : \"\") + v;\n      }\n    }\n    rv += (this.priority ? \" !important\" : \"\") + \";\";\n\n    return rv;\n  },\n\n  setCssText: function(val) {\n    var declarations = [];\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (parser.parseDeclaration(token, declarations, true, true, null)\n        && declarations.length\n        && declarations[0].type == kJscsspSTYLE_DECLARATION) {\n      var newDecl = declarations.cssRules[0];\n      this.property = newDecl.property;\n      this.value = newDecl.value;\n      this.priority = newDecl.priority;\n      this.parsedCssText = newRule.parsedCssText;\n      return;\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspUNKNOWN_RULE */\n\nfunction jscsspErrorRule(aErrorMsg)\n{\n  this.error = aErrorMsg ? aErrorMsg : \"INVALID\"; \n  this.type = kJscsspUNKNOWN_RULE;\n  this.parsedCssText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspErrorRule.prototype = {\n  cssText: function() {\n    return this.parsedCssText;\n  }\n};\n\n/* kJscsspFONT_FACE_RULE */\n\nfunction jscsspFontFaceRule()\n{\n  this.type = kJscsspFONT_FACE_RULE;\n  this.parsedCssText = null;\n  this.descriptors = [];\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspFontFaceRule.prototype = {\n  cssText: function() {\n    var rv = gTABS + \"@font-face {\\n\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.descriptors.length; i++)\n      rv += gTABS + this.descriptors[i].cssText() + \"\\n\";\n    gTABS = preservedGTABS;\n    return rv + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@font-face\")) {\n      if (parser.parseFontFaceRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.descriptors = newRule.descriptors;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspIMPORT_RULE */\n\nfunction jscsspImportRule()\n{\n  this.type = kJscsspIMPORT_RULE;\n  this.parsedCssText = null;\n  this.href = null;\n  this.media = []; \n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspImportRule.prototype = {\n  cssText: function() {\n    var mediaString = this.media.join(\", \");\n    return \"@import \" + this.href\n                      + ((mediaString && mediaString != \"all\") ? mediaString + \" \" : \"\")\n                      + \";\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@import\")) {\n      if (parser.parseImportRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.href = newRule.href;\n        this.media = newRule.media;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspKEYFRAME_RULE */\nfunction jscsspKeyframeRule()\n{\n  this.type = kJscsspKEYFRAME_RULE;\n  this.parsedCssText = null;\n  this.declarations = []\n  this.keyText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspKeyframeRule.prototype = {\n  cssText: function() {\n    var rv = this.keyText + \" {\\n\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.declarations.length; i++) {\n      var declText = this.declarations[i].cssText();\n      if (declText)\n        rv += gTABS + this.declarations[i].cssText() + \"\\n\";\n    }\n    gTABS = preservedGTABS;\n    return rv + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (!token.isNotNull()) {\n      if (parser.parseKeyframeRule(token, sheet, false)) {\n        var newRule = sheet.cssRules[0];\n        this.keyText = newRule.keyText;\n        this.declarations = newRule.declarations;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspKEYFRAMES_RULE */\nfunction jscsspKeyframesRule()\n{\n  this.type = kJscsspKEYFRAMES_RULE;\n  this.parsedCssText = null;\n  this.cssRules = [];\n  this.name = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspKeyframesRule.prototype = {\n  cssText: function() {\n    var rv = \"\";\n    var prefixes = [\"moz\", \"webkit\", \"ms\", \"o\", \"\"];\n    for (var p = 0; p < prefixes.length; p++) {\n      rv += gTABS\n            + \"@\" + (prefixes[p] ? \"-\" + prefixes[p] + \"-\" : \"\") + \"keyframes \"\n            + this.name + \" {\\n\";\n      var preservedGTABS = gTABS;\n      gTABS += \"  \";\n      for (var i = 0; i < this.cssRules.length; i++)\n        rv += gTABS + this.cssRules[i].cssText() + \"\\n\";\n      gTABS = preservedGTABS;\n      rv += gTABS + \"}\\n\\n\";\n    }\n    return rv;\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@-mozkeyframes\")) {\n      if (parser.parseKeyframesRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.cssRules = newRule.cssRules;\n        this.name = newRule.name;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspMEDIA_RULE */\n\nfunction jscsspMediaRule()\n{\n  this.type = kJscsspMEDIA_RULE;\n  this.parsedCssText = null;\n  this.cssRules = [];\n  this.media = [];\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspMediaRule.prototype = {\n  cssText: function() {\n    var rv = gTABS + \"@media \" + this.media.join(\", \") + \" {\\n\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.cssRules.length; i++)\n      rv += this.cssRules[i].cssText() + \"\\n\";\n    gTABS = preservedGTABS;\n    return rv + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@media\")) {\n      if (parser.parseMediaRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.cssRules = newRule.cssRules;\n        this.media = newRule.media;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspNAMESPACE_RULE */\n\nfunction jscsspNamespaceRule()\n{\n  this.type = kJscsspNAMESPACE_RULE;\n  this.parsedCssText = null;\n  this.prefix = null;\n  this.url = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspNamespaceRule.prototype = {\n  cssText: function() {\n    return \"@namespace \" + (this.prefix ? this.prefix + \" \": \"\")\n                        + this.url\n                        + \";\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@namespace\")) {\n      if (parser.parseNamespaceRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.url = newRule.url;\n        this.prefix = newRule.prefix;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspPAGE_RULE */\n\nfunction jscsspPageRule()\n{\n  this.type = kJscsspPAGE_RULE;\n  this.parsedCssText = null;\n  this.pageSelector = null;\n  this.declarations = [];\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspPageRule.prototype = {\n  cssText: function() {\n    var rv = gTABS + \"@page \"\n                   + (this.pageSelector ? this.pageSelector + \" \": \"\")\n                   + \"{\\n\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.declarations.length; i++)\n      rv += gTABS + this.declarations[i].cssText() + \"\\n\";\n    gTABS = preservedGTABS;\n    return rv + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@page\")) {\n      if (parser.parsePageRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.pageSelector = newRule.pageSelector;\n        this.declarations = newRule.declarations;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspSTYLE_RULE */\n\nfunction jscsspStyleRule()\n{\n  this.type = kJscsspSTYLE_RULE;\n  this.parsedCssText = null;\n  this.declarations = []\n  this.mSelectorText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspStyleRule.prototype = {\n  cssText: function() {\n    var rv = gTABS + this.mSelectorText + \" {\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.declarations.length; i++) {\n      var declText = this.declarations[i].cssText();\n      if (declText)\n        rv += gTABS + this.declarations[i].cssText() ;\n    }\n    gTABS = preservedGTABS;\n    return rv + \"\\n\" + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (!token.isNotNull()) {\n      if (parser.parseStyleRule(token, sheet, false)) {\n        var newRule = sheet.cssRules[0];\n        this.mSelectorText = newRule.mSelectorText;\n        this.declarations = newRule.declarations;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  },\n\n  selectorText: function() {\n    return this.mSelectorText;\n  },\n\n  setSelectorText: function(val) {\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (!token.isNotNull()) {\n      var s = parser.parseSelector(token, true);\n      if (s) {\n        this.mSelectorText = s.selector;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\nfunction jscsspStylesheet()\n{\n  this.cssRules = [];\n  this.variables = {};\n}\n\njscsspStylesheet.prototype = {\n  insertRule: function(aRule, aIndex) {\n    try {\n     this.cssRules.splice(aIndex, 1, aRule);\n    }\n    catch(e) {\n    }\n  },\n\n  deleteRule: function(aIndex) {\n    try {\n      this.cssRules.splice(aIndex);\n    }\n    catch(e) {\n    }\n  },\n\n  cssText: function() {\n    var rv = \"\";\n    for (var i = 0; i < this.cssRules.length; i++)\n      rv += this.cssRules[i].cssText() + \"\\n\\n\";\n    return rv;\n  }\n};\n\nvar kJscsspINHERIT_VALUE = 0;\nvar kJscsspPRIMITIVE_VALUE = 1;\nvar kJscsspVARIABLE_VALUE = 4;\n\nfunction jscsspVariable(aType, aSheet)\n{\n  this.value = \"\";\n  this.type = aType;\n  this.name  = null;\n  this.parentRule = null;\n  this.parentStyleSheet = aSheet;\n}\n\njscsspVariable.prototype = {\n  cssText: function() {\n    if (this.type == kJscsspVARIABLE_VALUE)\n      return this.resolveVariable(this.name, this.parentRule, this.parentStyleSheet);\n    else\n      return this.value;\n  },\n\n  setCssText: function(val) {\n    if (this.type == kJscsspVARIABLE_VALUE)\n      throw DOMException.SYNTAX_ERR;\n    else\n      this.value = val;\n  },\n\n  resolveVariable: function(aName, aRule, aSheet)\n  {\n    return \"var(\" + aName + \")\";\n  }\n};\n\n/* kJscsspVARIABLES_RULE */\n\nfunction jscsspVariablesRule()\n{\n  this.type = kJscsspVARIABLES_RULE;\n  this.parsedCssText = null;\n  this.declarations = [];\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n  this.media = null;\n}\n\njscsspVariablesRule.prototype = {\n  cssText: function() {\n    var rv = gTABS + \"@variables \" +\n                     (this.media.length ? this.media.join(\", \") + \" \" : \"\") +\n                     \"{\\n\";\n    var preservedGTABS = gTABS;\n    gTABS += \"  \";\n    for (var i = 0; i < this.declarations.length; i++)\n      rv += gTABS + this.declarations[i].cssText() + \"\\n\";\n    gTABS = preservedGTABS;\n    return rv + gTABS + \"}\";\n  },\n\n  setCssText: function(val) {\n    var sheet = {cssRules: []};\n    var parser = new CSSParser(val);\n    var token = parser.getToken(true, true);\n    if (token.isAtRule(\"@variables\")) {\n      if (parser.parseVariablesRule(token, sheet)) {\n        var newRule = sheet.cssRules[0];\n        this.declarations = newRule.declarations;\n        this.parsedCssText = newRule.parsedCssText;\n        return;\n      }\n    }\n    throw DOMException.SYNTAX_ERR;\n  }\n};\n\n/* kJscsspWHITE_SPACE */\n\nfunction jscsspWhitespace()\n{\n  this.type = kJscsspWHITE_SPACE;\n  this.parsedCssText = null;\n  this.parentStyleSheet = null;\n  this.parentRule = null;\n}\n\njscsspWhitespace.prototype = {\n  cssText: function() {\n    return this.parsedCssText;\n  }\n};\n\nvar kJscsspUNKNOWN_RULE   = 0;\nvar kJscsspSTYLE_RULE     = 1\nvar kJscsspCHARSET_RULE   = 2;\nvar kJscsspIMPORT_RULE    = 3;\nvar kJscsspMEDIA_RULE     = 4;\nvar kJscsspFONT_FACE_RULE = 5;\nvar kJscsspPAGE_RULE      = 6;\n\nvar kJscsspKEYFRAMES_RULE = 7;\nvar kJscsspKEYFRAME_RULE  = 8;\n\nvar kJscsspNAMESPACE_RULE = 100;\nvar kJscsspCOMMENT        = 101;\nvar kJscsspWHITE_SPACE    = 102;\n\nvar kJscsspVARIABLES_RULE = 200;\n\nvar kJscsspSTYLE_DECLARATION = 1000;\n\nvar gTABS = \"\";\n\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = CSSParser;\n\n//# sourceURL=webpack:///./vendors/cssParser.js?/Users/kah8br/nodejs/wp-spa/node_modules/exports-loader?CSSParser");

/***/ }),

/***/ "../../../node_modules/tooltipster/dist/js/tooltipster.bundle.min.js":
/*!**********************************************************************************************!*\
  !*** /Users/kah8br/nodejs/wp-spa/node_modules/tooltipster/dist/js/tooltipster.bundle.min.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tooltipster v4.2.6 */!function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(a){return b(a)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(this,function(a){function b(a){this.$container,this.constraints=null,this.__$tooltip,this.__init(a)}function c(b,c){var d=!0;return a.each(b,function(a,e){return void 0===c[a]||b[a]!==c[a]?(d=!1,!1):void 0}),d}function d(b){var c=b.attr(\"id\"),d=c?h.window.document.getElementById(c):null;return d?d===b[0]:a.contains(h.window.document.body,b[0])}function e(){if(!g)return!1;var a=g.document.body||g.document.documentElement,b=a.style,c=\"transition\",d=[\"Moz\",\"Webkit\",\"Khtml\",\"O\",\"ms\"];if(\"string\"==typeof b[c])return!0;c=c.charAt(0).toUpperCase()+c.substr(1);for(var e=0;e<d.length;e++)if(\"string\"==typeof b[d[e]+c])return!0;return!1}var f={animation:\"fade\",animationDuration:350,content:null,contentAsHTML:!1,contentCloning:!1,debug:!0,delay:300,delayTouch:[300,500],functionInit:null,functionBefore:null,functionReady:null,functionAfter:null,functionFormat:null,IEmin:6,interactive:!1,multiple:!1,parent:null,plugins:[\"sideTip\"],repositionOnScroll:!1,restoration:\"none\",selfDestruction:!0,theme:[],timer:0,trackerInterval:500,trackOrigin:!1,trackTooltip:!1,trigger:\"hover\",triggerClose:{click:!1,mouseleave:!1,originClick:!1,scroll:!1,tap:!1,touchleave:!1},triggerOpen:{click:!1,mouseenter:!1,tap:!1,touchstart:!1},updateAnimation:\"rotate\",zIndex:9999999},g=\"undefined\"!=typeof window?window:null,h={hasTouchCapability:!(!g||!(\"ontouchstart\"in g||g.DocumentTouch&&g.document instanceof g.DocumentTouch||g.navigator.maxTouchPoints)),hasTransitions:e(),IE:!1,semVer:\"4.2.6\",window:g},i=function(){this.__$emitterPrivate=a({}),this.__$emitterPublic=a({}),this.__instancesLatestArr=[],this.__plugins={},this._env=h};i.prototype={__bridge:function(b,c,d){if(!c[d]){var e=function(){};e.prototype=b;var g=new e;g.__init&&g.__init(c),a.each(b,function(a,b){0!=a.indexOf(\"__\")&&(c[a]?f.debug&&console.log(\"The \"+a+\" method of the \"+d+\" plugin conflicts with another plugin or native methods\"):(c[a]=function(){return g[a].apply(g,Array.prototype.slice.apply(arguments))},c[a].bridged=g))}),c[d]=g}return this},__setWindow:function(a){return h.window=a,this},_getRuler:function(a){return new b(a)},_off:function(){return this.__$emitterPrivate.off.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_on:function(){return this.__$emitterPrivate.on.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_one:function(){return this.__$emitterPrivate.one.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_plugin:function(b){var c=this;if(\"string\"==typeof b){var d=b,e=null;return d.indexOf(\".\")>0?e=c.__plugins[d]:a.each(c.__plugins,function(a,b){return b.name.substring(b.name.length-d.length-1)==\".\"+d?(e=b,!1):void 0}),e}if(b.name.indexOf(\".\")<0)throw new Error(\"Plugins must be namespaced\");return c.__plugins[b.name]=b,b.core&&c.__bridge(b.core,c,b.name),this},_trigger:function(){var a=Array.prototype.slice.apply(arguments);return\"string\"==typeof a[0]&&(a[0]={type:a[0]}),this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate,a),this.__$emitterPublic.trigger.apply(this.__$emitterPublic,a),this},instances:function(b){var c=[],d=b||\".tooltipstered\";return a(d).each(function(){var b=a(this),d=b.data(\"tooltipster-ns\");d&&a.each(d,function(a,d){c.push(b.data(d))})}),c},instancesLatest:function(){return this.__instancesLatestArr},off:function(){return this.__$emitterPublic.off.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},on:function(){return this.__$emitterPublic.on.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},one:function(){return this.__$emitterPublic.one.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},origins:function(b){var c=b?b+\" \":\"\";return a(c+\".tooltipstered\").toArray()},setDefaults:function(b){return a.extend(f,b),this},triggerHandler:function(){return this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this}},a.tooltipster=new i,a.Tooltipster=function(b,c){this.__callbacks={close:[],open:[]},this.__closingTime,this.__Content,this.__contentBcr,this.__destroyed=!1,this.__$emitterPrivate=a({}),this.__$emitterPublic=a({}),this.__enabled=!0,this.__garbageCollector,this.__Geometry,this.__lastPosition,this.__namespace=\"tooltipster-\"+Math.round(1e6*Math.random()),this.__options,this.__$originParents,this.__pointerIsOverOrigin=!1,this.__previousThemes=[],this.__state=\"closed\",this.__timeouts={close:[],open:null},this.__touchEvents=[],this.__tracker=null,this._$origin,this._$tooltip,this.__init(b,c)},a.Tooltipster.prototype={__init:function(b,c){var d=this;if(d._$origin=a(b),d.__options=a.extend(!0,{},f,c),d.__optionsFormat(),!h.IE||h.IE>=d.__options.IEmin){var e=null;if(void 0===d._$origin.data(\"tooltipster-initialTitle\")&&(e=d._$origin.attr(\"title\"),void 0===e&&(e=null),d._$origin.data(\"tooltipster-initialTitle\",e)),null!==d.__options.content)d.__contentSet(d.__options.content);else{var g,i=d._$origin.attr(\"data-tooltip-content\");i&&(g=a(i)),g&&g[0]?d.__contentSet(g.first()):d.__contentSet(e)}d._$origin.removeAttr(\"title\").addClass(\"tooltipstered\"),d.__prepareOrigin(),d.__prepareGC(),a.each(d.__options.plugins,function(a,b){d._plug(b)}),h.hasTouchCapability&&a(h.window.document.body).on(\"touchmove.\"+d.__namespace+\"-triggerOpen\",function(a){d._touchRecordEvent(a)}),d._on(\"created\",function(){d.__prepareTooltip()})._on(\"repositioned\",function(a){d.__lastPosition=a.position})}else d.__options.disabled=!0},__contentInsert:function(){var a=this,b=a._$tooltip.find(\".tooltipster-content\"),c=a.__Content,d=function(a){c=a};return a._trigger({type:\"format\",content:a.__Content,format:d}),a.__options.functionFormat&&(c=a.__options.functionFormat.call(a,a,{origin:a._$origin[0]},a.__Content)),\"string\"!=typeof c||a.__options.contentAsHTML?b.empty().append(c):b.text(c),a},__contentSet:function(b){return b instanceof a&&this.__options.contentCloning&&(b=b.clone(!0)),this.__Content=b,this._trigger({type:\"updated\",content:b}),this},__destroyError:function(){throw new Error(\"This tooltip has been destroyed and cannot execute your method call.\")},__geometry:function(){var b=this,c=b._$origin,d=b._$origin.is(\"area\");if(d){var e=b._$origin.parent().attr(\"name\");c=a('img[usemap=\"#'+e+'\"]')}var f=c[0].getBoundingClientRect(),g=a(h.window.document),i=a(h.window),j=c,k={available:{document:null,window:null},document:{size:{height:g.height(),width:g.width()}},window:{scroll:{left:h.window.scrollX||h.window.document.documentElement.scrollLeft,top:h.window.scrollY||h.window.document.documentElement.scrollTop},size:{height:i.height(),width:i.width()}},origin:{fixedLineage:!1,offset:{},size:{height:f.bottom-f.top,width:f.right-f.left},usemapImage:d?c[0]:null,windowOffset:{bottom:f.bottom,left:f.left,right:f.right,top:f.top}}};if(d){var l=b._$origin.attr(\"shape\"),m=b._$origin.attr(\"coords\");if(m&&(m=m.split(\",\"),a.map(m,function(a,b){m[b]=parseInt(a)})),\"default\"!=l)switch(l){case\"circle\":var n=m[0],o=m[1],p=m[2],q=o-p,r=n-p;k.origin.size.height=2*p,k.origin.size.width=k.origin.size.height,k.origin.windowOffset.left+=r,k.origin.windowOffset.top+=q;break;case\"rect\":var s=m[0],t=m[1],u=m[2],v=m[3];k.origin.size.height=v-t,k.origin.size.width=u-s,k.origin.windowOffset.left+=s,k.origin.windowOffset.top+=t;break;case\"poly\":for(var w=0,x=0,y=0,z=0,A=\"even\",B=0;B<m.length;B++){var C=m[B];\"even\"==A?(C>y&&(y=C,0===B&&(w=y)),w>C&&(w=C),A=\"odd\"):(C>z&&(z=C,1==B&&(x=z)),x>C&&(x=C),A=\"even\")}k.origin.size.height=z-x,k.origin.size.width=y-w,k.origin.windowOffset.left+=w,k.origin.windowOffset.top+=x}}var D=function(a){k.origin.size.height=a.height,k.origin.windowOffset.left=a.left,k.origin.windowOffset.top=a.top,k.origin.size.width=a.width};for(b._trigger({type:\"geometry\",edit:D,geometry:{height:k.origin.size.height,left:k.origin.windowOffset.left,top:k.origin.windowOffset.top,width:k.origin.size.width}}),k.origin.windowOffset.right=k.origin.windowOffset.left+k.origin.size.width,k.origin.windowOffset.bottom=k.origin.windowOffset.top+k.origin.size.height,k.origin.offset.left=k.origin.windowOffset.left+k.window.scroll.left,k.origin.offset.top=k.origin.windowOffset.top+k.window.scroll.top,k.origin.offset.bottom=k.origin.offset.top+k.origin.size.height,k.origin.offset.right=k.origin.offset.left+k.origin.size.width,k.available.document={bottom:{height:k.document.size.height-k.origin.offset.bottom,width:k.document.size.width},left:{height:k.document.size.height,width:k.origin.offset.left},right:{height:k.document.size.height,width:k.document.size.width-k.origin.offset.right},top:{height:k.origin.offset.top,width:k.document.size.width}},k.available.window={bottom:{height:Math.max(k.window.size.height-Math.max(k.origin.windowOffset.bottom,0),0),width:k.window.size.width},left:{height:k.window.size.height,width:Math.max(k.origin.windowOffset.left,0)},right:{height:k.window.size.height,width:Math.max(k.window.size.width-Math.max(k.origin.windowOffset.right,0),0)},top:{height:Math.max(k.origin.windowOffset.top,0),width:k.window.size.width}};\"html\"!=j[0].tagName.toLowerCase();){if(\"fixed\"==j.css(\"position\")){k.origin.fixedLineage=!0;break}j=j.parent()}return k},__optionsFormat:function(){return\"number\"==typeof this.__options.animationDuration&&(this.__options.animationDuration=[this.__options.animationDuration,this.__options.animationDuration]),\"number\"==typeof this.__options.delay&&(this.__options.delay=[this.__options.delay,this.__options.delay]),\"number\"==typeof this.__options.delayTouch&&(this.__options.delayTouch=[this.__options.delayTouch,this.__options.delayTouch]),\"string\"==typeof this.__options.theme&&(this.__options.theme=[this.__options.theme]),null===this.__options.parent?this.__options.parent=a(h.window.document.body):\"string\"==typeof this.__options.parent&&(this.__options.parent=a(this.__options.parent)),\"hover\"==this.__options.trigger?(this.__options.triggerOpen={mouseenter:!0,touchstart:!0},this.__options.triggerClose={mouseleave:!0,originClick:!0,touchleave:!0}):\"click\"==this.__options.trigger&&(this.__options.triggerOpen={click:!0,tap:!0},this.__options.triggerClose={click:!0,tap:!0}),this._trigger(\"options\"),this},__prepareGC:function(){var b=this;return b.__options.selfDestruction?b.__garbageCollector=setInterval(function(){var c=(new Date).getTime();b.__touchEvents=a.grep(b.__touchEvents,function(a,b){return c-a.time>6e4}),d(b._$origin)||b.close(function(){b.destroy()})},2e4):clearInterval(b.__garbageCollector),b},__prepareOrigin:function(){var a=this;if(a._$origin.off(\".\"+a.__namespace+\"-triggerOpen\"),h.hasTouchCapability&&a._$origin.on(\"touchstart.\"+a.__namespace+\"-triggerOpen touchend.\"+a.__namespace+\"-triggerOpen touchcancel.\"+a.__namespace+\"-triggerOpen\",function(b){a._touchRecordEvent(b)}),a.__options.triggerOpen.click||a.__options.triggerOpen.tap&&h.hasTouchCapability){var b=\"\";a.__options.triggerOpen.click&&(b+=\"click.\"+a.__namespace+\"-triggerOpen \"),a.__options.triggerOpen.tap&&h.hasTouchCapability&&(b+=\"touchend.\"+a.__namespace+\"-triggerOpen\"),a._$origin.on(b,function(b){a._touchIsMeaningfulEvent(b)&&a._open(b)})}if(a.__options.triggerOpen.mouseenter||a.__options.triggerOpen.touchstart&&h.hasTouchCapability){var b=\"\";a.__options.triggerOpen.mouseenter&&(b+=\"mouseenter.\"+a.__namespace+\"-triggerOpen \"),a.__options.triggerOpen.touchstart&&h.hasTouchCapability&&(b+=\"touchstart.\"+a.__namespace+\"-triggerOpen\"),a._$origin.on(b,function(b){!a._touchIsTouchEvent(b)&&a._touchIsEmulatedEvent(b)||(a.__pointerIsOverOrigin=!0,a._openShortly(b))})}if(a.__options.triggerClose.mouseleave||a.__options.triggerClose.touchleave&&h.hasTouchCapability){var b=\"\";a.__options.triggerClose.mouseleave&&(b+=\"mouseleave.\"+a.__namespace+\"-triggerOpen \"),a.__options.triggerClose.touchleave&&h.hasTouchCapability&&(b+=\"touchend.\"+a.__namespace+\"-triggerOpen touchcancel.\"+a.__namespace+\"-triggerOpen\"),a._$origin.on(b,function(b){a._touchIsMeaningfulEvent(b)&&(a.__pointerIsOverOrigin=!1)})}return a},__prepareTooltip:function(){var b=this,c=b.__options.interactive?\"auto\":\"\";return b._$tooltip.attr(\"id\",b.__namespace).css({\"pointer-events\":c,zIndex:b.__options.zIndex}),a.each(b.__previousThemes,function(a,c){b._$tooltip.removeClass(c)}),a.each(b.__options.theme,function(a,c){b._$tooltip.addClass(c)}),b.__previousThemes=a.merge([],b.__options.theme),b},__scrollHandler:function(b){var c=this;if(c.__options.triggerClose.scroll)c._close(b);else if(d(c._$origin)&&d(c._$tooltip)){var e=null;if(b.target===h.window.document)c.__Geometry.origin.fixedLineage||c.__options.repositionOnScroll&&c.reposition(b);else{e=c.__geometry();var f=!1;if(\"fixed\"!=c._$origin.css(\"position\")&&c.__$originParents.each(function(b,c){var d=a(c),g=d.css(\"overflow-x\"),h=d.css(\"overflow-y\");if(\"visible\"!=g||\"visible\"!=h){var i=c.getBoundingClientRect();if(\"visible\"!=g&&(e.origin.windowOffset.left<i.left||e.origin.windowOffset.right>i.right))return f=!0,!1;if(\"visible\"!=h&&(e.origin.windowOffset.top<i.top||e.origin.windowOffset.bottom>i.bottom))return f=!0,!1}return\"fixed\"==d.css(\"position\")?!1:void 0}),f)c._$tooltip.css(\"visibility\",\"hidden\");else if(c._$tooltip.css(\"visibility\",\"visible\"),c.__options.repositionOnScroll)c.reposition(b);else{var g=e.origin.offset.left-c.__Geometry.origin.offset.left,i=e.origin.offset.top-c.__Geometry.origin.offset.top;c._$tooltip.css({left:c.__lastPosition.coord.left+g,top:c.__lastPosition.coord.top+i})}}c._trigger({type:\"scroll\",event:b,geo:e})}return c},__stateSet:function(a){return this.__state=a,this._trigger({type:\"state\",state:a}),this},__timeoutsClear:function(){return clearTimeout(this.__timeouts.open),this.__timeouts.open=null,a.each(this.__timeouts.close,function(a,b){clearTimeout(b)}),this.__timeouts.close=[],this},__trackerStart:function(){var a=this,b=a._$tooltip.find(\".tooltipster-content\");return a.__options.trackTooltip&&(a.__contentBcr=b[0].getBoundingClientRect()),a.__tracker=setInterval(function(){if(d(a._$origin)&&d(a._$tooltip)){if(a.__options.trackOrigin){var e=a.__geometry(),f=!1;c(e.origin.size,a.__Geometry.origin.size)&&(a.__Geometry.origin.fixedLineage?c(e.origin.windowOffset,a.__Geometry.origin.windowOffset)&&(f=!0):c(e.origin.offset,a.__Geometry.origin.offset)&&(f=!0)),f||(a.__options.triggerClose.mouseleave?a._close():a.reposition())}if(a.__options.trackTooltip){var g=b[0].getBoundingClientRect();g.height===a.__contentBcr.height&&g.width===a.__contentBcr.width||(a.reposition(),a.__contentBcr=g)}}else a._close()},a.__options.trackerInterval),a},_close:function(b,c,d){var e=this,f=!0;if(e._trigger({type:\"close\",event:b,stop:function(){f=!1}}),f||d){c&&e.__callbacks.close.push(c),e.__callbacks.open=[],e.__timeoutsClear();var g=function(){a.each(e.__callbacks.close,function(a,c){c.call(e,e,{event:b,origin:e._$origin[0]})}),e.__callbacks.close=[]};if(\"closed\"!=e.__state){var i=!0,j=new Date,k=j.getTime(),l=k+e.__options.animationDuration[1];if(\"disappearing\"==e.__state&&l>e.__closingTime&&e.__options.animationDuration[1]>0&&(i=!1),i){e.__closingTime=l,\"disappearing\"!=e.__state&&e.__stateSet(\"disappearing\");var m=function(){clearInterval(e.__tracker),e._trigger({type:\"closing\",event:b}),e._$tooltip.off(\".\"+e.__namespace+\"-triggerClose\").removeClass(\"tooltipster-dying\"),a(h.window).off(\".\"+e.__namespace+\"-triggerClose\"),e.__$originParents.each(function(b,c){a(c).off(\"scroll.\"+e.__namespace+\"-triggerClose\")}),e.__$originParents=null,a(h.window.document.body).off(\".\"+e.__namespace+\"-triggerClose\"),e._$origin.off(\".\"+e.__namespace+\"-triggerClose\"),e._off(\"dismissable\"),e.__stateSet(\"closed\"),e._trigger({type:\"after\",event:b}),e.__options.functionAfter&&e.__options.functionAfter.call(e,e,{event:b,origin:e._$origin[0]}),g()};h.hasTransitions?(e._$tooltip.css({\"-moz-animation-duration\":e.__options.animationDuration[1]+\"ms\",\"-ms-animation-duration\":e.__options.animationDuration[1]+\"ms\",\"-o-animation-duration\":e.__options.animationDuration[1]+\"ms\",\"-webkit-animation-duration\":e.__options.animationDuration[1]+\"ms\",\"animation-duration\":e.__options.animationDuration[1]+\"ms\",\"transition-duration\":e.__options.animationDuration[1]+\"ms\"}),e._$tooltip.clearQueue().removeClass(\"tooltipster-show\").addClass(\"tooltipster-dying\"),e.__options.animationDuration[1]>0&&e._$tooltip.delay(e.__options.animationDuration[1]),e._$tooltip.queue(m)):e._$tooltip.stop().fadeOut(e.__options.animationDuration[1],m)}}else g()}return e},_off:function(){return this.__$emitterPrivate.off.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_on:function(){return this.__$emitterPrivate.on.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_one:function(){return this.__$emitterPrivate.one.apply(this.__$emitterPrivate,Array.prototype.slice.apply(arguments)),this},_open:function(b,c){var e=this;if(!e.__destroying&&d(e._$origin)&&e.__enabled){var f=!0;if(\"closed\"==e.__state&&(e._trigger({type:\"before\",event:b,stop:function(){f=!1}}),f&&e.__options.functionBefore&&(f=e.__options.functionBefore.call(e,e,{event:b,origin:e._$origin[0]}))),f!==!1&&null!==e.__Content){c&&e.__callbacks.open.push(c),e.__callbacks.close=[],e.__timeoutsClear();var g,i=function(){\"stable\"!=e.__state&&e.__stateSet(\"stable\"),a.each(e.__callbacks.open,function(a,b){b.call(e,e,{origin:e._$origin[0],tooltip:e._$tooltip[0]})}),e.__callbacks.open=[]};if(\"closed\"!==e.__state)g=0,\"disappearing\"===e.__state?(e.__stateSet(\"appearing\"),h.hasTransitions?(e._$tooltip.clearQueue().removeClass(\"tooltipster-dying\").addClass(\"tooltipster-show\"),e.__options.animationDuration[0]>0&&e._$tooltip.delay(e.__options.animationDuration[0]),e._$tooltip.queue(i)):e._$tooltip.stop().fadeIn(i)):\"stable\"==e.__state&&i();else{if(e.__stateSet(\"appearing\"),g=e.__options.animationDuration[0],e.__contentInsert(),e.reposition(b,!0),h.hasTransitions?(e._$tooltip.addClass(\"tooltipster-\"+e.__options.animation).addClass(\"tooltipster-initial\").css({\"-moz-animation-duration\":e.__options.animationDuration[0]+\"ms\",\"-ms-animation-duration\":e.__options.animationDuration[0]+\"ms\",\"-o-animation-duration\":e.__options.animationDuration[0]+\"ms\",\"-webkit-animation-duration\":e.__options.animationDuration[0]+\"ms\",\"animation-duration\":e.__options.animationDuration[0]+\"ms\",\"transition-duration\":e.__options.animationDuration[0]+\"ms\"}),setTimeout(function(){\"closed\"!=e.__state&&(e._$tooltip.addClass(\"tooltipster-show\").removeClass(\"tooltipster-initial\"),e.__options.animationDuration[0]>0&&e._$tooltip.delay(e.__options.animationDuration[0]),e._$tooltip.queue(i))},0)):e._$tooltip.css(\"display\",\"none\").fadeIn(e.__options.animationDuration[0],i),e.__trackerStart(),a(h.window).on(\"resize.\"+e.__namespace+\"-triggerClose\",function(b){var c=a(document.activeElement);(c.is(\"input\")||c.is(\"textarea\"))&&a.contains(e._$tooltip[0],c[0])||e.reposition(b)}).on(\"scroll.\"+e.__namespace+\"-triggerClose\",function(a){e.__scrollHandler(a)}),e.__$originParents=e._$origin.parents(),e.__$originParents.each(function(b,c){a(c).on(\"scroll.\"+e.__namespace+\"-triggerClose\",function(a){e.__scrollHandler(a)})}),e.__options.triggerClose.mouseleave||e.__options.triggerClose.touchleave&&h.hasTouchCapability){e._on(\"dismissable\",function(a){a.dismissable?a.delay?(m=setTimeout(function(){e._close(a.event)},a.delay),e.__timeouts.close.push(m)):e._close(a):clearTimeout(m)});var j=e._$origin,k=\"\",l=\"\",m=null;e.__options.interactive&&(j=j.add(e._$tooltip)),e.__options.triggerClose.mouseleave&&(k+=\"mouseenter.\"+e.__namespace+\"-triggerClose \",l+=\"mouseleave.\"+e.__namespace+\"-triggerClose \"),e.__options.triggerClose.touchleave&&h.hasTouchCapability&&(k+=\"touchstart.\"+e.__namespace+\"-triggerClose\",l+=\"touchend.\"+e.__namespace+\"-triggerClose touchcancel.\"+e.__namespace+\"-triggerClose\"),j.on(l,function(a){if(e._touchIsTouchEvent(a)||!e._touchIsEmulatedEvent(a)){var b=\"mouseleave\"==a.type?e.__options.delay:e.__options.delayTouch;e._trigger({delay:b[1],dismissable:!0,event:a,type:\"dismissable\"})}}).on(k,function(a){!e._touchIsTouchEvent(a)&&e._touchIsEmulatedEvent(a)||e._trigger({dismissable:!1,event:a,type:\"dismissable\"})})}e.__options.triggerClose.originClick&&e._$origin.on(\"click.\"+e.__namespace+\"-triggerClose\",function(a){e._touchIsTouchEvent(a)||e._touchIsEmulatedEvent(a)||e._close(a)}),(e.__options.triggerClose.click||e.__options.triggerClose.tap&&h.hasTouchCapability)&&setTimeout(function(){if(\"closed\"!=e.__state){var b=\"\",c=a(h.window.document.body);e.__options.triggerClose.click&&(b+=\"click.\"+e.__namespace+\"-triggerClose \"),e.__options.triggerClose.tap&&h.hasTouchCapability&&(b+=\"touchend.\"+e.__namespace+\"-triggerClose\"),c.on(b,function(b){e._touchIsMeaningfulEvent(b)&&(e._touchRecordEvent(b),e.__options.interactive&&a.contains(e._$tooltip[0],b.target)||e._close(b))}),e.__options.triggerClose.tap&&h.hasTouchCapability&&c.on(\"touchstart.\"+e.__namespace+\"-triggerClose\",function(a){e._touchRecordEvent(a)})}},0),e._trigger(\"ready\"),e.__options.functionReady&&e.__options.functionReady.call(e,e,{origin:e._$origin[0],tooltip:e._$tooltip[0]})}if(e.__options.timer>0){var m=setTimeout(function(){e._close()},e.__options.timer+g);e.__timeouts.close.push(m)}}}return e},_openShortly:function(a){var b=this,c=!0;if(\"stable\"!=b.__state&&\"appearing\"!=b.__state&&!b.__timeouts.open&&(b._trigger({type:\"start\",event:a,stop:function(){c=!1}}),c)){var d=0==a.type.indexOf(\"touch\")?b.__options.delayTouch:b.__options.delay;d[0]?b.__timeouts.open=setTimeout(function(){b.__timeouts.open=null,b.__pointerIsOverOrigin&&b._touchIsMeaningfulEvent(a)?(b._trigger(\"startend\"),b._open(a)):b._trigger(\"startcancel\")},d[0]):(b._trigger(\"startend\"),b._open(a))}return b},_optionsExtract:function(b,c){var d=this,e=a.extend(!0,{},c),f=d.__options[b];return f||(f={},a.each(c,function(a,b){var c=d.__options[a];void 0!==c&&(f[a]=c)})),a.each(e,function(b,c){void 0!==f[b]&&(\"object\"!=typeof c||c instanceof Array||null==c||\"object\"!=typeof f[b]||f[b]instanceof Array||null==f[b]?e[b]=f[b]:a.extend(e[b],f[b]))}),e},_plug:function(b){var c=a.tooltipster._plugin(b);if(!c)throw new Error('The \"'+b+'\" plugin is not defined');return c.instance&&a.tooltipster.__bridge(c.instance,this,c.name),this},_touchIsEmulatedEvent:function(a){for(var b=!1,c=(new Date).getTime(),d=this.__touchEvents.length-1;d>=0;d--){var e=this.__touchEvents[d];if(!(c-e.time<500))break;e.target===a.target&&(b=!0)}return b},_touchIsMeaningfulEvent:function(a){return this._touchIsTouchEvent(a)&&!this._touchSwiped(a.target)||!this._touchIsTouchEvent(a)&&!this._touchIsEmulatedEvent(a)},_touchIsTouchEvent:function(a){return 0==a.type.indexOf(\"touch\")},_touchRecordEvent:function(a){return this._touchIsTouchEvent(a)&&(a.time=(new Date).getTime(),this.__touchEvents.push(a)),this},_touchSwiped:function(a){for(var b=!1,c=this.__touchEvents.length-1;c>=0;c--){var d=this.__touchEvents[c];if(\"touchmove\"==d.type){b=!0;break}if(\"touchstart\"==d.type&&a===d.target)break}return b},_trigger:function(){var b=Array.prototype.slice.apply(arguments);return\"string\"==typeof b[0]&&(b[0]={type:b[0]}),b[0].instance=this,b[0].origin=this._$origin?this._$origin[0]:null,b[0].tooltip=this._$tooltip?this._$tooltip[0]:null,this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate,b),a.tooltipster._trigger.apply(a.tooltipster,b),this.__$emitterPublic.trigger.apply(this.__$emitterPublic,b),this},_unplug:function(b){var c=this;if(c[b]){var d=a.tooltipster._plugin(b);d.instance&&a.each(d.instance,function(a,d){c[a]&&c[a].bridged===c[b]&&delete c[a]}),c[b].__destroy&&c[b].__destroy(),delete c[b]}return c},close:function(a){return this.__destroyed?this.__destroyError():this._close(null,a),this},content:function(a){var b=this;if(void 0===a)return b.__Content;if(b.__destroyed)b.__destroyError();else if(b.__contentSet(a),null!==b.__Content){if(\"closed\"!==b.__state&&(b.__contentInsert(),b.reposition(),b.__options.updateAnimation))if(h.hasTransitions){var c=b.__options.updateAnimation;b._$tooltip.addClass(\"tooltipster-update-\"+c),setTimeout(function(){\"closed\"!=b.__state&&b._$tooltip.removeClass(\"tooltipster-update-\"+c)},1e3)}else b._$tooltip.fadeTo(200,.5,function(){\"closed\"!=b.__state&&b._$tooltip.fadeTo(200,1)})}else b._close();return b},destroy:function(){var b=this;if(b.__destroyed)b.__destroyError();else{\"closed\"!=b.__state?b.option(\"animationDuration\",0)._close(null,null,!0):b.__timeoutsClear(),b._trigger(\"destroy\"),b.__destroyed=!0,b._$origin.removeData(b.__namespace).off(\".\"+b.__namespace+\"-triggerOpen\"),a(h.window.document.body).off(\".\"+b.__namespace+\"-triggerOpen\");var c=b._$origin.data(\"tooltipster-ns\");if(c)if(1===c.length){var d=null;\"previous\"==b.__options.restoration?d=b._$origin.data(\"tooltipster-initialTitle\"):\"current\"==b.__options.restoration&&(d=\"string\"==typeof b.__Content?b.__Content:a(\"<div></div>\").append(b.__Content).html()),d&&b._$origin.attr(\"title\",d),b._$origin.removeClass(\"tooltipstered\"),b._$origin.removeData(\"tooltipster-ns\").removeData(\"tooltipster-initialTitle\")}else c=a.grep(c,function(a,c){return a!==b.__namespace}),b._$origin.data(\"tooltipster-ns\",c);b._trigger(\"destroyed\"),b._off(),b.off(),b.__Content=null,b.__$emitterPrivate=null,b.__$emitterPublic=null,b.__options.parent=null,b._$origin=null,b._$tooltip=null,a.tooltipster.__instancesLatestArr=a.grep(a.tooltipster.__instancesLatestArr,function(a,c){return b!==a}),clearInterval(b.__garbageCollector)}return b},disable:function(){return this.__destroyed?(this.__destroyError(),this):(this._close(),this.__enabled=!1,this)},elementOrigin:function(){return this.__destroyed?void this.__destroyError():this._$origin[0]},elementTooltip:function(){return this._$tooltip?this._$tooltip[0]:null},enable:function(){return this.__enabled=!0,this},hide:function(a){return this.close(a)},instance:function(){return this},off:function(){return this.__destroyed||this.__$emitterPublic.off.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},on:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.on.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},one:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.one.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this},open:function(a){return this.__destroyed?this.__destroyError():this._open(null,a),this},option:function(b,c){return void 0===c?this.__options[b]:(this.__destroyed?this.__destroyError():(this.__options[b]=c,this.__optionsFormat(),a.inArray(b,[\"trigger\",\"triggerClose\",\"triggerOpen\"])>=0&&this.__prepareOrigin(),\"selfDestruction\"===b&&this.__prepareGC()),this)},reposition:function(a,b){var c=this;return c.__destroyed?c.__destroyError():\"closed\"!=c.__state&&d(c._$origin)&&(b||d(c._$tooltip))&&(b||c._$tooltip.detach(),c.__Geometry=c.__geometry(),c._trigger({type:\"reposition\",event:a,helper:{geo:c.__Geometry}})),c},show:function(a){return this.open(a)},status:function(){return{destroyed:this.__destroyed,enabled:this.__enabled,open:\"closed\"!==this.__state,state:this.__state}},triggerHandler:function(){return this.__destroyed?this.__destroyError():this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic,Array.prototype.slice.apply(arguments)),this}},a.fn.tooltipster=function(){var b=Array.prototype.slice.apply(arguments),c=\"You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE.\";if(0===this.length)return this;if(\"string\"==typeof b[0]){var d=\"#*$~&\";return this.each(function(){var e=a(this).data(\"tooltipster-ns\"),f=e?a(this).data(e[0]):null;if(!f)throw new Error(\"You called Tooltipster's \\\"\"+b[0]+'\" method on an uninitialized element');if(\"function\"!=typeof f[b[0]])throw new Error('Unknown method \"'+b[0]+'\"');this.length>1&&\"content\"==b[0]&&(b[1]instanceof a||\"object\"==typeof b[1]&&null!=b[1]&&b[1].tagName)&&!f.__options.contentCloning&&f.__options.debug&&console.log(c);var g=f[b[0]](b[1],b[2]);return g!==f||\"instance\"===b[0]?(d=g,!1):void 0}),\"#*$~&\"!==d?d:this}a.tooltipster.__instancesLatestArr=[];var e=b[0]&&void 0!==b[0].multiple,g=e&&b[0].multiple||!e&&f.multiple,h=b[0]&&void 0!==b[0].content,i=h&&b[0].content||!h&&f.content,j=b[0]&&void 0!==b[0].contentCloning,k=j&&b[0].contentCloning||!j&&f.contentCloning,l=b[0]&&void 0!==b[0].debug,m=l&&b[0].debug||!l&&f.debug;return this.length>1&&(i instanceof a||\"object\"==typeof i&&null!=i&&i.tagName)&&!k&&m&&console.log(c),this.each(function(){var c=!1,d=a(this),e=d.data(\"tooltipster-ns\"),f=null;e?g?c=!0:m&&(console.log(\"Tooltipster: one or more tooltips are already attached to the element below. Ignoring.\"),console.log(this)):c=!0,c&&(f=new a.Tooltipster(this,b[0]),e||(e=[]),e.push(f.__namespace),d.data(\"tooltipster-ns\",e),d.data(f.__namespace,f),f.__options.functionInit&&f.__options.functionInit.call(f,f,{origin:this}),f._trigger(\"init\")),a.tooltipster.__instancesLatestArr.push(f)}),this},b.prototype={__init:function(b){this.__$tooltip=b,this.__$tooltip.css({left:0,overflow:\"hidden\",position:\"absolute\",top:0}).find(\".tooltipster-content\").css(\"overflow\",\"auto\"),this.$container=a('<div class=\"tooltipster-ruler\"></div>').append(this.__$tooltip).appendTo(h.window.document.body)},__forceRedraw:function(){var a=this.__$tooltip.parent();this.__$tooltip.detach(),this.__$tooltip.appendTo(a)},constrain:function(a,b){return this.constraints={width:a,height:b},this.__$tooltip.css({display:\"block\",height:\"\",overflow:\"auto\",width:a}),this},destroy:function(){this.__$tooltip.detach().find(\".tooltipster-content\").css({display:\"\",overflow:\"\"}),this.$container.remove()},free:function(){return this.constraints=null,this.__$tooltip.css({display:\"\",height:\"\",overflow:\"visible\",width:\"\"}),this},measure:function(){this.__forceRedraw();var a=this.__$tooltip[0].getBoundingClientRect(),b={size:{height:a.height||a.bottom-a.top,width:a.width||a.right-a.left}};if(this.constraints){var c=this.__$tooltip.find(\".tooltipster-content\"),d=this.__$tooltip.outerHeight(),e=c[0].getBoundingClientRect(),f={height:d<=this.constraints.height,width:a.width<=this.constraints.width&&e.width>=c[0].scrollWidth-1};b.fits=f.height&&f.width}return h.IE&&h.IE<=11&&b.size.width!==h.window.document.documentElement.clientWidth&&(b.size.width=Math.ceil(b.size.width)+1),b}};var j=navigator.userAgent.toLowerCase();-1!=j.indexOf(\"msie\")?h.IE=parseInt(j.split(\"msie\")[1]):-1!==j.toLowerCase().indexOf(\"trident\")&&-1!==j.indexOf(\" rv:11\")?h.IE=11:-1!=j.toLowerCase().indexOf(\"edge/\")&&(h.IE=parseInt(j.toLowerCase().split(\"edge/\")[1]));var k=\"tooltipster.sideTip\";return a.tooltipster._plugin({name:k,instance:{__defaults:function(){return{arrow:!0,distance:6,functionPosition:null,maxWidth:null,minIntersection:16,minWidth:0,position:null,side:\"top\",viewportAware:!0}},__init:function(a){var b=this;b.__instance=a,b.__namespace=\"tooltipster-sideTip-\"+Math.round(1e6*Math.random()),b.__previousState=\"closed\",b.__options,b.__optionsFormat(),b.__instance._on(\"state.\"+b.__namespace,function(a){\"closed\"==a.state?b.__close():\"appearing\"==a.state&&\"closed\"==b.__previousState&&b.__create(),b.__previousState=a.state}),b.__instance._on(\"options.\"+b.__namespace,function(){b.__optionsFormat()}),b.__instance._on(\"reposition.\"+b.__namespace,function(a){b.__reposition(a.event,a.helper)})},__close:function(){this.__instance.content()instanceof a&&this.__instance.content().detach(),this.__instance._$tooltip.remove(),this.__instance._$tooltip=null},__create:function(){var b=a('<div class=\"tooltipster-base tooltipster-sidetip\"><div class=\"tooltipster-box\"><div class=\"tooltipster-content\"></div></div><div class=\"tooltipster-arrow\"><div class=\"tooltipster-arrow-uncropped\"><div class=\"tooltipster-arrow-border\"></div><div class=\"tooltipster-arrow-background\"></div></div></div></div>');this.__options.arrow||b.find(\".tooltipster-box\").css(\"margin\",0).end().find(\".tooltipster-arrow\").hide(),this.__options.minWidth&&b.css(\"min-width\",this.__options.minWidth+\"px\"),this.__options.maxWidth&&b.css(\"max-width\",this.__options.maxWidth+\"px\"),\nthis.__instance._$tooltip=b,this.__instance._trigger(\"created\")},__destroy:function(){this.__instance._off(\".\"+self.__namespace)},__optionsFormat:function(){var b=this;if(b.__options=b.__instance._optionsExtract(k,b.__defaults()),b.__options.position&&(b.__options.side=b.__options.position),\"object\"!=typeof b.__options.distance&&(b.__options.distance=[b.__options.distance]),b.__options.distance.length<4&&(void 0===b.__options.distance[1]&&(b.__options.distance[1]=b.__options.distance[0]),void 0===b.__options.distance[2]&&(b.__options.distance[2]=b.__options.distance[0]),void 0===b.__options.distance[3]&&(b.__options.distance[3]=b.__options.distance[1]),b.__options.distance={top:b.__options.distance[0],right:b.__options.distance[1],bottom:b.__options.distance[2],left:b.__options.distance[3]}),\"string\"==typeof b.__options.side){var c={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"};b.__options.side=[b.__options.side,c[b.__options.side]],\"left\"==b.__options.side[0]||\"right\"==b.__options.side[0]?b.__options.side.push(\"top\",\"bottom\"):b.__options.side.push(\"right\",\"left\")}6===a.tooltipster._env.IE&&b.__options.arrow!==!0&&(b.__options.arrow=!1)},__reposition:function(b,c){var d,e=this,f=e.__targetFind(c),g=[];e.__instance._$tooltip.detach();var h=e.__instance._$tooltip.clone(),i=a.tooltipster._getRuler(h),j=!1,k=e.__instance.option(\"animation\");switch(k&&h.removeClass(\"tooltipster-\"+k),a.each([\"window\",\"document\"],function(d,k){var l=null;if(e.__instance._trigger({container:k,helper:c,satisfied:j,takeTest:function(a){l=a},results:g,type:\"positionTest\"}),1==l||0!=l&&0==j&&(\"window\"!=k||e.__options.viewportAware))for(var d=0;d<e.__options.side.length;d++){var m={horizontal:0,vertical:0},n=e.__options.side[d];\"top\"==n||\"bottom\"==n?m.vertical=e.__options.distance[n]:m.horizontal=e.__options.distance[n],e.__sideChange(h,n),a.each([\"natural\",\"constrained\"],function(a,d){if(l=null,e.__instance._trigger({container:k,event:b,helper:c,mode:d,results:g,satisfied:j,side:n,takeTest:function(a){l=a},type:\"positionTest\"}),1==l||0!=l&&0==j){var h={container:k,distance:m,fits:null,mode:d,outerSize:null,side:n,size:null,target:f[n],whole:null},o=\"natural\"==d?i.free():i.constrain(c.geo.available[k][n].width-m.horizontal,c.geo.available[k][n].height-m.vertical),p=o.measure();if(h.size=p.size,h.outerSize={height:p.size.height+m.vertical,width:p.size.width+m.horizontal},\"natural\"==d?c.geo.available[k][n].width>=h.outerSize.width&&c.geo.available[k][n].height>=h.outerSize.height?h.fits=!0:h.fits=!1:h.fits=p.fits,\"window\"==k&&(h.fits?\"top\"==n||\"bottom\"==n?h.whole=c.geo.origin.windowOffset.right>=e.__options.minIntersection&&c.geo.window.size.width-c.geo.origin.windowOffset.left>=e.__options.minIntersection:h.whole=c.geo.origin.windowOffset.bottom>=e.__options.minIntersection&&c.geo.window.size.height-c.geo.origin.windowOffset.top>=e.__options.minIntersection:h.whole=!1),g.push(h),h.whole)j=!0;else if(\"natural\"==h.mode&&(h.fits||h.size.width<=c.geo.available[k][n].width))return!1}})}}),e.__instance._trigger({edit:function(a){g=a},event:b,helper:c,results:g,type:\"positionTested\"}),g.sort(function(a,b){if(a.whole&&!b.whole)return-1;if(!a.whole&&b.whole)return 1;if(a.whole&&b.whole){var c=e.__options.side.indexOf(a.side),d=e.__options.side.indexOf(b.side);return d>c?-1:c>d?1:\"natural\"==a.mode?-1:1}if(a.fits&&!b.fits)return-1;if(!a.fits&&b.fits)return 1;if(a.fits&&b.fits){var c=e.__options.side.indexOf(a.side),d=e.__options.side.indexOf(b.side);return d>c?-1:c>d?1:\"natural\"==a.mode?-1:1}return\"document\"==a.container&&\"bottom\"==a.side&&\"natural\"==a.mode?-1:1}),d=g[0],d.coord={},d.side){case\"left\":case\"right\":d.coord.top=Math.floor(d.target-d.size.height/2);break;case\"bottom\":case\"top\":d.coord.left=Math.floor(d.target-d.size.width/2)}switch(d.side){case\"left\":d.coord.left=c.geo.origin.windowOffset.left-d.outerSize.width;break;case\"right\":d.coord.left=c.geo.origin.windowOffset.right+d.distance.horizontal;break;case\"top\":d.coord.top=c.geo.origin.windowOffset.top-d.outerSize.height;break;case\"bottom\":d.coord.top=c.geo.origin.windowOffset.bottom+d.distance.vertical}\"window\"==d.container?\"top\"==d.side||\"bottom\"==d.side?d.coord.left<0?c.geo.origin.windowOffset.right-this.__options.minIntersection>=0?d.coord.left=0:d.coord.left=c.geo.origin.windowOffset.right-this.__options.minIntersection-1:d.coord.left>c.geo.window.size.width-d.size.width&&(c.geo.origin.windowOffset.left+this.__options.minIntersection<=c.geo.window.size.width?d.coord.left=c.geo.window.size.width-d.size.width:d.coord.left=c.geo.origin.windowOffset.left+this.__options.minIntersection+1-d.size.width):d.coord.top<0?c.geo.origin.windowOffset.bottom-this.__options.minIntersection>=0?d.coord.top=0:d.coord.top=c.geo.origin.windowOffset.bottom-this.__options.minIntersection-1:d.coord.top>c.geo.window.size.height-d.size.height&&(c.geo.origin.windowOffset.top+this.__options.minIntersection<=c.geo.window.size.height?d.coord.top=c.geo.window.size.height-d.size.height:d.coord.top=c.geo.origin.windowOffset.top+this.__options.minIntersection+1-d.size.height):(d.coord.left>c.geo.window.size.width-d.size.width&&(d.coord.left=c.geo.window.size.width-d.size.width),d.coord.left<0&&(d.coord.left=0)),e.__sideChange(h,d.side),c.tooltipClone=h[0],c.tooltipParent=e.__instance.option(\"parent\").parent[0],c.mode=d.mode,c.whole=d.whole,c.origin=e.__instance._$origin[0],c.tooltip=e.__instance._$tooltip[0],delete d.container,delete d.fits,delete d.mode,delete d.outerSize,delete d.whole,d.distance=d.distance.horizontal||d.distance.vertical;var l=a.extend(!0,{},d);if(e.__instance._trigger({edit:function(a){d=a},event:b,helper:c,position:l,type:\"position\"}),e.__options.functionPosition){var m=e.__options.functionPosition.call(e,e.__instance,c,l);m&&(d=m)}i.destroy();var n,o;\"top\"==d.side||\"bottom\"==d.side?(n={prop:\"left\",val:d.target-d.coord.left},o=d.size.width-this.__options.minIntersection):(n={prop:\"top\",val:d.target-d.coord.top},o=d.size.height-this.__options.minIntersection),n.val<this.__options.minIntersection?n.val=this.__options.minIntersection:n.val>o&&(n.val=o);var p;p=c.geo.origin.fixedLineage?c.geo.origin.windowOffset:{left:c.geo.origin.windowOffset.left+c.geo.window.scroll.left,top:c.geo.origin.windowOffset.top+c.geo.window.scroll.top},d.coord={left:p.left+(d.coord.left-c.geo.origin.windowOffset.left),top:p.top+(d.coord.top-c.geo.origin.windowOffset.top)},e.__sideChange(e.__instance._$tooltip,d.side),c.geo.origin.fixedLineage?e.__instance._$tooltip.css(\"position\",\"fixed\"):e.__instance._$tooltip.css(\"position\",\"\"),e.__instance._$tooltip.css({left:d.coord.left,top:d.coord.top,height:d.size.height,width:d.size.width}).find(\".tooltipster-arrow\").css({left:\"\",top:\"\"}).css(n.prop,n.val),e.__instance._$tooltip.appendTo(e.__instance.option(\"parent\")),e.__instance._trigger({type:\"repositioned\",event:b,position:d})},__sideChange:function(a,b){a.removeClass(\"tooltipster-bottom\").removeClass(\"tooltipster-left\").removeClass(\"tooltipster-right\").removeClass(\"tooltipster-top\").addClass(\"tooltipster-\"+b)},__targetFind:function(a){var b={},c=this.__instance._$origin[0].getClientRects();if(c.length>1){var d=this.__instance._$origin.css(\"opacity\");1==d&&(this.__instance._$origin.css(\"opacity\",.99),c=this.__instance._$origin[0].getClientRects(),this.__instance._$origin.css(\"opacity\",1))}if(c.length<2)b.top=Math.floor(a.geo.origin.windowOffset.left+a.geo.origin.size.width/2),b.bottom=b.top,b.left=Math.floor(a.geo.origin.windowOffset.top+a.geo.origin.size.height/2),b.right=b.left;else{var e=c[0];b.top=Math.floor(e.left+(e.right-e.left)/2),e=c.length>2?c[Math.ceil(c.length/2)-1]:c[0],b.right=Math.floor(e.top+(e.bottom-e.top)/2),e=c[c.length-1],b.bottom=Math.floor(e.left+(e.right-e.left)/2),e=c.length>2?c[Math.ceil((c.length+1)/2)-1]:c[c.length-1],b.left=Math.floor(e.top+(e.bottom-e.top)/2)}return b}}}),a});\n\n//# sourceURL=webpack:////Users/kah8br/nodejs/wp-spa/node_modules/tooltipster/dist/js/tooltipster.bundle.min.js?");

/***/ }),

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\"),\n\n    ToolTipster = __webpack_require__(/*! tooltipster */ \"../../../node_modules/tooltipster/dist/js/tooltipster.bundle.min.js\"),\n\n    SelectElement = __webpack_require__(/*! ./views/select */ \"./views/select.js\"),\n    DemoView = __webpack_require__(/*! ./views/demo */ \"./views/demo.js\"),\n    FeedbackView = __webpack_require__(/*! ./views/feedback */ \"./views/feedback.js\"),\n    ConditionalView = __webpack_require__(/*! ./views/conditionals */ \"./views/conditionals.js\"),\n    SettingsController = __webpack_require__(/*! ./controllers/settings-controller */ \"./controllers/settings-controller.js\"),\n\n    settingsController = new SettingsController({\n        onKeyframesLoaded: function () {\n            var $demo = $('.wpspa-demo').wpspaDemo(),\n                $listItems = $('#wp-spa .select-animation').fillSelectOptions(settingsController.getKeyFrames()),\n                $conditionals = $('#wp-spa .conditional').conditional(),\n                $feedback = $('#wp-spa .feedback').wpspaFeedback(),\n                $inputs = $('#wp-spa [data-description]');\n\n            $inputs.each(function(index, el){\n                var $input = $(el),\n                    $inputLabels = $input.parents('td').tooltipster({\n                        content: $input.data('description')\n                    })\n            })\n        }\n    });\n\nmodule.exports = {\n    controllers: (function () {\n        return {\n            settings: settingsController\n        }\n    })()\n};\n\n\n//# sourceURL=webpack:///./app.js?");

/***/ }),

/***/ "./controllers/settings-controller.js":
/*!********************************************!*\
  !*** ./controllers/settings-controller.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\"),\n    CSSParser = __webpack_require__(/*! css-parser */ \"../../../node_modules/exports-loader/index.js?CSSParser!./vendors/cssParser.js\");\n\nfunction SettingsController(options) {\n    var self = this;\n\n    this.options = options;\n    this.keyframes = [];\n\n    $.ajax({\n        url: \"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.css\",\n        complete: function (response) {\n            console.log(\"response:%o\", arguments);\n            if (response.status == 200) {\n                var cssParser = new CSSParser(),\n                    cssAST = cssParser.parse(response.responseText, false, false);\n\n                var cssRule,\n                    cssRuleIdx = 0;\n\n                while(cssRule = cssAST.cssRules[cssRuleIdx++]){\n                    if (cssRule.type == 7) {\n                        self.keyframes.push(cssRule.name);\n                    }\n                }\n\n                if (self.options.onKeyframesLoaded) self.options.onKeyframesLoaded();\n                console.log('cssAST: %o', self.keyframes);\n            } else {\n                // handle failure\n            }\n        }\n    });\n}\n\nSettingsController.prototype = {\n    getKeyFrames: function () {\n        return this.keyframes;\n    }\n};\n\nmodule.exports = SettingsController;\n\n\n//# sourceURL=webpack:///./controllers/settings-controller.js?");

/***/ }),

/***/ "./vendors/jquery-wp.js":
/*!******************************!*\
  !*** ./vendors/jquery-wp.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// loads from global wordpress instance\nmodule.exports = window.jQuery.noConflict();\n\n//# sourceURL=webpack:///./vendors/jquery-wp.js?");

/***/ }),

/***/ "./views/conditionals.js":
/*!*******************************!*\
  !*** ./views/conditionals.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\");\n\n$.fn.conditional = function (options) {\n    var $conditionals = this;\n\n    $conditionals.each(function (index, el) {\n        var $el = $(el),\n            depsString = $el.attr('data-conditionals'),\n            deps = depsString.split(','),\n            $deps = deps.map(function(dep){\n                return $(dep);\n            }),\n            depsCount = deps.length,\n            depIdx;\n\n        function update(val){\n            var isSatisfied = true;\n            debugger;\n            $deps.forEach(function($dep){\n                if (!$dep[0].checked){\n                   isSatisfied = false;\n                }\n            })\n            if(isSatisfied){\n                $el.addClass('conditional--active');\n            } else {\n                $el.removeClass('conditional--active');\n            }\n        }\n\n        update();\n        $(depsString).on('change', function(evt){\n            update();\n        })\n    })\n};\n\n\n//# sourceURL=webpack:///./views/conditionals.js?");

/***/ }),

/***/ "./views/demo.js":
/*!***********************!*\
  !*** ./views/demo.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\");\n\n$.fn.wpspaDemo = function (options) {\n    var $demo = this,\n        opts = {\n            playInterval: 3000,\n            animatingClassName: 'wpspa-demo--animating',\n            animationDuration: 1000\n        },\n        state = {\n            isAnimating: false,\n            animationName: ''\n        },\n        $animationDisplay = $demo.find('.wpspa-demo__demo_el'),\n        $animationSetting = $demo.find('select');\n\n    $animationDisplay.css({\n        animationDuration: opts.animationDuration + 'ms'\n    });\n\n    $animationSetting.on('change', function () {\n        state.isAnimating = true;\n        state.animationName = this.value;\n    });\n\n    function startAnimation() {\n        // add animate className\n        $demo.addClass(opts.animatingClassName);\n        $animationDisplay.css({\n            animationName: state.animationName\n        })\n    }\n\n    function resetAnimation() {\n        // reset className after animation done\n        $demo.removeClass(opts.animatingClassName);\n        $animationDisplay.css({\n            animationName: ''\n        })\n    }\n\n    setInterval(function () {\n        if (state.isAnimating) {\n            startAnimation();\n        }\n\n        setTimeout(function () {\n            resetAnimation();\n        }, opts.animationDuration + 150);\n\n    }, opts.playInterval)\n};\n\n//# sourceURL=webpack:///./views/demo.js?");

/***/ }),

/***/ "./views/feedback.js":
/*!***************************!*\
  !*** ./views/feedback.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\");\n\n$.fn.wpspaFeedback = function (options) {\n    var $feedback = this,\n        $input = $feedback.find('textarea'),\n        $start = $feedback.find('.button--start'),\n        $close = $feedback.find('.button--close'),\n        $submit = $feedback.find('.button--send');\n\n    function close(){\n        $feedback.removeClass('feedback--visible')\n    }\n\n    function open(){\n        $feedback.addClass('feedback--visible')\n    }\n\n    $start.on('click', open);\n\n    $close.on('click', close);\n\n    $submit.on('click', function () {\n        $submit.prop('disabled', true);\n        $.ajax({\n            url: window.ajaxurl, // provided by WordPress\n            method: \"POST\",\n            crossDomain: true,\n            data: {\n                action: 'wp_spa', // WordPress requirement\n                wpspa: 'email',\n                data: {\n                    contact: \"wp-spa user\",\n                    message: $input.val(),\n                    date: (new Date()).toISOString()\n                }\n            },\n            complete: function (response) {\n                $submit.prop('disabled', false);\n                console.log('feedback response: %o', arguments);\n                alert('Thank you for your feedback!');\n                $input.val('');\n                close();\n            }\n        })\n    })\n};\n\n//# sourceURL=webpack:///./views/feedback.js?");

/***/ }),

/***/ "./views/select.js":
/*!*************************!*\
  !*** ./views/select.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./vendors/jquery-wp.js\");\n\n$.fn.fillSelectOptions = function (options) {\n    console.log('fillKeyframes() called @ %o', this);\n    var $selected = this;\n\n    $selected.each(function (index, el) {\n        var $el = $(el),\n            defaultVal = $el.data('default');\n\n        $el.prop('disabled', false);\n        $el.html(options.map(function (option) {\n            return \"<option value='\" + option + \"'>\" + option + \"</option>\"\n        }));\n\n        if (defaultVal) $el.val(defaultVal);\n    })\n};\n\n//# sourceURL=webpack:///./views/select.js?");

/***/ })

/******/ });